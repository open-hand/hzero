<?xml version="1.0" encoding="UTF-8"?>
<services>
    <service name="hzero-platform">
        <data>
            UPDATE hpfm_bank_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_bank hb WHERE hb.bank_id = hbt.bank_id)
            WHERE hbt.bank_id IN (SELECT bank_id FROM hpfm_bank);

            UPDATE hpfm_calendar_hldy_detail hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_calendar hb WHERE hb.calendar_id = hbt.calendar_id )
            WHERE hbt.calendar_id IN (SELECT calendar_id FROM hpfm_calendar);

            UPDATE hpfm_calendar_holiday_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_calendar_holiday hb WHERE hb.holiday_id = hbt.holiday_id )
            WHERE hbt.holiday_id IN (SELECT holiday_id FROM hpfm_calendar_holiday);

            UPDATE hpfm_inv_organization_es hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_inv_organization hb WHERE hb.organization_id = hbt.organization_id )
            WHERE hbt.organization_id IN (SELECT organization_id FROM hpfm_inv_organization);

            UPDATE hpfm_inventory_es hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_inventory hb WHERE hb.inventory_id = hbt.inventory_id )
            WHERE hbt.inventory_id IN (SELECT inventory_id FROM hpfm_inventory);

            UPDATE hpfm_lov_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_lov hb WHERE hb.lov_id = hbt.lov_id )
            WHERE hbt.lov_id IN (SELECT lov_id FROM hpfm_lov);


            UPDATE hpfm_lov_value_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_lov_value hb WHERE hb.lov_value_id = hbt.lov_value_id )
            WHERE hbt.lov_value_id IN (SELECT lov_value_id FROM hpfm_lov_value);

            UPDATE hpfm_operation_unit_es hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_operation_unit hb WHERE hb.ou_id = hbt.ou_id )
            WHERE hbt.ou_id IN (SELECT ou_id FROM hpfm_operation_unit);

            UPDATE hpfm_period_set_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_period_set hb WHERE hb.period_set_id = hbt.period_set_id )
            WHERE hbt.period_set_id IN (SELECT period_set_id FROM hpfm_period_set);

            UPDATE hpfm_position_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_position hb WHERE hb.position_id = hbt.position_id )
            WHERE hbt.position_id IN (SELECT position_id FROM hpfm_position);

            UPDATE hpfm_pur_agent_es hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_purchase_agent hb WHERE hb.purchase_agent_id = hbt.pur_agent_id )
            WHERE hbt.pur_agent_id IN (SELECT purchase_agent_id FROM hpfm_purchase_agent);

            UPDATE hpfm_pur_organization_es hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_purchase_organization hb WHERE hb.purchase_org_id = hbt.purchase_org_id )
            WHERE hbt.purchase_org_id IN (SELECT purchase_org_id FROM hpfm_purchase_organization);

            UPDATE hpfm_purchase_agent_user hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_purchase_agent hb WHERE hb.purchase_agent_id = hbt.purchase_agent_id )
            WHERE hbt.purchase_agent_id IN (SELECT purchase_agent_id FROM hpfm_purchase_agent);

            UPDATE hpfm_region_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_region hb WHERE hb.region_id = hbt.region_id )
            WHERE hbt.region_id IN (SELECT region_id FROM hpfm_region);

            UPDATE hpfm_static_text_value hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_static_text hb WHERE hb.text_id = hbt.text_id )
            WHERE hbt.text_id IN (SELECT text_id FROM hpfm_static_text);

            UPDATE hpfm_tax_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_tax hb WHERE hb.tax_id = hbt.tax_id )
            WHERE hbt.tax_id IN (SELECT tax_id FROM hpfm_tax);

            UPDATE hpfm_uom_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_uom hb WHERE hb.uom_id = hbt.uom_id )
            WHERE hbt.uom_id IN (SELECT uom_id FROM hpfm_uom);

            UPDATE hpfm_uom_type_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_uom_type hb WHERE hb.uom_type_id = hbt.uom_type_id )
            WHERE hbt.uom_type_id IN (SELECT uom_type_id FROM hpfm_uom_type);

            UPDATE hpfm_data_hierarchy_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_data_hierarchy hb WHERE hb.data_hierarchy_id = hbt.data_hierarchy_id )
            WHERE hbt.data_hierarchy_id IN (SELECT data_hierarchy_id FROM hpfm_data_hierarchy);

            UPDATE hpfm_exchange_rate_type_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_exchange_rate_type hb WHERE hb.rate_type_id = hbt.rate_type_id )
            WHERE hbt.rate_type_id IN (SELECT rate_type_id FROM hpfm_exchange_rate_type);

            UPDATE hpfm_industry_category_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_industry_category hb WHERE hb.category_id = hbt.category_id )
            WHERE hbt.category_id IN (SELECT category_id FROM hpfm_industry_category);

            UPDATE hpfm_industry_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_industry hb WHERE hb.industry_id = hbt.industry_id )
            WHERE hbt.industry_id IN (SELECT industry_id FROM hpfm_industry);

            UPDATE hpfm_inv_location_es hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_location hb WHERE hb.location_id = hbt.location_id )
            WHERE hbt.location_id IN (SELECT location_id FROM hpfm_location);

            UPDATE hpfm_unit_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_unit hb WHERE hb.unit_id = hbt.unit_id )
            WHERE hbt.unit_id IN (SELECT unit_id FROM hpfm_unit);

            UPDATE hpfm_lov_view_header_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_lov_view_header hb WHERE hb.view_header_id = hbt.view_header_id )
            WHERE hbt.view_header_id IN (SELECT view_header_id FROM hpfm_lov_view_header);

            UPDATE hpfm_lov_view_line_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM hpfm_lov_view_line hb WHERE hb.view_line_id = hbt.view_line_id )
            WHERE hbt.view_line_id IN (SELECT view_line_id FROM hpfm_lov_view_line);

            UPDATE hiam_doc_type_assign hdta
            SET hdta.tenant_id = ( SELECT hdt.tenant_id FROM hiam_doc_type hdt WHERE hdt.doc_type_id = hdta.doc_type_id)
            WHERE hdta.doc_type_id in ( SELECT doc_type_id FROM hiam_doc_type);

            UPDATE hiam_doc_type_auth_dim hdtad
            SET hdtad.tenant_id = ( SELECT hdt.tenant_id FROM hiam_doc_type hdt WHERE hdt.doc_type_id = hdtad.doc_type_id)
            WHERE hdtad.doc_type_id in ( SELECT doc_type_id FROM hiam_doc_type);

            UPDATE hiam_doc_type_permission hdtp
            SET hdtp.tenant_id = ( SELECT hdtad.tenant_id FROM hiam_doc_type_auth_dim hdtad WHERE hdtad.auth_dim_id = hdtp.auth_dim_id)
            WHERE hdtp.auth_dim_id in ( SELECT auth_dim_id FROM hiam_doc_type_auth_dim);

            UPDATE hiam_role_authority hra
            SET hra.tenant_id = ( SELECT hdt.tenant_id FROM hiam_doc_type hdt WHERE hdt.doc_type_id = hra.auth_doc_type_id)
            WHERE hra.auth_doc_type_id in ( SELECT doc_type_id FROM hiam_doc_type);

            UPDATE hiam_role_authority_line hral
            SET hral.tenant_id = ( SELECT hra.tenant_id FROM hiam_role_authority hra WHERE hral.role_auth_id = hra.role_auth_id)
            WHERE hral.role_auth_id in ( SELECT role_auth_id FROM hiam_role_authority);

            UPDATE hiam_sec_grp_tl hsgt
            SET hsgt.tenant_id = ( SELECT hsg.tenant_id FROM hiam_sec_grp hsg WHERE hsg.sec_grp_id = hsgt.sec_grp_id)
            WHERE hsgt.sec_grp_id in ( SELECT sec_grp_id FROM hiam_sec_grp);

            UPDATE hiam_user_open_account huoa
            SET huoa.tenant_id = ( SELECT iu.organization_id FROM iam_user iu WHERE iu.login_name = huoa.username)
            WHERE huoa.username in ( SELECT login_name FROM iam_user);

            UPDATE hiam_user_info hui
            SET hui.tenant_id = ( SELECT iu.organization_id FROM iam_user iu WHERE iu.id = hui.user_id)
            WHERE hui.user_id in ( SELECT id FROM iam_user);

            UPDATE hpfm_code_rule_dist hcrd
            SET hcrd.tenant_id = ( SELECT hcr.tenant_id FROM hpfm_code_rule hcr WHERE hcr.rule_id = hcrd.rule_id)
            WHERE hcrd.rule_id in ( SELECT rule_id FROM hpfm_code_rule);

            UPDATE hpfm_code_rule_detail hcrd
            SET hcrd.tenant_id = ( SELECT hcrd1.tenant_id FROM hpfm_code_rule_dist hcrd1 WHERE hcrd.rule_dist_id = hcrd1.rule_dist_id)
            WHERE hcrd.rule_dist_id in ( SELECT rule_dist_id FROM hpfm_code_rule_dist);

            UPDATE hpfm_code_rule_value hcrv
            SET hcrv.tenant_id = ( SELECT hcrd.tenant_id FROM hpfm_code_rule_detail hcrd WHERE hcrd.rule_detail_id = hcrv.rule_detail_id)
            WHERE hcrv.rule_detail_id in ( SELECT rule_detail_id FROM hpfm_code_rule_detail);

            UPDATE hpfm_country_tl hct
            SET hct.tenant_id = ( SELECT hc.tenant_id FROM hpfm_country hc WHERE hct.country_id = hc.country_id)
            WHERE hct.country_id in ( SELECT country_id FROM hpfm_country);

            UPDATE hpfm_currency_tl hct
            SET hct.tenant_id = ( SELECT hc.tenant_id FROM hpfm_currency hc WHERE hct.currency_id = hc.currency_id)
            WHERE hct.currency_id in ( SELECT currency_id FROM hpfm_currency);

            UPDATE hpfm_dashboard_card_clause hdcc
            SET hdcc.tenant_id = ( SELECT hdc.tenant_id FROM hpfm_dashboard_card hdc WHERE hdcc.card_id = hdc.id)
            WHERE hdcc.card_id in ( SELECT id FROM hpfm_dashboard_card);

            UPDATE hpfm_dashboard_card_tl hdct
            SET hdct.tenant_id = ( SELECT hdc.tenant_id FROM hpfm_dashboard_card hdc WHERE hdc.id = hdct.id)
            WHERE hdct.id in ( SELECT id FROM hpfm_dashboard_card);

            UPDATE hpfm_dashboard_clause_tl hdct
            SET hdct.tenant_id = ( SELECT hdc.tenant_id FROM hpfm_dashboard_clause hdc WHERE hdct.clause_id = hdc.clause_id)
            WHERE hdct.clause_id in ( SELECT clause_id FROM hpfm_dashboard_clause);

            UPDATE hpfm_dashboard_role_card hdrc
            SET hdrc.tenant_id = ( SELECT hdc.tenant_id FROM hpfm_dashboard_card hdc WHERE hdc.id = hdrc.card_id)
            WHERE hdrc.card_id in ( SELECT id FROM hpfm_dashboard_card);

            UPDATE hpfm_event_rule her
            SET her.tenant_id = ( SELECT he.tenant_id FROM hpfm_event he WHERE her.event_id = he.event_id)
            WHERE her.event_id in ( SELECT event_id FROM hpfm_event);

            UPDATE hpfm_form_header_tl hfht
            SET hfht.tenant_id = ( SELECT hfh.tenant_id FROM hpfm_form_header hfh WHERE hfht.form_header_id = hfh.form_header_id)
            WHERE hfht.form_header_id in ( SELECT form_header_id FROM hpfm_form_header);

            UPDATE hpfm_form_line_tl hflt
            SET hflt.tenant_id = ( SELECT hfl.tenant_id FROM hpfm_form_line hfl WHERE hflt.form_line_id = hfl.form_line_id)
            WHERE hflt.form_line_id in ( SELECT form_line_id FROM hpfm_form_line);

            UPDATE hpfm_permission_rel hpr
            SET hpr.tenant_id = ( SELECT hpr1.tenant_id FROM hpfm_permission_rule hpr1 WHERE hpr.rule_id = hpr1.rule_id)
            WHERE hpr.rule_id in ( SELECT rule_id FROM hpfm_permission_rule);

            UPDATE hpfm_profile_value hpv
            SET hpv.tenant_id = ( SELECT hp.tenant_id FROM hpfm_profile hp WHERE hp.profile_id = hpv.profile_id)
            WHERE hpv.profile_id in ( SELECT profile_id FROM hpfm_profile);

            UPDATE iam_menu_permission imp
            SET imp.tenant_id = ( SELECT im.h_tenant_id FROM iam_menu im WHERE im.id = imp.menu_id)
            WHERE imp.menu_id in ( SELECT id FROM iam_menu);

            UPDATE iam_menu_tl imt
            SET imt.h_tenant_id = ( SELECT im.h_tenant_id FROM iam_menu im WHERE im.id = imt.id)
            WHERE imt.id in ( SELECT id FROM iam_menu);

            UPDATE iam_role_permission irp
            SET irp.tenant_id = ( SELECT ir.h_tenant_id FROM iam_role ir WHERE ir.id = irp.role_id)
            WHERE irp.role_id in ( SELECT id FROM iam_role);

            UPDATE iam_role_tl irt
            SET irt.h_tenant_id = ( SELECT ir.h_tenant_id FROM iam_role ir WHERE ir.id = irt.id)
            WHERE irt.id in ( SELECT id FROM iam_role);

            UPDATE oauth_ldap_history olh
            SET olh.tenant_id = ( SELECT ol.organization_id FROM oauth_ldap ol WHERE olh.ldap_id = ol.id)
            WHERE olh.ldap_id in ( SELECT id FROM oauth_ldap);

            UPDATE oauth_ldap_error_user oleu
            SET oleu.tenant_id = ( SELECT olh.tenant_id FROM oauth_ldap_history olh WHERE oleu.LDAP_HISTORY_ID = olh.id)
            WHERE oleu.LDAP_HISTORY_ID in ( SELECT id FROM oauth_ldap_history);

            UPDATE oauth_password_history oph
            SET oph.tenant_id = ( SELECT iu.organization_id FROM iam_user iu WHERE iu.id = oph.user_id)
            WHERE oph.user_id in ( SELECT id FROM iam_user);

            UPDATE hpfm_datasource hd
            SET hd.db_type = 'MYSQL'
            WHERE hd.db_type = 'MySql';

            UPDATE hpfm_datasource hd
            SET hd.db_type = 'SQLSERVER'
            WHERE hd.db_type = 'SqlServer';

            UPDATE hpfm_datasource hd
            SET hd.db_type = 'ORACLE'
            WHERE hd.db_type = 'Oracle';

            UPDATE hpfm_datasource hd
            SET hd.db_type = 'TIDB'
            WHERE hd.db_type = 'TiDB';

            INSERT INTO hpfm_rule_script_tl ( rule_script_id, lang, script_description, tenant_id ) SELECT
            rule_script_id,
            lang,
            script_description,
            tenant_id
            FROM
            ( SELECT rule_script_id, 'zh_CN' AS lang, script_description, tenant_id FROM hpfm_rule_script UNION SELECT rule_script_id, 'en_US', script_description, tenant_id FROM hpfm_rule_script ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_rule_script_tl WHERE rule_script_id = t.rule_script_id and lang = t.lang);

            INSERT INTO hiam_user_group_tl ( user_group_id, lang, group_name, tenant_id ) SELECT
            user_group_id,
            lang,
            group_name,
            tenant_id
            FROM
            ( SELECT user_group_id, 'zh_CN' AS lang, group_name, tenant_id FROM hiam_user_group UNION SELECT user_group_id, 'en_US', group_name, tenant_id FROM hiam_user_group ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_user_group_tl WHERE user_group_id = t.user_group_id and lang = t.lang);

            INSERT INTO hpfm_permission_rule_tl ( rule_id, lang, rule_name, tenant_id ) SELECT
            rule_id,
            lang,
            rule_name,
            tenant_id
            FROM
            ( SELECT rule_id, 'zh_CN' AS lang, rule_name, tenant_id FROM hpfm_permission_rule UNION SELECT rule_id, 'en_US', rule_name, tenant_id FROM hpfm_permission_rule ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_permission_rule_tl WHERE rule_id = t.rule_id and lang = t.lang);

            INSERT INTO hpfm_profile_tl ( profile_id, lang, description, tenant_id ) SELECT
            profile_id,
            lang,
            description,
            tenant_id
            FROM
            ( SELECT profile_id, 'zh_CN' AS lang, description, tenant_id FROM hpfm_profile UNION SELECT profile_id, 'en_US', description, tenant_id FROM hpfm_profile ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_profile_tl WHERE profile_id = t.profile_id and lang = t.lang);

            INSERT INTO hpfm_api_cusz_tl ( customize_id, lang, customize_name, tenant_id ) SELECT
            customize_id,
            lang,
            customize_name,
            tenant_id
            FROM
            ( SELECT customize_id, 'zh_CN' AS lang, customize_name, tenant_id FROM hpfm_api_cusz UNION SELECT customize_id, 'en_US', customize_name, tenant_id FROM hpfm_api_cusz ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_api_cusz_tl WHERE customize_id = t.customize_id and lang = t.lang);

            INSERT INTO hpfm_config_tl ( config_id, lang, config_value, tenant_id ) (
            SELECT
            hc.config_id,
            'zh_CN',
            hc.config_value,
            hc.tenant_id
            FROM
            hpfm_config hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_config_tl hct WHERE hct.config_id = hc.config_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hpfm_config_tl ( config_id, lang, config_value, tenant_id ) (
            SELECT
            hc.config_id,
            'en_US',
            hc.config_value,
            hc.tenant_id
            FROM
            hpfm_config hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_config_tl hct WHERE hct.config_id = hc.config_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hiam_doc_type_tl ( doc_type_id, lang, doc_type_name, tenant_id ) (
            SELECT
            hc.doc_type_id,
            'zh_CN',
            hc.doc_type_name,
            hc.tenant_id
            FROM
            hiam_doc_type hc
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_doc_type_tl hct WHERE hct.doc_type_id = hc.doc_type_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hiam_doc_type_tl ( doc_type_id, lang, doc_type_name, tenant_id ) (
            SELECT
            hc.doc_type_id,
            'en_US',
            hc.doc_type_name,
            hc.tenant_id
            FROM
            hiam_doc_type hc
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_doc_type_tl hct WHERE hct.doc_type_id = hc.doc_type_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hiam_doc_type_dimension_tl ( dimension_id, lang, dimension_name, tenant_id ) (
            SELECT
            hc.dimension_id,
            'zh_CN',
            hc.dimension_name,
            hc.tenant_id
            FROM
            hiam_doc_type_dimension hc
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_doc_type_dimension_tl hct WHERE hct.dimension_id = hc.dimension_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hiam_doc_type_dimension_tl ( dimension_id, lang, dimension_name, tenant_id ) (
            SELECT
            hc.dimension_id,
            'en_US',
            hc.dimension_name,
            hc.tenant_id
            FROM
            hiam_doc_type_dimension hc
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_doc_type_dimension_tl hct WHERE hct.dimension_id = hc.dimension_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hiam_open_app_tl ( open_app_id, lang, app_name, organization_id ) (
            SELECT
            hc.open_app_id,
            'zh_CN',
            hc.app_name,
            hc.organization_id
            FROM
            hiam_open_app hc
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_open_app_tl hct WHERE hct.open_app_id = hc.open_app_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hiam_open_app_tl ( open_app_id, lang, app_name, organization_id ) (
            SELECT
            hc.open_app_id,
            'en_US',
            hc.app_name,
            hc.organization_id
            FROM
            hiam_open_app hc
            WHERE NOT EXISTS ( SELECT 1 FROM hiam_open_app_tl hct WHERE hct.open_app_id = hc.open_app_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hpfm_datasource_driver_tl ( driver_id, lang, driver_name, tenant_id ) (
            SELECT
            hc.driver_id,
            'zh_CN',
            hc.driver_name,
            hc.tenant_id
            FROM
            hpfm_datasource_driver hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_datasource_driver_tl hct WHERE hct.driver_id = hc.driver_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hpfm_datasource_driver_tl ( driver_id, lang, driver_name, tenant_id ) (
            SELECT
            hc.driver_id,
            'en_US',
            hc.driver_name,
            hc.tenant_id
            FROM
            hpfm_datasource_driver hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_datasource_driver_tl hct WHERE hct.driver_id = hc.driver_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hpfm_datasource_tl ( datasource_id, lang, description, tenant_id ) (
            SELECT
            hc.datasource_id,
            'zh_CN',
            hc.description,
            hc.tenant_id
            FROM
            hpfm_datasource hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_datasource_tl hct WHERE hct.datasource_id = hc.datasource_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hpfm_datasource_tl ( datasource_id, lang, description, tenant_id ) (
            SELECT
            hc.datasource_id,
            'en_US',
            hc.description,
            hc.tenant_id
            FROM
            hpfm_datasource hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_datasource_tl hct WHERE hct.datasource_id = hc.datasource_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hpfm_gantt_tl ( gantt_id, lang, gantt_name, tenant_id ) (
            SELECT
            hc.gantt_id,
            'zh_CN',
            hc.gantt_name,
            hc.tenant_id
            FROM
            hpfm_gantt hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_gantt_tl hct WHERE hct.gantt_id = hc.gantt_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hpfm_gantt_tl ( gantt_id, lang, gantt_name, tenant_id ) (
            SELECT
            hc.gantt_id,
            'en_US',
            hc.gantt_name,
            hc.tenant_id
            FROM
            hpfm_gantt hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_gantt_tl hct WHERE hct.gantt_id = hc.gantt_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hpfm_gantt_tl ( gantt_id, lang, gantt_name, tenant_id ) (
            SELECT
            hc.gantt_id,
            'en_US',
            hc.gantt_name,
            hc.tenant_id
            FROM
            hpfm_gantt hc
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_gantt_tl hct WHERE hct.gantt_id = hc.gantt_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hpfm_event_tl ( event_id, lang, event_description, tenant_id ) (
            SELECT
            he.event_id,
            'zh_CN',
            he.event_description,
            he.tenant_id
            FROM
            hpfm_event he
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_event_tl het WHERE het.event_id = he.event_id AND het.lang = 'zh_CN' )
            );

            INSERT INTO hpfm_event_tl ( event_id, lang, event_description, tenant_id ) (
            SELECT
            he.event_id,
            'en_US',
            he.event_description,
            he.tenant_id
            FROM
            hpfm_event he
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_event_tl het WHERE het.event_id = he.event_id AND het.lang = 'en_US' )
            );

            INSERT INTO hpfm_template_tl ( template_id, lang, template_name, tenant_id ) (
            SELECT
            ht.template_id,
            'zh_CN',
            ht.template_name,
            ht.tenant_id
            FROM
            hpfm_template ht
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_template_tl htt WHERE htt.template_id = ht.template_id AND htt.lang = 'zh_CN' )
            );

            INSERT INTO hpfm_template_tl ( template_id, lang, template_name, tenant_id ) (
            SELECT
            ht.template_id,
            'en_US',
            ht.template_name,
            ht.tenant_id
            FROM
            hpfm_template ht
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_template_tl htt WHERE htt.template_id = ht.template_id AND htt.lang = 'en_US' )
            );

            INSERT INTO hpfm_code_rule_tl ( rule_id, lang, rule_name, tenant_id ) SELECT
            rule_id,
            lang,
            rule_name,
            tenant_id
            FROM
            ( SELECT rule_id, 'zh_CN' AS lang, rule_name, tenant_id FROM hpfm_code_rule UNION SELECT rule_id, 'en_US', rule_name, tenant_id FROM hpfm_code_rule ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hpfm_code_rule_tl WHERE rule_id = t.rule_id and lang = t.lang);

            UPDATE smdm_cost_center_tl hbt
            SET hbt.tenant_id = ( SELECT hb.tenant_id FROM smdm_cost_center hb WHERE hb.cost_id = hbt.cost_id)
            WHERE hbt.cost_id IN (SELECT cost_id FROM smdm_cost_center);

            INSERT INTO hiam_domain_assign ( domain_assign_id, domain_id, tenant_id, company_id ) (
            SELECT
            hiam_domain_assign_S.nextval,
            hd.domain_id,
            hd.tenant_id,
            hd.company_id
            FROM
            hiam_domain hd
            WHERE
            NOT EXISTS ( SELECT 1 FROM hiam_domain_assign hda WHERE hda.domain_id = hd.domain_id AND hda.tenant_id = hd.tenant_id )
            )
        </data>
    </service>
    <service name="hzero-file">
        <data>
            UPDATE hfle_file_edit_log hfel
            SET hfel.tenant_id = ( SELECT hf.tenant_id FROM hfle_file hf WHERE hfel.file_id = hf.file_id)
            WHERE hfel.file_id in ( SELECT file_id FROM hfle_file);
        </data>
    </service>
    <service name="hzero-nlp">
        <data>
            INSERT INTO hnlp_template_tl ( TEMPLATE_ID, LANG, TEMPLATE_NAME, TENANT_ID ) SELECT
            TEMPLATE_ID,
            LANG,
            TEMPLATE_NAME,
            TENANT_ID
            FROM
            ( SELECT TEMPLATE_ID, 'zh_CN' AS LANG, TEMPLATE_NAME, TENANT_ID FROM hnlp_template UNION SELECT TEMPLATE_ID, 'en_US', TEMPLATE_NAME, TENANT_ID FROM hnlp_template ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hnlp_template_tl WHERE TEMPLATE_ID = t.TEMPLATE_ID and LANG = t.LANG)
        </data>
    </service>
    <service name="hzero-report">
        <data>
            INSERT INTO hrpt_template_tl ( template_id, lang, template_name, tenant_id ) (
            SELECT
            hc.template_id,
            'zh_CN',
            hc.template_name,
            hc.tenant_id
            FROM
            hrpt_template hc
            WHERE NOT EXISTS ( SELECT 1 FROM hrpt_template_tl hct WHERE hct.template_id = hc.template_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hrpt_template_tl ( template_id, lang, template_name, tenant_id ) (
            SELECT
            hc.template_id,
            'en_US',
            hc.template_name,
            hc.tenant_id
            FROM
            hrpt_template hc
            WHERE NOT EXISTS ( SELECT 1 FROM hrpt_template_tl hct WHERE hct.template_id = hc.template_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hrpt_report_tl ( report_id, lang, report_name, tenant_id ) (
            SELECT
            hc.report_id,
            'zh_CN',
            hc.report_name,
            hc.tenant_id
            FROM
            hrpt_report hc
            WHERE NOT EXISTS ( SELECT 1 FROM hrpt_report_tl hct WHERE hct.report_id = hc.report_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hrpt_report_tl ( report_id, lang, report_name, tenant_id ) (
            SELECT
            hc.report_id,
            'en_US',
            hc.report_name,
            hc.tenant_id
            FROM
            hrpt_report hc
            WHERE NOT EXISTS ( SELECT 1 FROM hrpt_report_tl hct WHERE hct.report_id = hc.report_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hrpt_label_template_tl ( label_template_id, lang, template_name, tenant_id ) SELECT
            label_template_id,
            lang,
            template_name,
            tenant_id
            FROM
            ( SELECT label_template_id, 'zh_CN' AS lang, template_name, tenant_id FROM hrpt_label_template UNION SELECT label_template_id, 'en_US', template_name, tenant_id FROM hrpt_label_template ) t
            WHERE
            NOT EXISTS ( SELECT 1 FROM hrpt_label_template_tl WHERE label_template_id = t.label_template_id AND lang = t.lang );
        </data>
    </service>
    <service name="hzero-message">
        <data>
            UPDATE hmsg_email_filter hef
            SET hef.tenant_id = ( SELECT hes.tenant_id FROM hmsg_email_server hes WHERE hes.server_id = hef.server_id)
            WHERE hef.server_id in ( SELECT server_id FROM hmsg_email_server);

            UPDATE hmsg_receive_config_tl hrct
            SET hrct.tenant_id = ( SELECT hrc.tenant_id FROM hmsg_receive_config hrc WHERE hrct.receive_id = hrc.receive_id)
            WHERE hrct.receive_id in ( SELECT receive_id FROM hmsg_receive_config);

            UPDATE hmsg_template_arg hta
            SET hta.tenant_id = ( SELECT hmt.tenant_id FROM hmsg_message_template hmt WHERE hta.template_id = hmt.template_id)
            WHERE hta.template_id in ( SELECT template_id FROM hmsg_message_template);

            UPDATE hmsg_template_arg_tl htat
            SET htat.tenant_id = ( SELECT hta.tenant_id FROM hmsg_template_arg hta WHERE hta.arg_id = htat.arg_id)
            WHERE htat.arg_id in ( SELECT arg_id FROM hmsg_template_arg);

            UPDATE hmsg_template_server_line htsl
            SET htsl.tenant_id = ( SELECT hts.tenant_id FROM hmsg_template_server hts WHERE hts.temp_server_id = htsl.temp_server_id)
            WHERE htsl.temp_server_id in ( SELECT temp_server_id FROM hmsg_template_server);

            INSERT INTO hmsg_email_server_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_email_server UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_email_server ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_email_server_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_sms_server_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_sms_server UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_sms_server ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_sms_server_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_wechat_official_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_wechat_official UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_wechat_official ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_wechat_official_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_wechat_enterprise_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_wechat_enterprise UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_wechat_enterprise ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_wechat_enterprise_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_dingtalk_server_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_dingtalk_server UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_dingtalk_server ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_dingtalk_server_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_webhook_server_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_webhook_server UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_webhook_server ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_webhook_server_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_call_server_tl ( server_id, lang, server_name, tenant_id ) SELECT
            server_id,
            lang,
            server_name,
            tenant_id
            FROM
            ( SELECT server_id, 'zh_CN' AS lang, server_name, tenant_id FROM hmsg_call_server UNION SELECT server_id, 'en_US', server_name, tenant_id FROM hmsg_call_server ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_call_server_tl WHERE server_id = t.server_id and lang = t.lang);

            INSERT INTO hmsg_template_server_tl ( temp_server_id, lang, message_name, tenant_id ) SELECT
            temp_server_id,
            lang,
            message_name,
            tenant_id
            FROM
            ( SELECT temp_server_id, 'zh_CN' AS lang, message_name, tenant_id FROM hmsg_template_server UNION SELECT temp_server_id, 'en_US', message_name, tenant_id FROM hmsg_template_server ) t
            WHERE NOT EXISTS ( SELECT 1 FROM hmsg_template_server_tl WHERE temp_server_id = t.temp_server_id and lang = t.lang);
        </data>
    </service>
    <service name="hzero-scheduler">
        <data>
            UPDATE hsdr_executor_config hec
            SET hec.tenant_id = ( SELECT he.tenant_id FROM hsdr_executor he WHERE hec.executor_id = he.executor_id)
            WHERE hec.executor_id in ( SELECT executor_id FROM hsdr_executor);

            INSERT INTO hsdr_conc_executable_tl ( executable_id, lang, executable_name, tenant_id ) (
            SELECT
            hc.executable_id,
            'zh_CN',
            hc.executable_name,
            hc.tenant_id
            FROM
            hsdr_conc_executable hc
            WHERE NOT EXISTS ( SELECT 1 FROM hsdr_conc_executable_tl hct WHERE hct.executable_id = hc.executable_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hsdr_conc_executable_tl ( executable_id, lang, executable_name, tenant_id ) (
            SELECT
            hc.executable_id,
            'en_US',
            hc.executable_name,
            hc.tenant_id
            FROM
            hsdr_conc_executable hc
            WHERE NOT EXISTS ( SELECT 1 FROM hsdr_conc_executable_tl hct WHERE hct.executable_id = hc.executable_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hsdr_concurrent_tl ( concurrent_id, lang, conc_name, tenant_id ) (
            SELECT
            hc.concurrent_id,
            'zh_CN',
            hc.conc_name,
            hc.tenant_id
            FROM
            hsdr_concurrent hc
            WHERE NOT EXISTS ( SELECT 1 FROM hsdr_concurrent_tl hct WHERE hct.concurrent_id = hc.concurrent_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hsdr_concurrent_tl ( concurrent_id, lang, conc_name, tenant_id ) (
            SELECT
            hc.concurrent_id,
            'en_US',
            hc.conc_name,
            hc.tenant_id
            FROM
            hsdr_concurrent hc
            WHERE NOT EXISTS ( SELECT 1 FROM hsdr_concurrent_tl hct WHERE hct.concurrent_id = hc.concurrent_id AND hct.lang = 'en_US' )
            );

            INSERT INTO hsdr_executor_tl ( executor_id, lang, executor_name, tenant_id ) (
            SELECT
            hc.executor_id,
            'zh_CN',
            hc.executor_name,
            hc.tenant_id
            FROM
            hsdr_executor hc
            WHERE NOT EXISTS ( SELECT 1 FROM hsdr_executor_tl hct WHERE hct.executor_id = hc.executor_id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO hsdr_executor_tl ( executor_id, lang, executor_name, tenant_id ) (
            SELECT
            hc.executor_id,
            'en_US',
            hc.executor_name,
            hc.tenant_id
            FROM
            hsdr_executor hc
            WHERE NOT EXISTS ( SELECT 1 FROM hsdr_executor_tl hct WHERE hct.executor_id = hc.executor_id AND hct.lang = 'en_US' )
            );
        </data>
    </service>
    <service name="hzero-import">
        <data>
            UPDATE himp_template_target htt
            SET htt.tenant_id = ( SELECT hth.tenant_id FROM himp_template_header hth WHERE hth.id = htt.header_id)
            WHERE htt.header_id in ( SELECT id FROM himp_template_header);

            INSERT INTO himp_template_target_tl ( id, lang, sheet_name, tenant_id ) (
            SELECT
            hc.id,
            'zh_CN',
            hc.sheet_name,
            hc.tenant_id
            FROM
            himp_template_target hc
            WHERE NOT EXISTS ( SELECT 1 FROM himp_template_target_tl hct WHERE hct.id = hc.id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO himp_template_target_tl ( id, lang, sheet_name, tenant_id ) (
            SELECT
            hc.id,
            'en_US',
            hc.sheet_name,
            hc.tenant_id
            FROM
            himp_template_target hc
            WHERE NOT EXISTS ( SELECT 1 FROM himp_template_target_tl hct WHERE hct.id = hc.id AND hct.lang = 'en_US' )
            );

            INSERT INTO himp_template_header_tl ( id, lang, template_name, tenant_id ) (
            SELECT
            hc.id,
            'zh_CN',
            hc.template_name,
            hc.tenant_id
            FROM
            himp_template_header hc
            WHERE NOT EXISTS ( SELECT 1 FROM himp_template_header_tl hct WHERE hct.id = hc.id AND hct.lang = 'zh_CN' )
            );

            INSERT INTO himp_template_header_tl ( id, lang, template_name, tenant_id ) (
            SELECT
            hc.id,
            'en_US',
            hc.template_name,
            hc.tenant_id
            FROM
            himp_template_header hc
            WHERE NOT EXISTS ( SELECT 1 FROM himp_template_header_tl hct WHERE hct.id = hc.id AND hct.lang = 'en_US' )
            );
        </data>
    </service>
    <service name="hzero-monitor">
        <data>
            UPDATE hmnt_audit_op_log_line haoll
            SET haoll.tenant_id = ( SELECT haol.tenant_id FROM hmnt_audit_op_log haol WHERE haol.log_id = haoll.log_id)
            WHERE haoll.log_id in ( SELECT log_id FROM hmnt_audit_op_log);
        </data>
    </service>
</services>