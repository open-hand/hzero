# error entitty -> entity
#enitty:
#  group:
#    name: 集团名称
entity:
  company:
    code: 公司编码
    name: 公司名称
    tag: 公司
  department:
    code: 部门编码
    name: 部门名称
  employee:
    code: 员工编码
    employeeCode: 员工编码
    name: 员工姓名
  group:
    code: 集团编码
    name: 集团名称
  lang:
    code: 语言编码
    description: 语言描述
    maintain: 语言维护
    name: 语言名称
    tag: 语言
  organization:
    code: 组织编码
    company: 关联企业
    name: 组织名称
    type: 组织类型
  position:
    code: 岗位编码
    name: 岗位名称
  template:
    code: 模板代码
    detail: 模板明细
    name: 模板名称
    type: 模板类型
  tenant:
    code: 租户编码
    create: 租户新建
    edit: 租户编辑
    maintain: 租户维护
    name: 租户名称
    tag: 租户
  time:
    time.day: 日
    time.hour: 时
    time.minute: 分
    time.second: 秒
  user:
    code: 用户编码
    name: 用户姓名
hadm:
  common:
    model.common.serviceCode: 服务编码
hagd:
  saga:
    model.saga.code: 编码
    model.saga.description: 描述
    model.saga.service: 所属微服务
    view.title.header: 事务定义
    view.title.modal: '{code}-事务详情'
    view.title.sagaChart: 事务定义图
    view.title.sagaChart;: 事务定义图
  sagaImage:
    model.image.actualEndTime: 实际完成时间
    model.image.actualStartTime: 实际开始时间
    model.image.concurrentLimitNum: 最大并发数
    model.image.concurrentLimitPolicy: 并发限制模式
    model.image.instanceLock: 运行的微服务实例
    model.image.maxRetryCount: 最大重试次数
    model.image.plannedStartTime: 计划执行时间
    model.image.retriedCount: 已重试次数
    model.image.seq: 序列
    model.image.service: 所属微服务
    model.image.task.description: 任务描述
    model.image.timeoutPolicy: 超时策略
    model.image.timeoutSeconds: 超时时间
    view.title.btnRetry: 重试
    view.title.btnUnLock: 解锁
    view.title.completed: 运行结果
    view.title.failed: 异常信息
    view.title.input: 输入数据
    view.title.output: 输出数据
    view.title.taskDetail: 任务详情
    view.title.taskRunDetail: 任务运行情况
  sagaInstance:
    model.sagaInstance.refId: 关联业务ID
    model.sagaInstance.refType: 关联事务类型
    model.sagaInstance.saga.endTime: 结束时间
    model.sagaInstance.saga.level: 触发层级
    model.sagaInstance.saga.sagaCode: 所属事务定义
    model.sagaInstance.saga.service: 所属微服务
    model.sagaInstance.sagaCode: 事务实例
    model.sagaInstance.startTime: 开始时间
    model.sagaInstance.status: 状态
    model.sagaInstance.status.completed: 完成
    model.sagaInstance.status.failed: 失败
    model.sagaInstance.status.nonConsumer: 未消费
    model.sagaInstance.status.queue: 队列中
    model.sagaInstance.status.running: 运行中
    model.sagaInstance.task.actualEndTime: 实际完成时间
    model.sagaInstance.task.endTime: 实际完成时间
    model.sagaInstance.task.plannedStartTime: 实际开始时间
    model.sagaInstance.task.retriedCount: 重试次数
    model.sagaInstance.task.sagaCode: 所属事务定义
    model.sagaInstance.task.sagaInstance: 所属事务实例
    model.sagaInstance.task.sagaInstanceCode: 所属事务实例
    model.sagaInstance.task.startTime: 实际开始时间
    model.sagaInstance.task.taskCode: 任务编码
    model.sagaInstance.task.taskInstanceCode: 任务编码
    view.title.btnDetail: 运行详情
    view.title.contentHeader: 事务实例状态总览
    view.title.contentHeader.saga: 事务
    view.title.contentHeader.task: 任务
    view.title.header: 事务实例
    view.title.modal: '{id}-事务实例详情'
    view.title.ref: 关联业务
    view.title.saga.completedTitle: 完成任务
    view.title.saga.failedTitle: 失败任务
    view.title.saga.queueTitle: 等待中任务
    view.title.saga.runningTitle: 进行中任务
# hap's intl
#hap:
#  undefined:
#    account.common.logintip: 请登录
#    activiti.category: 分类
#    activiti.selectposition: 工作流选择岗位
#    activiti.uniqueidentification: 唯一标识
#    api.accesslimit.accessfrequency: 次/分钟
#    api.accesslimit.flag: 启用限制
#    api.application.code: 应用代码
#    api.application.name: 应用名称
#    api.applicationserver.serverlist: 服务列表
#    api.invokerecord.apirequestbodyparameter: 内部调用参数
#    api.invokerecord.apiresponsecontent: 内部响应内容
#    api.invokerecord.apiresponsetime: 系统响应时间
#    api.invokerecord.details: 记录详情
#    api.invokerecord.invokeid: Request Id
#    api.invokerecord.record: 调用记录
#    api.invokerecord.requestbodyparameter: 外部调用参数
#    api.invokerecord.requesturl: 请求地址
#    api.invokerecord.responsecontent: 外部响应内容
#    api.invokerecord.responsetime: 服务响应时间
#    api.invokerecord.stacktrace: 异常信息
#    api.server.accesslimit: 访问限制
#    api.server.binding: 绑定
#    api.server.unbinding: 解绑
#    approvecandidaterule.code: 代码
#    approvecandidaterule.description: 描述
#    approvecandidaterule.expression: 表达式
#    approvechainline.name: 名称
#    approvestrategy.code: 代码
#    approvestrategy.condition: 通过条件
#    approvestrategy.description: 描述
#    asl.itemcode: 物料编码
#    asl.itemname: 物料描述
#    asl.plantname: 工厂
#    asl.primaryuom: 单位
#    asl.sitedescription: 供应商地点
#    asl.suppliercode: 供应商编码
#    asl.suppliername: 供应商名称
#    asliqccontrol.changeflag: 方案变更启用
#    asliqccontrol.consecutiveconforminglot: 连续合格批
#    asliqccontrol.enableflag: 有效性
#    asliqccontrol.isinspection: 内部启用
#    asliqccontrol.issuppinspection: 供应商启用
#    asliqccontrol.item: 物料
#    asliqccontrol.itemdescriptions: 物料描述
#    asliqccontrol.nonnconforminglot: 累计不合格批
#    asliqccontrol.plant: 工厂
#    asliqccontrol.plantname: 工厂
#    asliqccontrol.sampleplantypenext: 上次抽样计划
#    asliqccontrol.sampleplantypenow: 本次抽样计划
#    asliqccontrol.supplier: 供应商
#    asliqccontrol.suppliername: 供应商名称
#    asliqccontrol.suppliersitecode: 供应商地点
#    asliqccontrol.switchscore: 转移得分
#    attachcategory.allowedfilesize: 最大文件长度
#    attachcategory.allowedfilesize.help: '单位bytes (1k=1024 bytes),默认是0代表不限制。'
#    attachcategory.allowedfilesizedesc: 最大文件长度
#    attachcategory.allowedfiletype: 文件类型
#    attachcategory.allowedfiletype.help: 多个附件类型以分号分隔，例如".jpg;.jpeg;.png"
#    attachcategory.archive: 压缩
#    attachcategory.attachment: 附件
#    attachcategory.attachmentmanagement: 附件管理
#    attachcategory.beginupload: 开始上传
#    attachcategory.categoryname: 目录名称
#    attachcategory.categoryname.help: 例如"报销单附件"
#    attachcategory.categorypath: 存储路径
#    attachcategory.categorypath.help: 附件存放路径，例如"/u01/uploads"
#    attachcategory.categorytype: 目录类型
#    attachcategory.categorytype.filefolder: 附件目录
#    attachcategory.categorytype.folder: 目录文件夹
#    attachcategory.createattachmentdirectory: 创建附件目录
#    attachcategory.description: 目录描述
#    attachcategory.isunique: 附件是否唯一
#    attachcategory.leafflag: 节点标志
#    attachcategory.parentcategoryid: 父级目录ID
#    attachcategory.path: 路径
#    attachcategory.showfile: 显示附件下的文件
#    attachcategory.sourcekey: 业务主键值
#    attachcategory.sourcetype: 附件业务编码
#    attachcategory.sourcetype.help: '附件业务编码(必须唯一)，例如: EMPLOYEE_PHOTO。'
#    attachcategory.status: 状态
#    attachcategory.statusname: 状态
#    attachcategory.statusname.archived: 压缩
#    attachcategory.statusname.normal: 普通
#    attachment.attachmentid: 附着对象
#    attachment.attachmenttype: 附着对象类型
#    attachment.categoryid: 分类id
#    attachment.descriptions: 附着对象描述
#    attachment.endactivedate: 结束时间
#    attachment.name: 名称
#    attachment.normal: 附件等级
#    attachment.sourcekey: 键
#    attachment.sourcetype: 类型
#    attachment.startactivedate: 启用时间
#    attachment.status: 状态
#    attachmentgroup.attachmentgroupdescription: 附着对象组描述
#    attachmentgroup.attachmentgroupdetail: 附着对象组
#    audit.auditflag: 是否审计
#    audit.description: 描述
#    audit.entitycode: 实体代码
#    audit.entityid: 实体ID
#    business.rule.code: 权限代码
#    business.rule.description: 权限描述
#    businessruleheader.code: 代码
#    businessruleheader.description: 描述
#    businessruleheader.selectapprovaljurisdiction: 选择审批权限
#    businessruleline.conditions: 表达式
#    businessruleline.description: 规则描述
#    businessruleline.list: 权限列表
#    cegroup.cegroup: 控制要素组
#    cegroup.description: 描述
#    cegroup.statuscode: 状态
#    ceparameter.ceparameter: 控制要素
#    ceparameter.ceparameterid: 控制要素ID
#    ceparameter.ceparametername: 名称
#    ceparameter.remark: 描述
#    ceparameter.siteid: 站点ID
#    ceparameter.tenantid: 租户ID
#    ceparameter.uom: 单位
#    cerelationship.cegroupid: 控制要素组ID
#    cerelationship.ceparameterid: 控制要素ID
#    cerelationship.cerelationshipid: 控制要素关系id
#    cerelationship.siteid: 站点ID
#    cerelationship.tenantid: 租户ID
#    chart.chartcode: 控制图编码
#    chart.charttitle: 控制图标题
#    chart.charttype: 控制图类型
#    chart.charttypecontrol: 控制图复制
#    chart.description: 描述
#    chart.maxplotpoints: 最大绘点数
#    chart.subgroupsize: 子组大小
#    chart.triggermessage: 为所有违规创建消息
#    chart.xticklabel: X轴刻度标签
#    classify.classifycode: 分类项
#    classify.description: 分类项描述
#    code.code: 代码
#    code.codevalues: 代码值
#    code.description: 描述
#    code.enabledflag: 是否可用
#    code.parentcodedescription: 父代码描述
#    code.parentcodeid: 父级快码
#    code.type: 类型
#    code.valuelist: 值列表
#    coderulesheader.rulecode: 规则代码
#    coderulesheader.rulename: 规则名称
#    coderulesline.currentvalue: 当前值
#    coderulesline.datemask: 日期掩码
#    coderulesline.fieldsequence: 序号
#    coderulesline.filedtype: 段类型
#    coderulesline.filedvalue: 段值
#    coderulesline.list: 段列表
#    coderulesline.resetfrequency: 重置频率
#    coderulesline.seqlength: 位数
#    coderulesline.startvalue: 开始值
#    coderulesline.stepnumber: 序列更新步长
#    codevalue.codeid: 代码ID
#    codevalue.description: 描述
#    codevalue.enabledflag: 是否可用
#    codevalue.meaning: 含义
#    codevalue.orderseq: 排序号
#    codevalue.parentcodevalueid: 父级快码值
#    codevalue.parentcodevaluemeaning: 父代码值意义
#    codevalue.tag: 标记
#    codevalue.value: 值
#    company.address: 公司地址
#    company.chiefpositionid: 主岗位
#    company.companycode: 公司代码
#    company.companyfullname: 公司全称
#    company.companylevelid: 公司等级
#    company.companyshortname: 公司简称
#    company.companytype: 公司类型
#    company.contactperson: 联系人
#    company.detail: 公司详情
#    company.enddateactive: 结束日期
#    company.fax: 传真
#    company.parentcompanyid: 上级公司ID
#    company.parentcompanyname: 上级公司
#    company.phone: 联系电话
#    company.positionname: 公司岗位
#    company.selectcompany: 选择公司
#    company.startdateactive: 启用时间
#    company.zipcode: 邮政编码
#    countsampledata.attachmentgroup: 附着对象组
#    countsampledata.cegroup: 控制要素组
#    countsampledata.ceparameter: 控制要素
#    countsampledata.creationdate: 创建时间
#    countsampledata.sampletime: 样本时间
#    countsampledata.samplevaluecount: 样本值
#    countsampledata.unqualifiedquantity: 不合格数
#    crontriggerdto.cronexpression: Cron 表达式
#    dashboard.dashboardcode: 仪表盘代码
#    dashboard.description: 描述
#    dashboard.resourceid: 资源ID
#    dashboard.resourcename: 资源名称
#    dashboard.title: 标题
#    dashboard.url: URL
#    dataaccessconfiguration.attachmentgroupid: 附着对象组
#    dataaccessconfiguration.cegroupid: 控制要素组
#    dataaccessconfiguration.ceparameterid: 控制要素
#    dataaccessconfiguration.configurationstatus: 状态
#    dataaccessconfiguration.datalowerlimit: 数据过滤下限
#    dataaccessconfiguration.dataupperlimit: 数据过滤上限
#    dataaccessconfiguration.effectivetype: 抽样类型
#    dataaccessconfiguration.isometricsampling: 等距抽样
#    dataaccessconfiguration.samplingposition: 抽样取值位置
#    dataaccessconfiguration.timesampling: 时间抽样
#    datapermission.assign: 分配权限
#    datapermissionrule.permissionfield: 屏蔽范围
#    datapermissionrule.rulecode: 规则代码
#    datapermissionrule.ruleid: 规则 Id
#    datapermissionrule.rulename: 规则名称
#    datapermissionruleassign.assignfield: 权限层级
#    datapermissionruleassign.assignfieldvalue: 权限层级值
#    datapermissionruleassign.assignid: 权限分配 Id
#    datapermissionruleassign.detailid: 规则项 Id
#    datapermissionruledetail.detailid: 规则项 Id
#    datapermissionruledetail.permissionfieldsqlvalue: 规则Sql
#    datapermissionruledetail.permissionfieldvalue: 规则字段值
#    datapermissionruledetail.ruleid: 规则 Id
#    datapermissiontable.description: 描述
#    datapermissiontable.tableid: 数据屏蔽表 Id
#    datapermissiontable.tablename: 数据屏蔽表名
#    datapermissiontablerule.ruleid: 规则代码
#    datapermissiontablerule.tablefield: 屏蔽字段
#    datapermissiontablerule.tableid: 数据屏蔽表 Id
#    datapermissiontablerule.tableruleid: 表规则Id
#    deliveryticketh.agentfullname: 采购员
#    deliveryticketh.businessunitname: 业务实体
#    deliveryticketh.creationdate: 创建时间
#    deliveryticketh.endtime: 创建时间至
#    deliveryticketh.expecteddate: 预计到货时间
#    deliveryticketh.needbydate: 需求时间
#    deliveryticketh.plantname: 工厂
#    deliveryticketh.ponumber: 采购订单号
#    deliveryticketh.printtime: 打印次数
#    deliveryticketh.promiseddate: 承诺日期
#    deliveryticketh.receivedate: 接收日期
#    deliveryticketh.remarks: 送货单备注
#    deliveryticketh.shipdate: 发货日期
#    deliveryticketh.starttime: 创建时间从
#    deliveryticketh.status: 送货单状态
#    deliveryticketh.suppliercode: 供应商编码
#    deliveryticketh.suppliername: 供应商名称
#    deliveryticketh.suppliersitename: 供应商地点
#    deliveryticketh.ticketnumber: 送货单号
#    deliveryticketh.tickettype: 送货单类型
#    deliveryticketl.enddate: 接收时间至
#    deliveryticketl.endtime: 发货日期至
#    deliveryticketl.startdate: 接收时间从
#    deliveryticketl.starttime: 发货日期从
#    demovacation.leavereason: 请假理由
#    demovacation.needdays: 请假天数
#    demovacation.startdate: 请假日期
#    dimensioncongratulateteam.effectivepcactionqty: 有效长期措施
#    dimensioncongratulateteam.epcactionqty: 被执行长期措施
#    dimensioncongratulateteam.immediateactionqty: 临时措施数量
#    dimensioncongratulateteam.membername: 成员
#    dimensioncongratulateteam.othercontributions: 其它贡献
#    dimensioncongratulateteam.pcactionqty: 长期措施数量
#    dimensioncongratulateteam.preventionactionqty: 预防措施数量
#    dimensioncongratulateteam.rpaqty: 被下达预防措施数量
#    dimensioncongratulateteam.sumactionqty: 执行措施总数量
#    dimensionimmediateactionsline.actiondescription: 措施说明
#    dimensionimmediateactionsline.actionstatus: 措施状态
#    dimensionimmediateactionsline.actualtime: 实际执行时间
#    dimensionimmediateactionsline.executeimmediateaction: 实施的临时措施
#    dimensionimmediateactionsline.headactionid: 头主键
#    dimensionimmediateactionsline.lineactionid: 主键
#    dimensionimmediateactionsline.plantime: 计划执行时间
#    dimensionimmediateactionsline.remark: 备注
#    dimensionimmediateactionsline.userid: 提出者id
#    dimensionimmediateactionsline.username: 提出者
#    dimensionimprovingactions.actiondescription: 措施说明
#    dimensionimprovingactions.improvingaction: 措施
#    dimensionimprovingactions.remark: 备注
#    dimensionimprovingactions.username: 提出者
#    dimensioninitiatedactions.actionstatus: 措施状态
#    dimensioninitiatedactions.actualexecutiontime: 实际执行时间
#    dimensioninitiatedactions.enableflag: 有效性
#    dimensioninitiatedactions.evaluation: 结果评价
#    dimensioninitiatedactions.planexecutiontime: 计划执行时间
#    dimensioninitiatedactions.remark: 备注
#    dimensionorder.creardate: 创建时间
#    dimensionorder.createname: 发起人
#    dimensionorder.membername: 8D组长
#    dimensionorder.ordercode: 8D单号
#    dimensionorder.orderprocess: 进程
#    dimensionorder.orderstatus: 状态
#    dimensionorder.ordertheme: 8D主题
#    dimensionorder.sourceorder: 来源单据
#    dimensionorder.updatedate: 更新时间
#    dimensionpreventionactions.actiondescription: 说明
#    dimensionpreventionactions.actionstatus: 措施状态
#    dimensionpreventionactions.actualreleasetime: 实际下达时间
#    dimensionpreventionactions.planreleasetime: 计划下达时间
#    dimensionpreventionactions.preventionaction: 措施
#    dimensionpreventionactions.username: 提出者
#    dimensionrootcausel.causeitem: 根本原因
#    dimensionrootcausel.username: 提出者
#    dimensionteamassembled.checkuser: '#'
#    dimensionteamassembled.employeeemail: 邮件
#    dimensionteamassembled.employeemobil: 电话
#    dimensionteamassembled.employeename: 姓名
#    dimensionteamassembled.memberrole: 角色
#    dimensionteamassembled.orgpositionname: 职位
#    dimensionteamassembled.orgunitdes: 部门
#    docadjustment.adjustamount: 调整金额
#    docadjustment.currency: 币种
#    docadjustment.docadjustmentnum: 调整行号
#    docadjustment.docadjustmenttype: 调整行类型
#    docadjustment.remarks: 备注
#    docsettlement.accountdate: 事物日期
#    docsettlement.actualamount: 开票金额
#    docsettlement.agentfullname: 采购员
#    docsettlement.currency: 币种
#    docsettlement.docqty: 事物数量
#    docsettlement.docsettlementnum: 结算单号
#    docsettlement.docstatementnum: 对账单号
#    docsettlement.doctype: 事物类型
#    docsettlement.endtime: 事务日期至
#    docsettlement.itemcode: 物料编码
#    docsettlement.itemname: 物料描述
#    docsettlement.itemuom: 事物单位
#    docsettlement.itemversion: 物料版本
#    docsettlement.linenum: 采购订单行号
#    docsettlement.plantname: 工厂
#    docsettlement.ponumber: 采购订单号
#    docsettlement.reldocnumh: 关联单号
#    docsettlement.reldocnuml: 关联单行号
#    docsettlement.relponumh: 关联订单号
#    docsettlement.relponuml: 关联订单行号
#    docsettlement.remarks: 备注
#    docsettlement.settlementstatus: 状态
#    docsettlement.shipmentnum: 发运号
#    docsettlement.starttime: 事务日期从
#    docsettlement.suppliercode: 供应商编码
#    docsettlement.suppliername: 供应商名称
#    docsettlement.suppliersitename: 供应商地点
#    docsettlement.taxcode: 税率
#    docsettlement.taxinvoicenum: 税务发票号
#    docsettlement.ticketlinenum: 送货单行号
#    docsettlement.ticketnumber: 送货单号
#    docsettlement.unitprice: 开票单价
#    docsettlement.webinvoicenum: 网上发票号
#    docstatement.confirmname: 确认人
#    docstatement.confirmtime: 确认时间
#    docstatement.creationdate: 创建时间
#    docstatement.creationname: 创建人
#    docstatement.currency: 币种
#    docstatement.docstatementnum: 对账单号
#    docstatement.docstatementstatus: 状态
#    docstatement.endtime: 创建时间至
#    docstatement.plantname: 工厂
#    docstatement.remarks: 备注
#    docstatement.starttime: 创建时间从
#    docstatement.sumamount: 可开票金额
#    docstatement.suppliercode: 供应商编码
#    docstatement.suppliername: 供应商名称
#    docstatement.suppliersitename: 供应商地点
#    editorder.cancelflag: 取消标识
#    editorder.ticketlinenum: 送货单行号
#    employee.borndate: 出生日期
#    employee.certificateid: 证件号
#    employee.certificatetype: 证件类型
#    employee.companyinfo: 公司信息
#    employee.createnewuser: 添加为用户
#    employee.effectiveenddate: 有效日期至
#    employee.effectivestartdate: 有效日期从
#    employee.email: 邮件
#    employee.employeecode: 员工编码
#    employee.employeelevelcode: 员工等级代码
#    employee.enabledflag: 启用状态
#    employee.gender: 性别
#    employee.ismainposition: 是否主岗位
#    employee.joindate: 入职日期
#    employee.mobil: 电话
#    employee.mobile: 移动电话
#    employee.name: 员工姓名
#    employee.otherinfo: 其他信息
#    employee.personalinfo: 个人信息
#    employee.positionallocation: 岗位分配
#    employee.positionid: 岗位ID
#    employee.positionname: 岗位名称
#    employee.selectemployee: 选择员工
#    employee.selectemployeecode: 选择员工CODE
#    employee.status: 状态
#    employee.statusname: 状态名称
#    employee.unitid: 组织ID
#    employee.unitname: 组织名称
#    employeeassign.employeeid: 员工ID
#    employeeassign.enabledflag: 是否可用
#    employeeassign.positionid: 岗位ID
#    employeeassign.positionname: 岗位名称
#    employeeassign.primarypositionflag: 是否主岗位
#    employeeassign.unitname: 组织名称
#    entity.attachmentgroupdescription: 附着对象组描述
#    entity.attachmentgroupid: 附着对象组
#    entity.cecopy: 实体控制图复制
#    entity.cegroup: 控制要素组描述
#    entity.cegroupid: 控制要素组
#    entity.ceparameter: 控制要素描述
#    entity.ceparameterid: 控制要素
#    entity.chartcode: 控制图编码
#    entity.chartid: 控制图ID
#    entity.controldate: 控制时间
#    entity.description: 描述
#    entity.enddate: 样本结束时间
#    entity.entitycode: 实体控制图
#    entity.entityid: 表ID，主键
#    entity.entitynew: 是否新增
#    entity.entitystatus: 状态
#    entity.entityversion: 版本
#    entity.siteid: 站点ID
#    entity.startdate: 样本开始时间
#    entity.tenantid: 租户ID
#    entitychart.add: 添加实体控制图
#    entitychart.coordinateaxis: 坐标
#    entitychart.individualanalysis: 单个分析
#    entitychart.select: 选择
#    error.account_no_role: 该账户下无有效角色
#    error.hqm_8d_order_01: 必输信息未输入完整！
#    error.hqm_8d_order_02: 存在未完成的步骤！
#    error.hqm_8d_order_03: 只有已完成的8D单才可以关闭
#    error.hqm_8d_order_04: 请先输入信息！
#    error.hqm_fqc_order_create_03: 只允许对待处理状态的检验任务生成检验单
#    error.hqm_fqc_order_create_04: 物料未启用，无法生成检验单
#    error.hqm_fqc_order_create_05: 未找到有效的检验单模板，请先维护检验单模板
#    error.hqm_fqc_order_create_07: 未找到有效样本量字码，生成检验单失败。
#    error.hqm_fqc_order_create_08: 未找到有效的样本量字码对应的AC、RE值，生成检验单失败！
#    error.hqm_fqc_order_create_10: 所选检验任务未保存，不能生成检验单
#    error.hqm_fqc_order_submit_01: 检测数据为空，提交失败！
#    error.hqm_fqc_order_submit_02: 检验项目未检验完毕，请继续检验！
#    error.hqm_inspection_task_cancel_01: 请选择检验任务
#    error.hqm_inspection_task_cancel_02: 取消失败！只有待处理状态的检验任务才允许取消
#    error.hqm_inspection_task_cancel_03: 确认取消该检验任务？
#    error.hqm_inspection_task_save_01: 保存失败！必输项信息填写不完整
#    error.hqm_inspection_task_save_02: 保存失败！送货单和来源类型对应的检验任务重复
#    error.hqm_iqc_order_create_01: 请选中检验任务！
#    error.hqm_iqc_order_create_02: 只允许对单条检验任务生成检验单，请勿多选！
#    error.hqm_iqc_order_create_03: 只允许对待处理状态的检验任务生成检验单
#    error.hqm_iqc_order_create_04: 物料未启用，无法生成检验单
#    error.hqm_iqc_order_create_05: 未找到有效的检验单模板，请先维护检验单模板
#    error.hqm_iqc_order_create_07: 未找到有效样本量字码，生成检验单失败。
#    error.hqm_iqc_order_create_08: 未找到有效的样本量字码对应的AC、RE值，生成检验单失败！
#    error.hqm_iqc_order_create_10: 所选检验任务未保存，不能生成检验单
#    error.hqm_iqc_order_submit_01: 检测数据为空，提交失败！
#    error.hqm_iqc_order_submit_02: 检验项目未检验完毕，请继续检验！
#    error.hqm_nonconforming_order_create_01: 必输项未填写完整
#    error.hqm_nonconforming_order_create_02: 该检验单已创建过不合格处理单，请勿重复创建
#    error.hqm_nonconforming_order_publish_01: 请选择不合格处理单！
#    error.hqm_nonconforming_order_publish_02: 已发布的不合格处理单不允许再发布！
#    error.hqm_pqc_inspection_create_01: 未找到检验工序和该来源类型的检验项目
#    error.hqm_pqc_inspection_create_02: 未找到工序物料对应的检验项目
#    error.hqm_save_01: 保存失败！必输项信息填写不完整
#    error.login.name_password_not_match: 用户名或密码错误
#    error.login.verification_code_error: 验证码错误
#    error.record_not_exists_or_version_not_match: 记录不存在或版本不一致.
#    error.srm_invoice_0001: 供应商、供应商地点、工厂、币种相同的结算单据才能生成对账单
#    error.srm_invoice_0002: 是否确认对选中的结算单据生成对账单
#    error.srm_invoice_0003: 该对账单已取消，不能进行确认操作
#    error.srm_invoice_0004: 该对账单已确认完毕，不能重复 操作
#    error.srm_invoice_0005: 对账单确认后，其结算单据将按指定金额进行开票，是否继续
#    error.srm_invoice_0006: 已确认的对账单不允许取消
#    error.srm_invoice_0007: 该对账单取消后，其结算单据将恢复“待对账”状态，是否继续
#    error.srm_invoice_0008: 该对账单已取消，不能重复操作
#    error.srm_invoice_0009: 取消对账单和结算单据的关联关系后，结算单据将恢复"待对账"状态，是否继续
#    error.srm_invoice_0010: 供应商、供应商地点、工厂、币种相同的结算单据才能生成应收发票
#    error.srm_invoice_0011: 是否确认对选中的结算单据创建应收发票
#    error.srm_invoice_0012: “含税总额（系统）与“含税总额（实际）”差异不能超过10
#    error.srm_invoice_0013: 调整行金额将纳入计算发票开票金额，是否继续保存
#    error.srm_invoice_0014: 网上发票删除后，结算单据将恢复为“待开票”状态，是否继续
#    error.srm_invoice_0015: 发票提交后，将不能进行修改，是否继续
#    error.srm_invoice_0016: 此税务发票号已存在，不能保存
#    error.srm_purchase_0001: 创建供方用户必须填写供应商！
#    error.srm_purchase_0003: 是否确认所选采购订单的所有订单行内容
#    error.srm_purchase_0004: 是否确认该采购订单！
#    error.srm_purchase_0005: 是否确认删除已勾选的库存数据!
#    error.srm_purchase_0006: 请勾选需删除的库存数据
#    error.srm_purchase_0007: 此工厂下，已存在该版本物料的库存数据，不能重复新增
#    error.srm_purchase_0008: 勾选数据的工厂、供应商、供应商地点必需相同
#    error.srm_purchase_0009: 不存在工厂、供应商、供应商地点相同的“未打印”送货单，故不能合并至已有送货单
#    error.srm_purchase_0010: “本次发运数量”不能大于“可发运数量”
#    error.srm_purchase_0011: 新增发货数量不能超过该采购订单的可发运数量
#    error.srm_purchase_0012: 是否确认取消选中的送货单行
#    error.srm_purchase_0013: 该送货单已打印，是否确认再次打印。
#    error.srm_purchase_0014: 该送货单为“新建“，请打印后，再进行发货
#    error.srm_purchase_0015: 该送货单已发货，不能进行此操作
#    error.srm_purchase_0016: 该送货单已取消，不能进行此操作
#    error.srm_purchase_0017: 发货后送货单行信息不能进行修改，是否确认发货
#    error.srm_purchase_0018: 此操作将取消所有送货单行，是否确认取消
#    error.srm_purchase_0019: 该送货单已发货，此操作将取消整张送货单，是否确认取消
#    error.srm_purchase_0020: 该送货单已取消，不能进行此操作
#    error.srm_purchase_0021: 该送货单已打印，此操作将取消所有送货单行，是否确认取消
#    error.srm_purchase_0022: 存在未保存的数据，请先保存
#    error.srm_purchase_0023: 条码失效后将不可恢复、不可使用，是否确认失效选中的条码
#    error.srm_purchase_0024: 存在已打印的条码，是否确认再次打印
#    error.srm_purchase_0025: 存在已打印的条码，失效后将不可恢复、不可使用，是否确认失效选中条码
#    error.srm_purchase_0026: 存在已失效的条码，不能进行此操作
#    error.srm_purchase_0027: 存在已失效的条码，不能打印
#    error.srm_purchase_0028: 条码失效后，将解除小箱条码的关联关系，是否确认失效选中条码
#    error.srm_purchase_0029: 存在外箱条码未关联小箱条码，不能打印
#    error.srm_purchase_0030: 外箱条码打印后，将不能修改小箱条码的关联关系，是否确认打印
#    error.srm_purchase_0031: 条码张数必需为正整数
#    error.srm_purchase_0032: 只能确认“已发布”状态的采购订单行，请检查勾选数据
#    error.srm_purchase_0033: 存在“已发布”状态订单行的“承诺日期”未填写，请填写完毕后再进行此操作
#    error.srm_purchase_0034: 送货单打印后不能进行修改，是否继续
#    error.srm_purchase_0035: 各供应商每天最多打印9999张小箱条码，此输入有误
#    error.srm_purchase_0036: 各供应商每天最多打印9999张外箱条码，此输入有误
#    error.srm_purchase_0037: 存在必输字段未填写，不能保存
#    error.srm_purchase_0038: 存在发运行未填写“承诺日期”，不能进行此操作
#    error.srm_purchase_0039: 该打印按钮，只能打印“已发货”的送货单，其他请至“送货单编辑”功能打印
#    error.srm_purchase_0040: 该取消按钮。只能取消“已发货”的送货单。其他请至“送货单编辑”功能取消
#    error.srm_purchase_0041: 存在已打印的条码，是否继续（注：若继续，新建和已打印的条码均将失效）
#    error.srm_purchase_0042: 存在条码已被捆包，请先在“外箱条码”功能中解绑后再进行失效操作
#    error.srm_purchase_0043: 是否确认删除账号和供应商的关联关系，删除后账号可查询所有业务数据
#    error.standard_from_than_to: 规格起始值不能大于规格终止值
#    error.system.not_allowed_same_with_old_password: 新密码不能和旧密码重复!
#    error.task.invalid: '任务不在有效期.  Task Code: {0}'
#    error.upload.file.process: 文件处理发生未知错误!
#    error.upload.not.file.form: 不是文件上传表单!
#    error.upload.total.num.limit.exceeded: 文件上传总个数超出限制!
#    error.upload.total.size.limit.exceeded: 文件上传总大小超出限制!
#    error.upload.unknown: 文件上传发生未知错误!
#    error.user.account_expired: 用户已过期
#    error.user.account_locked: 账户已经被锁定！
#    error.user.account_not_active: 用户未激活
#    error.user.accout_locked: 账户已锁定
#    error.user.current_password_notempty: 当前密码不能为空
#    error.user.email: 请输入正确的Email信息
#    error.user.new_password_again: 请再次输入新密码
#    error.user.new_password_notempty: 新密码不能为空
#    error.user.password_format_error_digits_and_letters: 密码必须包含数字和字母
#    error.user.password_length_insufficient: '密码长度不能小于{0}'
#    error.user.password_not_empty: 密码不能为空！
#    error.user.phone: 请输入正确的电话信息
#    error.user.two_password_not_match: 两次密码不匹配
#    error.user.update_password: 用户密码失效，重新设置密码
#    errot.test01: 错误信息
#    excel.fileformatillustration: 导入文件格式说明
#    excel.getexceltemplate: 获取导入模板
#    excel.import: 导入
#    excel.upload: 上传Excel
#    fema.analysisobject: 分析对象
#    fema.currentversion: 当前版本
#    fema.fmeacode: 项目编号
#    fema.fmeaname: 项目名称
#    fema.fmeatype: 项目类型
#    fema.updateby: 建立人
#    fema.updatedate: 建立时间
#    fema.username: 责任人
#    fema.usernames: 项目成员
#    flex.hastime: 包含时间
#    flex.precision: 精度
#    flex.range: 范围
#    flex.ruledetail: 规则字段配置
#    flex.rulefield: 弹性域配置
#    flexfield.columnwidth: 字段宽度
#    flexfield.labelname: 标签名称
#    flexfield.labelwidth: 标签宽度
#    flexfield.valuealigntype: 内容布局
#    flexmodel.editcolumn: 模板列编辑
#    flexmodel.modelcode: 模板代码
#    flexmodel.modelname: 模板名称
#    flexmodel.modeltable: 模型表
#    flexmodelcolumn.columnname: 模型列
#    flexmodelcolumn.description: 描述
#    flexmodelcolumn.modelid: 模型ID
#    flexrule.definerule: 规则项定义
#    flexrule.definerulefield: 定义规则字段
#    flexrule.defineruleinstruction: '*规则定义应遵循规则间互为交集的原则，不能存在同时满足2种规则的情况'
#    flexrule.description: 规则项描述
#    flexrule.enableflag: 是否可用
#    flexrule.flexruledetaillist: 规则Detail列表
#    flexrule.rulecode: 规则项代码
#    flexrule.rulesetid: 规则集ID
#    flexruledetail.fieldname: 规则字段
#    flexruledetail.fieldtype: 字段类型
#    flexruledetail.fieldvalue: 规则字段值
#    flexruledetail.filetype: 规则字段配置(必输字段)
#    flexruledetail.ruleid: 规则ID
#    flexrulefield.columnname: 列名称
#    flexrulefield.config: 弹性域字段配置(必输字段)
#    flexrulefield.datebox: 日期框
#    flexrulefield.description: 描述
#    flexrulefield.dropdownbox: 下拉框
#    flexrulefield.fieldcolumnnumber: 行号
#    flexrulefield.fieldcolumnwidth: 宽度
#    flexrulefield.fieldsequence: 序号
#    flexrulefield.fieldtype: 字段类型
#    flexrulefield.lovbox: LOV框
#    flexrulefield.modelcolumnid: 弹性域
#    flexrulefield.multilanguagebox: 多语言框
#    flexrulefield.numberbox: 数字框
#    flexrulefield.readableflag: 是否只读
#    flexrulefield.requiredflag: 是否必输
#    flexrulefield.ruleid: 规则ID
#    flexruleset.description: 规则描述
#    flexruleset.enableflag: 是否启用
#    flexruleset.modelid: 弹性域模型
#    flexruleset.modelname: 模型名称
#    flexruleset.rulesetcode: 规则代码
#    fmea.analysisobject: 分析对象
#    fmea.currentversion: 历史版本
#    fmea.fmeacode: 项目编号
#    fmea.fmeaname: 项目名称
#    fmea.updateby: 建立人
#    fmea.updatedate: 建立时间
#    fmea.usename: 责任人
#    fmea.usenames: 项目成员
#    form.code: 代码
#    form.description: 描述
#    form.preview: 预览
#    form.publish: 是否发布
#    fqcinspectionh.inspectionfrom: 检验来源
#    fqcinspectionh.inspectorid: 检验人
#    fqcinspectionh.prodlinecode: 产线编码
#    fqcinspectionh.prodlineid: 生产线
#    fqcinspectionh.sourceorder: 来源工单
#    fqcinspectiontemplateh.sourcetype: 来源类型
#    function.accessset: 权限设置
#    function.functioncode: 功能代码
#    function.functiondescription: 功能描述
#    function.functionicon: 功能图标
#    function.functionname: 功能名称
#    function.functionresource: 功能资源
#    function.functionsequence: 功能序号
#    function.lang: 语言
#    function.mainpage: 入口页面
#    function.modulecode: 模块代码
#    function.parentfunctionid: 父级功能
#    function.parentfunctionname: 父级功能名称
#    function.resourceallocation: 分配资源
#    function.resourcechoose: 选择资源
#    function.resourceid: 资源ID
#    function.resourcename: 资源名称
#    function.resources: 资源
#    function.set: 设置
#    function.type: 类型
#    functionresource.functionid: 功能ID
#    functionresource.resourceid: 资源ID
#    generator.choosetable: 选择表
#    generator.filename: 文件名
#    generator.filetype: 文件类型
#    generator.htmlmodel: 选则ftl模板
#    generator.iscover: 是否覆盖
#    generator.iscreate: 是否创建
#    generator.needchoosetable: 请选择一个表
#    generator.packagepath: 包路径
#    generator.parentpackagepath: 包父路径
#    generator.projectpath: 项目路径
#    generator.submit: 创建文件
#    hap.action: 操作
#    hap.add: 添加
#    hap.allclose: 全部收起
#    hap.allopen: 全部展开
#    hap.back: 返回
#    hap.cancel: 取消
#    hap.collapse: 合并
#    hap.comment: 备注
#    hap.commit: 提交
#    hap.confirm: 确认
#    hap.confirm_exit: 确定退出？
#    hap.copy: 复制
#    hap.database_error: 数据库错误
#    hap.delete: 删除
#    hap.description: 描述
#    hap.detail: 明细
#    hap.details: 详情
#    hap.download: 下载
#    hap.edit: 编辑
#    hap.enableflag: 是否启用
#    hap.error: 错误
#    hap.error.conflict: 数据冲突
#    hap.error.moreunit: 有且只能有一个主岗位
#    hap.error.nullexception: 字段不能为空
#    hap.error.uniqueexception: 数据重复
#    hap.excelimport: EXCEL导入
#    hap.expand: 展开
#    hap.exportexcel: 导出
#    hap.failure: 失败
#    hap.home: 首页
#    hap.import: 导入
#    hap.invoke.apiname.interfacetranspond: 接口透传
#    hap.itemcode: 物料编码
#    hap.itemdescriptions: 物料描述
#    hap.loading: 加载中
#    hap.login: 登录
#    hap.login.timeout: 登录超时，请重新登录！
#    hap.logout: 退出
#    hap.main_menu: 主菜单
#    hap.mesg_delete: 删除成功
#    hap.mesg_unique: 该文件目录只允许上传一个文件
#    hap.modelexport: 模板导出
#    hap.multilanguage_editor: 多语言编辑
#    hap.new: 新建
#    hap.no: 否
#    hap.ok: 确定
#    hap.pause: 暂停
#    hap.plant: 工厂
#    hap.preferences: 首选项
#    hap.print: 打印
#    hap.process.end: 结束
#    hap.process.start: 开始
#    hap.prompt: 提示
#    hap.query: 查询
#    hap.quicknavigation: 输入功能代码或功能名称
#    hap.refresh: 刷新
#    hap.repeat_login: '当前账号正在其他位置登录,请重新登录'
#    hap.reset: 重置
#    hap.resume: 恢复
#    hap.save: 保存
#    hap.submit: 提交
#    hap.success: 成功
#    hap.tip.delete_confirm: 确定删除？
#    hap.tip.info: 提示
#    hap.tip.noselect: 您未选中任何项！
#    hap.tip.selectrow: 请选择一行
#    hap.tip.selectrows: 请至少选择一行
#    hap.tip.success: 操作成功
#    hap.type_error: 主目录中没有对应的附件类型
#    hap.upload.error: 上传失败!
#    hap.upload.file.size.limit.exceeded: '上传文件大小不能超过{0}.'
#    hap.upload.file.type.mismatch: 上传文件类型不正确.
#    hap.upload.success: 上传成功!
#    hap.upload_success: 上传成功
#    hap.validation.email: '{0}不是有效的邮件地址。'
#    hap.validation.notempty: '{0}不能为空！'
#    hap.validation.notnull: '{0}不能为空！'
#    hap.validation.required: 字段必输!
#    hap.view: 查看
#    hap.warning: 警告
#    hap.yes: 是
#    hapinterfaceheader.accesstokenurl: Access Token URL
#    hapinterfaceheader.authflag: 是否认证
#    hapinterfaceheader.authpassword: 密码
#    hapinterfaceheader.authtype: 认证类型
#    hapinterfaceheader.authurl: 认证Url
#    hapinterfaceheader.authusername: 用户名
#    hapinterfaceheader.bodyheader: 请求体头
#    hapinterfaceheader.bodytail: 请求体Tail
#    hapinterfaceheader.clientid: Client ID
#    hapinterfaceheader.clientsecret: Client Secret
#    hapinterfaceheader.description: 描述
#    hapinterfaceheader.domainurl: URL
#    hapinterfaceheader.enableflag: 是否可用
#    hapinterfaceheader.granttype: 授权类型
#    hapinterfaceheader.ifturl: URL
#    hapinterfaceheader.interfacecode: 系统代码
#    hapinterfaceheader.interfacetype: 接口类型
#    hapinterfaceheader.lang: 语言
#    hapinterfaceheader.linecode: 接口代码
#    hapinterfaceheader.lineid: 行ID
#    hapinterfaceheader.linelist: 行列表
#    hapinterfaceheader.mapperclass: Mapper Class
#    hapinterfaceheader.name: 名称
#    hapinterfaceheader.namespace: 命名空间
#    hapinterfaceheader.requestaccept: 请求Accept
#    hapinterfaceheader.requestcontenttype: 请求内容类型
#    hapinterfaceheader.requestformat: 请求格式
#    hapinterfaceheader.requestmethod: 请求方法
#    hapinterfaceheader.scope: 范围
#    hapinterfaceheader.soapaction: Soap Action
#    hapinterfaceheader.systemtype: 系统类型
#    hapinterfaceinbound.enddate: 结束时间
#    hapinterfaceinbound.interfacename: 接口名称
#    hapinterfaceinbound.interfaceurl: URL
#    hapinterfaceinbound.ip: IP
#    hapinterfaceinbound.page: 分页数
#    hapinterfaceinbound.pagesize: 分页大小
#    hapinterfaceinbound.referer: 引用
#    hapinterfaceinbound.requestbodyparameter: 请求体参数
#    hapinterfaceinbound.requestheaderparameter: 请求头参数
#    hapinterfaceinbound.requestmethod: 请求方法
#    hapinterfaceinbound.requeststatus: 请求状态
#    hapinterfaceinbound.requesttime: 请求时间
#    hapinterfaceinbound.responsecontent: 回复内容
#    hapinterfaceinbound.responsetime: 回复时间
#    hapinterfaceinbound.stacktrace: 栈轨迹
#    hapinterfaceinbound.startdate: 开始时间
#    hapinterfaceinbound.useragent: 用户代理
#    hapinterfaceline.enableflag: 是否可用
#    hapinterfaceline.headerid: 头ID
#    hapinterfaceline.ifturl: URL
#    hapinterfaceline.lang: 语言
#    hapinterfaceline.linecode: 行代码
#    hapinterfaceline.linedescription: 行描述
#    hapinterfaceline.linename: 行名称
#    hapinterfaceoutbound.enddate: 结束日期
#    hapinterfaceoutbound.interfacename: 接口名称
#    hapinterfaceoutbound.interfaceurl: 接口Url
#    hapinterfaceoutbound.page: 分页数
#    hapinterfaceoutbound.pagesize: 分页大小
#    hapinterfaceoutbound.requestparameter: 请求参数
#    hapinterfaceoutbound.requeststatus: 请求状态
#    hapinterfaceoutbound.requesttime: 请求时间
#    hapinterfaceoutbound.responsecode: 相应代码
#    hapinterfaceoutbound.responsecontent: 相应内容
#    hapinterfaceoutbound.responsetime: 回复时间
#    hapinterfaceoutbound.stacktrace: 栈轨迹
#    hapinterfaceoutbound.startdate: 开始日期
#    hotkey.code: 编码
#    hotkey.code.prompt: 建议编码字段以"hotkey_"开头。
#    hotkey.description: 描述
#    hotkey.hotkey: 热键
#    hotkey.hotkey.duplicated: 热键重复
#    hotkey.hotkey.null: 无
#    hotkey.hotkeyId: 热键 ID
#    hotkey.preference.prompt: 点击对应输入框，直接按键盘即可修改热键：Shift+C 只需同时按下
#    hotkey.prompt: 按下键盘对应键进行设置
#    hotkeyconfiguration: 热键配置
#    hqmfunction.functionname: 功能名称
#    hqmfunction.structureid: 结构id
#    hqminvalid.detection: 检测度
#    hqminvalid.detectmeasure: 检测措施
#    hqminvalid.invalidconsequence: 失效后果
#    hqminvalid.invalidname: 失效名称
#    hqminvalid.invalidreason: 失效原因
#    hqminvalid.occurrence: 频度
#    hqminvalid.preventmeasure: 预防措施
#    hqminvalid.rpn: 风险顺序数
#    hqminvalid.serious: 严重度
#    hqminvalid.specialcharactertype: 特殊特性分类
#    hqmstructure.structurename: 结构名称
#    hrorgunit.companyid: 公司ID
#    hrorgunit.companyname: 公司
#    hrorgunit.department_manager: 主管岗位
#    hrorgunit.description: 组织描述
#    hrorgunit.enabledflag: 是否可用
#    hrorgunit.exist: 组织已经存在
#    hrorgunit.managerposition: 岗位ID
#    hrorgunit.name: 组织名称
#    hrorgunit.parentcode: 上级组织编码
#    hrorgunit.parentid: 父级组织
#    hrorgunit.parentname: 上级组织
#    hrorgunit.positionname: 岗位名称
#    hrorgunit.unitcategory: 组织类别
#    hrorgunit.unitcategoryname: 组织类型
#    hrorgunit.unitchoose: 选择组织
#    hrorgunit.unitcode: 组织编码
#    hrorgunit.unitinfo: 组织信息
#    hrorgunit.unittreelist: 查看组织结构
#    hrorgunit.unittype: 组织分类
#    hrorgunit.unittypename: 组织类型名称
#    inspectionattribute: 检验项目
#    inspectionattribute.acceptancequalitylimit: AQL
#    inspectionattribute.attributetype: 检验项类型
#    inspectionattribute.enableflag: 有效性
#    inspectionattribute.fillintype: 填写类型
#    inspectionattribute.frequency: 频次
#    inspectionattribute.frequencytype: 频次类型
#    inspectionattribute.inspectionattribute: 检验项目
#    inspectionattribute.inspectionlevels: 检验水平
#    inspectionattribute.inspectionmethod: 检验方法
#    inspectionattribute.inspectiontool: 检验工具
#    inspectionattribute.precision: 精度
#    inspectionattribute.qualitycharactergrade: 质量等级
#    inspectionattribute.remark: 备注
#    inspectionattribute.sampleproceduretype: 抽样标准类型
#    inspectionattribute.sourcetype: 检验项来源
#    inspectionattribute.standardtype: 规格类型
#    interface.accesstokenurl: 授权地址
#    interface.authflag: 是否校验
#    interface.authtype: 校验模式
#    interface.checkpassword: 校验密码
#    interface.checkusername: 校验用户名
#    interface.clientid: Client ID
#    interface.clientsecret: Client Secret
#    interface.enableflag: 是否有效
#    interface.granttype: 授权模式
#    interface.headeredit: 编辑接口信息
#    interface.interfacetype: 接口类型
#    interface.interfaceurl: 地址
#    interface.invoke.detail: 详细信息
#    interface.invoke.endsenddate: 截止日期
#    interface.invoke.inbound: 入站请求
#    interface.invoke.outbound: 出站请求
#    interface.invoke.requestbodyprm: 请求body
#    interface.invoke.requestip: 用户IP
#    interface.invoke.requestparameter: 请求参数
#    interface.invoke.requeststatus: 请求状态
#    interface.invoke.requesttime: 请求日期
#    interface.invoke.responsecode: HTTP CODE
#    interface.invoke.responsecontent: 响应内容
#    interface.invoke.responsetime: 响应时间
#    interface.invoke.stacktrace: 错误堆栈
#    interface.invoke.statsenddate: 开始日期
#    interface.invoke.useragent: User-Agent
#    interface.invoke.userreferer: Referer
#    interface.invokerecorddetails: 记录调用详情
#    interface.lind.interfaceurl: 接口地址
#    interface.line.interfacecode: 接口代码
#    interface.line.interfacecode.existed: 接口代码已存在
#    interface.line.interfacename: 接口名称
#    interface.lineedit: 查看接口信息
#    interface.list: 接口列表
#    interface.mapperclass: 映射类
#    interface.namespace: 命名空间
#    interface.oauthscope: 权限范围
#    interface.requestaccept: 请求接受类型
#    interface.requestcontenttype: 请求报文格式
#    interface.requestformat: 请求形式
#    interface.requestmethod: 请求方式
#    interface.soapheader: SOAP报文前缀
#    interface.soaptail: SOAP报文后缀
#    interface.systemcode: 系统代码
#    interface.systemname: 系统名称
#    interface.systemurl: 系统地址
#    iqcinspection.aduit: 审核
#    iqcinspection.commit: 提交
#    iqcinspection.create: 新建
#    iqcinspection.createunqualifieditem: 创建不合格单
#    iqcinspection.pause: 保存
#    iqcinspection.print: 打印
#    iqcinspectionh.aduit: 审核
#    iqcinspectionh.approvalresult: 审核结论
#    iqcinspectionh.commit: 提交
#    iqcinspectionh.datacreate: 数据录入
#    iqcinspectionh.getdisqualification: 发起不合格处理
#    iqcinspectionh.headerid: 检验单主键
#    iqcinspectionh.inspectiondate: 检验时间
#    iqcinspectionh.inspectiondes: 检验描述
#    iqcinspectionh.inspectionitemimg: 验品图片
#    iqcinspectionh.inspectionjudge: 检验结果
#    iqcinspectionh.inspectionnum: 检验单号
#    iqcinspectionh.inspectionres: 检验描述
#    iqcinspectionh.inspectionstatus: 处理状态
#    iqcinspectionh.inspectiontype: 检验类型
#    iqcinspectionh.inspectorusername: 检验人
#    iqcinspectionh.instruction: 说明
#    iqcinspectionh.interim: 暂存
#    iqcinspectionh.isurgency: 是否加急
#    iqcinspectionh.itemcode: 物料
#    iqcinspectionh.itemdescriptions: 物料描述
#    iqcinspectionh.ngqty: 不合格数
#    iqcinspectionh.nonconformingorder: 不合格处理单
#    iqcinspectionh.nonum: 不合格处理单号
#    iqcinspectionh.okqty: 合格数
#    iqcinspectionh.plantcode: 工厂
#    iqcinspectionh.print: 打印
#    iqcinspectionh.producedate: 生产日期
#    iqcinspectionh.produceqty: 生产数量
#    iqcinspectionh.productionbatch: 生产批次号
#    iqcinspectionh.receivedate: 接收日期
#    iqcinspectionh.receiveqty: 接收数量
#    iqcinspectionh.recipientusername: 接收人
#    iqcinspectionh.remark: 备注
#    iqcinspectionh.sampleplan: 抽样计划类型
#    iqcinspectionh.samplesize: 抽样数量
#    iqcinspectionh.scoreflag: 是否影响转移得分
#    iqcinspectionh.solveway: 处理方式
#    iqcinspectionh.sourceorder: 来源送货单
#    iqcinspectionh.sourcetype: 来源类型
#    iqcinspectionh.suppliername: 供应商名称
#    iqcinspectionh.taskfrom: 任务来源
#    iqcinspectionh.username: 检验员
#    iqcinspectionh.versionnum: 模板版本号
#    iqcinspectionl.ac: AC值
#    iqcinspectionl.acceptancequalitylimit: AQL
#    iqcinspectionl.attributeinspectionres: 检验项结果
#    iqcinspectionl.attributetype: 检验项类型
#    iqcinspectionl.conformingqty: 合格数
#    iqcinspectionl.enabletype: 生效类型
#    iqcinspectionl.frequency: 频次
#    iqcinspectionl.frequencytype: 频次类型
#    iqcinspectionl.headerid: 检验单头主键
#    iqcinspectionl.inspectionattribute: 检验项目
#    iqcinspectionl.inspectioncount: 检验次数
#    iqcinspectionl.inspectionhistory: 检验项记录
#    iqcinspectionl.inspectionlevels: 检验水平
#    iqcinspectionl.inspectiontool: 检验工具
#    iqcinspectionl.isadd: 检验项检验结果
#    iqcinspectionl.lineid: 检验项主键
#    iqcinspectionl.nonconformingqty: 不合格数
#    iqcinspectionl.ordercode: 排序码
#    iqcinspectionl.qualitycharactergrade: 质量等级
#    iqcinspectionl.re: RE值
#    iqcinspectionl.remark: 备注
#    iqcinspectionl.sampleproceduretype: 抽样标准类型
#    iqcinspectionl.samplesize: 抽样数量
#    iqcinspectionl.sizecodeletter: 样本量字码
#    iqcinspectionl.standardtype: 规格类型
#    iqcinspectionl.standradfrom: 规格值从
#    iqcinspectionl.standradto: 规格值至
#    iqcinspectionl.standraduom: 规格单位
#    iqcinspectionl.textstandrad: 文本规格值
#    iqcinspectiontemplateh.creationdate: 创建时间
#    iqcinspectiontemplateh.drawingnumber: 图号
#    iqcinspectiontemplateh.enableflag: 有效性
#    iqcinspectiontemplateh.historynum: 历史记录版本号
#    iqcinspectiontemplateh.itemcategory: 物料类别
#    iqcinspectiontemplateh.sourcetype: 来源类型
#    iqcinspectiontemplateh.status: 状态
#    iqcinspectiontemplateh.versionnum: 版本号
#    iqcinspectiontemplatel.acceptancequalitylimit: AQL
#    iqcinspectiontemplatel.attributeid: 检验项ID
#    iqcinspectiontemplatel.attributetype: 检验项类型
#    iqcinspectiontemplatel.disabletime: 失效时间
#    iqcinspectiontemplatel.enableflag: 有效性
#    iqcinspectiontemplatel.enabletime: 生效时间
#    iqcinspectiontemplatel.enabletype: 生效类型
#    iqcinspectiontemplatel.fillintype: 填写类型
#    iqcinspectiontemplatel.frequency: 频次
#    iqcinspectiontemplatel.frequencytype: 频次类型
#    iqcinspectiontemplatel.historynum: 历史版本号
#    iqcinspectiontemplatel.inspectionattribute: 检验项目
#    iqcinspectiontemplatel.inspectionlevels: 检验水平
#    iqcinspectiontemplatel.inspectiontool: 检验工具
#    iqcinspectiontemplatel.issync: 同步检验项
#    iqcinspectiontemplatel.ordercode: 排序码
#    iqcinspectiontemplatel.qualitycharactergrade: 质量等级
#    iqcinspectiontemplatel.remark: 备注
#    iqcinspectiontemplatel.sampleproceduretype: 抽样标准类型
#    iqcinspectiontemplatel.sourcetype: 来源类型
#    iqcinspectiontemplatel.standardtype: 规格类型
#    iqcinspectiontemplatel.standradfrom: 规格值从
#    iqcinspectiontemplatel.standradto: 规格值至
#    iqcinspectiontemplatel.standraduom: 规格单位
#    iqcinspectiontemplatel.textstandrad: 文本规格值
#    iqctask.inspectioncreate: 生成检验单
#    iqctask.inspectionnum: 检验单号
#    iqctask.inspectionres: 检验结果
#    iqctask.inspectiontype: 检验类型
#    iqctask.isurgency: 是否加急
#    iqctask.productionbatch: 批次号
#    iqctask.receivedate: 接收时间
#    iqctask.receiveqty: 来料数量
#    iqctask.recipientnum: 接收人
#    iqctask.solvestatus: 处理状态
#    iqctask.sourceorder: 送货单号
#    iqctask.sourcetype: 来源类型
#    iqctask.taskfrom: 任务来源
#    itemcategoryext.acceptancequalitylimit: AQL值
#    itemcategoryext.attributetype: 检验项类型
#    itemcategoryext.enableflag: 有效性
#    itemcategoryext.frequency: 检验频次
#    itemcategoryext.frequencytype: 检验频次类型
#    itemcategoryext.inspectionattribute: 检验项目
#    itemcategoryext.inspectionlevels: 检验水平
#    itemcategoryext.inspectiontool: 检验工具
#    itemcategoryext.itemcategory: 物料类别
#    itemcategoryext.ordercode: 排序码
#    itemcategoryext.qualitycharactergrade: 质量等级特性
#    itemcategoryext.remark: 备注
#    itemcategoryext.sampleproceduretype: 抽样标准类型
#    itemcategoryext.sourcetype: 来源类型
#    itemcategoryext.standardtype: 规格类型
#    job.attributename: 参数名称
#    job.attributevalue: 参数值
#    job.error.invalid_job_class: 无效的Job类
#    job.infodetail.email_address: 邮件地址
#    job.infodetail.enable_notification: 启用通知
#    job.infodetail.jobinfo: 任务参数
#    job.infodetail.notification: 结束通知
#    job.jobdetail: 任务明细
#    job.newcronjob: 新建 CRON 任务
#    job.newjob: 新建任务
#    job.newsimplejob: 新建简单任务
#    job.scheduler: 调度器
#    jobcreatedto.jobclassname: 任务类名
#    jobcreatedto.priority: 触发器优先级
#    jobdetaildto.description: 任务描述
#    jobdetaildto.executeip: 执行任务IP
#    jobdetaildto.jobclassname: 任务类名
#    jobdetaildto.jobgroup: 任务组
#    jobdetaildto.jobname: 任务名称
#    jobrunninginfodto.executionsummary: 执行概要
#    jobrunninginfodto.firetime: 实际执行时间
#    jobrunninginfodto.jobstatus: 任务状态
#    jobrunninginfodto.nextfiretime: 下次执行时间
#    jobrunninginfodto.previousfiretime: 上次执行时间
#    jobrunninginfodto.scheduledfiretime: 计划执行时间
#    judgement.judgementcode: 判异规则
#    judgement.judgementshortcode: 规则简称
#    judgement.lengthdata: '#'
#    judgement.limitdata: $
#    judgement.messagetypecode: 消息类型
#    judgementgroup.description: 描述
#    judgementgroup.judgementgroupcode: 判异规则组
#    judgementgroup.judgementstatus: 有效性
#    language.baselang: 基准语言
#    language.description: 描述
#    language.langcode: 语言代码
#    lov.autocompletefield: 自动完成显示列
#    lov.canpopup: 弹出选择框
#    lov.code: 代码
#    lov.columns: Columns
#    lov.customsql: 自定义SQL
#    lov.customurl: 自定义Url
#    lov.delayload: 延迟加载
#    lov.description: 描述
#    lov.dropdown: 自动完成
#    lov.editable: 可编辑
#    lov.editableflag: 可编辑
#    lov.height: 高度
#    lov.istree: 树形结构
#    lov.linenumberinformation: 行信息
#    lov.lovid: LOV ID
#    lov.lovitems: LOV Items
#    lov.needqueryparam: 查询条件必输
#    lov.pagesize: 页大小
#    lov.placeholder: 提示
#    lov.preview: 预览
#    lov.querycolumns: 列数
#    lov.select: 选择LOV
#    lov.sqlid: SQL ID
#    lov.sqltype: SQL类型
#    lov.textfield: TextField
#    lov.tip.querycolumnstip: 最多四列，建议不超过三列
#    lov.title: 标题
#    lov.valuefield: ValueField
#    lov.width: 宽度
#    lovitem.autocompletefield: 表格列
#    lovitem.conditionfield: 查询字段
#    lovitem.conditionfieldlabelwidth: 查询描述宽度
#    lovitem.conditionfieldlovcode: 通用lov编码
#    lovitem.conditionfieldname: 查询字段名
#    lovitem.conditionfieldnewline: newline
#    lovitem.conditionfieldselectcode: 快速编码
#    lovitem.conditionfieldselecttf: selecttf
#    lovitem.conditionfieldselecturl: url
#    lovitem.conditionfieldselectvf: selectvf
#    lovitem.conditionfieldsequence: 查询字段序号
#    lovitem.conditionfieldtextfield: 文本框
#    lovitem.conditionfieldtype: 字段类型
#    lovitem.conditionfieldwidth: 查询字段宽度
#    lovitem.display: 显示
#    lovitem.dropdown: Dropdown
#    lovitem.ds_type: 数据来源
#    lovitem.ds_type.code: 快速编码
#    lovitem.ds_type.url: URL
#    lovitem.field_type: 字段类型
#    lovitem.gridcolumn: 表格列
#    lovitem.gridcolumnalign: 列对齐方式
#    lovitem.gridfield: 字段
#    lovitem.gridfieldalign: 对齐方式
#    lovitem.gridfieldname: 字段名
#    lovitem.gridfieldsequence: 列序号
#    lovitem.gridfieldwidth: 列宽度
#    lovitem.isautocomplete: 查询字段
#    lovitem.lovid: LOV ID
#    lovitem.name: 字段名
#    lovitem.newline: 新行
#    lovitem.opts: 参数
#    lovitem.type: 查询配置
#    mailtest.addattachment: 添加附件
#    mailtest.choseattachment: 选择附件
#    measuretool.checkcycle: 校验周期
#    measuretool.checkedby: 校验机构
#    measuretool.checkresult: 校验结果
#    measuretool.checktype: 校验方式
#    measuretool.descriptions: 设备名称
#    measuretool.enableflag: 是否有效
#    measuretool.endtime: 下次校验日期至
#    measuretool.firstusedate: 初次使用日期
#    measuretool.his: 台账历史
#    measuretool.judgementstandard: 判定标准
#    measuretool.keyprocess: 关键工序
#    measuretool.lastcheckdate: 上次校验日期
#    measuretool.measurementaccuracy: 测量精度
#    measuretool.measuretoolnum: 设备编号
#    measuretool.measuretoolpositionstatus: 库存状态
#    measuretool.measuretoolstatus: 状态
#    measuretool.measuretoolsupplier: 制造厂商
#    measuretool.measuretooltype: 类型
#    measuretool.measuringrange: 测量范围
#    measuretool.msacontent: MSA分析内容
#    measuretool.msacycle: MSA周期
#    measuretool.msaflag: 是否需进行MSA
#    measuretool.msaresult: MSA结果
#    measuretool.msastatus: MSA状态
#    measuretool.msatype: 测量系统类型
#    measuretool.nextcheckdate: 下次校验日期
#    measuretool.outbounddate: 出库日期
#    measuretool.plantcode: 工厂
#    measuretool.positiontitle: 岗位名称
#    measuretool.principal: 管理人
#    measuretool.purchasedate: 购买日期
#    measuretool.starttime: 下次校验日期从
#    measuretool.usedepartment: 使用部门
#    measuretoolmsa.msacontent: MSA分析内容
#    measuretoolmsa.msastatus: MSA结果
#    message.content: 内容
#    message.copyto: 抄送
#    message.creationdate: 创建时间
#    message.customtest: 自定义邮件定义
#    message.errormessage: 错误信息
#    message.lastupdatedate: 最后更新时间
#    message.messagefrom: 发送人
#    message.messagehost: 消息 Host
#    message.messagesource: 消息 Source
#    message.messagetype: 消息类型
#    message.prioritylevel: 优先级
#    message.receiveraddress: 收件人地址
#    message.receivers: 收件人
#    message.receivertype: 收件类型
#    message.rensend: 重新发送
#    message.secretto: 密送
#    message.sendflag: 发送状态
#    message.sending: 发送中
#    message.subject: 主题
#    message.templatetest: 模板邮件定义
#    message.unsent: 未发送
#    messageaccount.accountcode: 账户代码
#    messageaccount.accounttype: 账户类型
#    messageaccount.description: 账户描述
#    messageaccount.password: 密码
#    messageaccount.username: 用户名
#    messageattachment.fileid: 文件 ID
#    messageattachment.messageid: 消息 ID
#    messageemailaccount.accountcode: 账户代码
#    messageemailaccount.configid: 配置 ID
#    messageemailaccount.description: 描述
#    messageemailaccount.password: 密码
#    messageemailaccount.selectmailaccount: 选择邮件账户
#    messageemailaccount.username: 用户名
#    messageemailconfig.account: 账户
#    messageemailconfig.accountcode: 账户代码
#    messageemailconfig.address: 地址
#    messageemailconfig.configcode: 配置代码
#    messageemailconfig.description: 描述
#    messageemailconfig.emailaccounts: 邮件账户
#    messageemailconfig.host: 邮件服务器
#    messageemailconfig.password: 密码
#    messageemailconfig.port: 端口
#    messageemailconfig.serverenable: 启用服务器账户
#    messageemailconfig.serverproperty: 服务器配置
#    messageemailconfig.trytimes: 重试次数
#    messageemailconfig.username: 用户名
#    messageemailconfig.usewhitelist: 启用白名单
#    messageemailconfig.whitelist: 白名单
#    messageemailconfig.whitelists: 白名单
#    messageemailproperty.propertycode: 属性值
#    messageemailproperty.propertyname: 属性名称
#    messageemailwhitelist.address: 地址
#    messageemailwhitelist.configid: 配置 ID
#    messageemailwhitelist.description: 描述
#    messagereceiver.messageaddress: 消息地址
#    messagereceiver.messageid: 消息 ID
#    messagereceiver.messagetype: 消息类型
#    messagetemplate.accountid: 账户 ID
#    messagetemplate.content: 内容
#    messagetemplate.creationdate: 邮件创建时间
#    messagetemplate.description: 描述
#    messagetemplate.lastupdatedate: 邮件更新时间
#    messagetemplate.meaning: 意义
#    messagetemplate.name: 模板名称
#    messagetemplate.prioritylevel: 优先级
#    messagetemplate.selecttemplate: 选择模板
#    messagetemplate.sendtype: 发送类型
#    messagetemplate.subject: 主题
#    messagetemplate.templatecode: 模板代码
#    messagetemplate.templatetype: 模板类型
#    messagetransaction.messageid: 消息 ID
#    messagetransaction.transactionmessage: 信息
#    messagetransaction.transactionstatus: 状态
#    messagetype.messagetypecode: 消息类型编码
#    messagetype.messagetypestatus: 有效性
#    messagetypeuploadrel.conflgcode: 配置编码
#    messagetypeuploadrel.conflgtype: 配置类型
#    messagetypeuploadrel.conflgvalue: 参数值
#    messagetypeuploadrel.description: 描述
#    messageuploadconfig.configcode: 配置编码
#    messageuploadconfig.configcommand: 配置命令
#    messageuploadconfig.configtype: 配置类型
#    messageuploadconfig.configvalue: 参数值
#    messageuploadconfig.description: 描述
#    messageuploadconfig.edit: 编辑
#    messageuploadconfig.rownum: 序号
#    msaplan.analyzedby: 分析人员
#    msaplan.creationdate: 创建时间
#    msaplan.endtime: 预计完成时间至
#    msaplan.estimatedfinishtime: 预计完成时间
#    msaplan.measurecharacter: 测试特性
#    msaplan.measuredby: 测量人员
#    msaplan.measureplanstatus: MSA计划状态
#    msaplan.measuretoolname: 设备名称
#    msaplan.measuretoolnum: 设备编号
#    msaplan.msaplanid: 工厂
#    msaplan.msaplannum: 计划编号
#    msaplan.msatype: MSA类型
#    msaplan.remark: 备注
#    msaplan.sampledescription: 样品名称
#    msaplan.starttime: 预计完成时间从
#    msaplanline.msaconclusion: MSA结论
#    msaplanline.msacontent: MSA分析内容
#    msaplanline.msaresult: MSA结果
#    msg.error.coderulesline.filed_value_validation: 段值不能为空且不能输入空格
#    msg.error.coderulesline.seq_length_validation: 位数必须大于等于开始值的长度
#    msg.error.coderulesline.start_value_validation: 开始值不能为空且字符长度必须小于位数
#    msg.error.same_code_and_market_id_is_exists: 模板代码已存在！
#    msg.error.token_check_failed: Token验证失败
#    msg.error.token_not_exists: 请求参数中Token不存在！
#    msg.warning.download.file.error: 下载文件不存在!
#    msg.warning.dto.attachcategory.sourcetype.repeaterror: '存在相同的附件业务编码{0}!'
#    msg.warning.system.email_message_no_whitelist: 没有设置白名单！
#    msg.warning.system.email_message_on_accountlist: 账号列表为空！
#    msg.warning.system.email_message_priority_empty: 没有设置优先级！
#    msg.warning.system.email_message_type_empty: 消息类型为空！
#    msg.warning.system.message_account_empty: 邮件账户为空！
#    msg.warning.system.message_config_disable: 账户配置被禁用！
#    msg.warning.system.message_config_nonexistent: 账户配置不存在！
#    msg.warning.system.message_send_type_empty: 发送类型为空！
#    msg.warning.system.no_message_receiver: 消息收件人为空!
#    msg.warning.system.no_message_template: 消息模板为空！
#    msg.warning.upload.file.empty: 上传文件为空!
#    msg.warning.upload.folder.notfound: '附件业务编码{0}目录不存在!'
#    msg.warning.upload.sourcetype.empty: 附件业务编码为空!
#    ncgroup.enableflag: 是否有效
#    ncgroup.nggroupappearance: 不良现象
#    ncgroup.nggroupcode: 不良代码组
#    ncgroup.nggroupname: 不良代码组名称
#    new: 新建
#    nggroupmember.enableflag: 是否有效
#    nggroupmember.ngappearance: 不良描述
#    nggroupmember.ngcode: 不良代码
#    nggroupmember.ngreason: 不良原因
#    nonconformingorder.dealmethod: 处置方法
#    nonconformingorder.descriptions: 物料描述
#    nonconformingorder.dosth: 操作
#    nonconformingorder.inspectiontype: 检验类型
#    nonconformingorder.itemid: 物料
#    nonconformingorder.ngappearance: 不良现象
#    nonconformingorder.ngcode: 不良代码
#    nonconformingorder.nggroupcode: 不良代码组
#    nonconformingorder.nggroupname: 不良代码组名称
#    nonconformingorder.nonconformingposition: 不良场所
#    nonconformingorder.nonconformingtype: 不良类型
#    nonconformingorder.nonum: 不合格处理单号
#    nonconformingorder.nosourcetype: 来源类型
#    nonconformingorder.nostatus: 处理单状态
#    nonconformingorder.plantid: 工厂
#    nonconformingorder.sourceorder: 来源单号
#    oauth2clientdetails.accessresources: '你授权的客户端想要访问受保护的资源,是否批准?'
#    oauth2clientdetails.accesstokenvalidity: Token 有效期
#    oauth2clientdetails.additionalinformation: 附加信息
#    oauth2clientdetails.addrole: 添加角色
#    oauth2clientdetails.approve: 批准
#    oauth2clientdetails.authorities: 角色列表
#    oauth2clientdetails.authorizationstandard: 授权标准
#    oauth2clientdetails.autoapprove: 自动授权
#    oauth2clientdetails.clientid: 客户端ID
#    oauth2clientdetails.clientsecret: 客户端秘钥
#    oauth2clientdetails.granttypes: 授权类型
#    oauth2clientdetails.redirecturi: 授权重定向URL
#    oauth2clientdetails.refreshtokenvalidity: Refresh Token 有效期
#    oauth2clientdetails.refreshvaliditydescribe: 单位：秒
#    oauth2clientdetails.reject: 拒绝
#    oauth2clientdetails.resetpasswd: 确定重新生成密码?
#    oauth2clientdetails.resourceids: 资源列表
#    oauth2clientdetails.scope: 权限范围
#    oauth2clientdetails.updatepasswd: 重置密码
#    ooc.cegroupdesc: 描述
#    ooc.ceparametername: 名称
#    ooc.chartdesc: 描述
#    ooc.classifygroupid: 原因分类组
#    ooc.classifyid: 原因分类项
#    ooc.creationdate: 失控时间
#    ooc.entitycode: 实体控制图
#    ooc.entitydesc: 描述
#    ooc.entityversion: 版本
#    ooc.judgementcode: 规则描述
#    ooc.judgementcode1: 规则
#    ooc.judgementshortcode: 规则简称
#    ooc.oocstatus: 状态
#    ooc.remark: 备注
#    outbarcode.codesum: 条码张数
#    outbarcode.creationdate: 创建时间
#    outbarcode.enableflag: 有效性
#    outbarcode.endtime: 创建时间至
#    outbarcode.littlecode: 小箱条码
#    outbarcode.obarcode: 外箱条码
#    outbarcode.packinglevel: 包装方式
#    outbarcode.packingsize: 规格
#    outbarcode.ponumber: 采购订单号
#    outbarcode.printtime: 打印次数
#    outbarcode.quantity: 关联小箱条码数
#    outbarcode.remarks: 备注
#    outbarcode.shipmentnum: 发运号
#    outbarcode.starttime: 创建时间从
#    outbarcode.status: 状态
#    outbarcode.supplerssitename: 供应商地点
#    outbarcode.suppliercode: 供应商编码
#    outbarcode.suppliername: 供应商名称
#    outbarcode.ticketlinenum: 送货单行号
#    outbarcode.ticketlinenum": 送货单行号
#    outbarcode.ticketnumber: 送货单号
#    page.pagenavigation: 页面导航
#    parametercondif.labelwidth: Label Width
#    parameterconfig.cascadefrom: 级联来源
#    parameterconfig.cascadefromfield: 级联字段
#    parameterconfig.code: 参数编码
#    parameterconfig.codevaluefield: 快码值字段
#    parameterconfig.columnnumber: 列号
#    parameterconfig.combobox: 下拉框
#    parameterconfig.config: 参数配置
#    parameterconfig.const: 常量
#    parameterconfig.currentdate: 当前日期
#    parameterconfig.datalength: 数据长度
#    parameterconfig.datepicker: 日期框
#    parameterconfig.datepickerfrom: 日期从
#    parameterconfig.datepickerto: 日期至
#    parameterconfig.defaulttext: 默认文本
#    parameterconfig.defaulttype: 默认类型
#    parameterconfig.defaultvalue: 默认值
#    parameterconfig.description: 描述
#    parameterconfig.display: 表单控件
#    parameterconfig.displaylength: 显示宽度
#    parameterconfig.enabled: 启用
#    parameterconfig.execute: 执行
#    parameterconfig.extraattribute: 扩展属性
#    parameterconfig.labelwidth: Label 宽度
#    parameterconfig.linenumber: 行号
#    parameterconfig.lov: LOV
#    parameterconfig.multiselect: 多选框
#    parameterconfig.parameterid: 参数ID
#    parameterconfig.position.repeat: 组件位置重复
#    parameterconfig.readonly: 只读
#    parameterconfig.required: 必输
#    parameterconfig.requiredfield: 必输字段，不能为空
#    parameterconfig.sourcecode: 数据来源
#    parameterconfig.sourcetype: 数据类型
#    parameterconfig.sql: SQL语句
#    parameterconfig.sqlnotempty: SQL不能为空
#    parameterconfig.tablefieldname: 表字段名
#    parameterconfig.targetid: 所属编码ID
#    parameterconfig.textbox: 输入框
#    parameterconfig.title: 标题
#    parameterconfig.title.repeat: 标题重复
#    parameterconfig.titleandposition.repeat: 标题与组件位置重复
#    password_format_error_digits_and_case_letters: 密码必须包含数字和大写字母
#    poheaders.agentdesc: 采购备注
#    poheaders.agentfullname: 采购员
#    poheaders.businessunitname: 业务实体
#    poheaders.edition: 订单版本
#    poheaders.endtime: 发布日期至
#    poheaders.plantname: 工厂
#    poheaders.ponumber: 订单号
#    poheaders.poordertype: 订单类型
#    poheaders.postatus: 状态
#    poheaders.releasedate: 发布日期
#    poheaders.starttime: 发布日期从
#    poheaders.suppliercode: 供应商编码
#    poheaders.suppliername: 供应商名称
#    poheaders.suppliersitename: 供应商地点
#    poheaders.urgentstatus: 加急状态
#    poheaders.urgenttime: 加急时间
#    polinelocations.agentdesc: 采购订单备注
#    polinelocations.agentfullname: 采购员
#    polinelocations.allowance: 允差
#    polinelocations.businessunitname: 业务实体
#    polinelocations.confirmname: 确认人
#    polinelocations.confirmtime: 确认时间
#    polinelocations.create: 创建送货单
#    polinelocations.createenddate: 创建时间至
#    polinelocations.createstartdate: 创建时间从
#    polinelocations.currency: 币种
#    polinelocations.edition: 订单版本
#    polinelocations.enddate: 承诺日期至
#    polinelocations.endtime: 需求时间至
#    polinelocations.item: 物料编码
#    polinelocations.itemcode: 物料编码
#    polinelocations.itemname: 物料描述
#    polinelocations.itemversion: 物料版本
#    polinelocations.linelocationdesc: 发运行备注
#    polinelocations.linelocationsupplierdesc: 供应商反馈信息
#    polinelocations.linenumber: 订单行号
#    polinelocations.linestatus: 行状态
#    polinelocations.lotsnum: 批次号
#    polinelocations.merge: 添加至已有送货单
#    polinelocations.needbydate: 需求时间
#    polinelocations.outsideboxquantity: 大箱数
#    polinelocations.packedinfo: 包装信息
#    polinelocations.packetinfo: 包装信息
#    polinelocations.packetquantity: 小箱数
#    polinelocations.packingqty: 包装数
#    polinelocations.plant: 工厂
#    polinelocations.plantname: 工厂
#    polinelocations.ponumber: 采购订单号
#    polinelocations.poordertype: 订单类型
#    polinelocations.postatus: 订单状态
#    polinelocations.productionbatch: 批次号
#    polinelocations.promiseddate: 承诺日期
#    polinelocations.quantity: 订单数量
#    polinelocations.receivedate: 接收时间
#    polinelocations.receiveqty: 已接收数量
#    polinelocations.receivequantity: 已接收数量
#    polinelocations.releasedate: 发布日期
#    polinelocations.remarks: 供应商备注
#    polinelocations.shipmentnum: 发运号
#    polinelocations.shipmentstatus: 发运行状态
#    polinelocations.shipped: 已发运数量
#    polinelocations.shippingable: 可发运数量
#    polinelocations.shipquantity: 本次发运数量
#    polinelocations.startdate: 承诺日期从
#    polinelocations.starttime: 需求时间从
#    polinelocations.suppliercode: 供应商编码
#    polinelocations.supplierid: 供应商
#    polinelocations.suppliername: 供应商名称
#    polinelocations.suppliersitename: 供应商地点
#    polinelocations.taxrate: 税率
#    polinelocations.unitcode: 单位
#    polinelocations.unitprice: 单价
#    polinelocations.uomcode: 单位
#    polinelocations.urgentstatus: 加急状态
#    polinelocations.urgenttime: 加急时间
#    polines.allowance: 允差
#    polines.currency: 币种
#    polines.itemcode: 物料编码
#    polines.itemedition: 物料版本
#    polines.itemname: 物料描述
#    polines.lineagentdesc: 采购行备注
#    polines.linelocationdesc: 发运行备注
#    polines.linelocationsupplierdesc: 供应商反馈信息
#    polines.linenum: 行号
#    polines.linestatus: 发运行状态
#    polines.needbydate: 需求时间
#    polines.packingqty: 包装数
#    polines.promiseddate: 承诺日期
#    polines.quantity: 数量
#    polines.shipmentnum: 发运号
#    polines.taxrate: 税率
#    polines.unitcode: 单位
#    polines.unitprice: 单价
#    position.description: 岗位描述
#    position.name: 岗位名称
#    position.parentpositionid: 父级岗位
#    position.parentpositionname: 上级岗位
#    position.positioncode: 岗位编码
#    position.selectposition: 选择岗位
#    position.unitid: 组织ID
#    position.unitname: 组织名称
#    positionanalystrel.analystid: 分析人
#    positionanalystrel.enableflag: 是否有效
#    positionanalystrel.plant: 工厂
#    positionanalystrel.plantid: 工厂
#    positionanalystrel.positiontitle: 岗位名称
#    pqcinspectionc.attributeinspectionres: 结论
#    pqcinspectionc.conformingqty: 合格数
#    pqcinspectionc.nonconformingqty: 不良数
#    pqcinspectionc.remark: 备注
#    pqcinspectionc.sampleqty: 抽样数量
#    pqcinspectionc.standradfrom: 规格值上限
#    pqcinspectionc.standradto: 规格值下限
#    pqcinspectionc.standraduom: 规格单位
#    pqcinspectionc.textstandrad: 文本规格值
#    pqcinspectionh.inspectionres: 检验结论
#    pqcinspectionh.plant: 工厂
#    pqcinspectionh.prodline: 产线
#    pqcinspectionh.shouldinspectiondate: 应检日期
#    pqcinspectionl.inspectiondate: 检验日期
#    pqcinspectionl.inspectionresult: 检验结果
#    pqcinspectionl.inspectionstatus: 检验状态
#    pqcinspectionl.itemcode: 检验物料
#    pqcinspectionl.standardopcode: 工序编码
#    pqcinspectionl.standardopdes: 工序描述
#    pqcinspectionl.workstationcode: 工位编码
#    pqcinspectionl.workstationdes: 工位描述
#    preference.autodeliver: 选择转交人
#    preference.autodeliver.description: 选择转交人，任务在指定时间范围内会自动转交给当前对象
#    preference.configuration: 配置
#    preference.deliverenddate: 转交截止日期
#    preference.deliverenddate.description: 选择自动转交截止日期，不设置表示从开始日期开始的所有任务都自动转交
#    preference.deliverstartdate: 转交开始日期
#    preference.deliverstartdate.description: 选择自动转交的开始日期，不设置则不会开启自动转交功能
#    preference.homepageconfiguration: 首页配置
#    preference.locale: 选择语言
#    preference.locale.description: 请选择语言种类
#    preference.tabstrip: 标签页
#    preference.tabstrip.enable: 启用多标签页窗口
#    preference.theme: 选择皮肤
#    preference.timezone: 时区
#    preference.timezone.description: 请选择您所在的区域的时区
#    profile.configurationitem: 配置项
#    profile.description: 描述
#    profile.profilename: 名称
#    profile.profilevalues: 配置文件值
#    profilevalue.levelid: 层级
#    profilevalue.levelname: 等级名称
#    profilevalue.levelvalue: 层级值
#    profilevalue.profileid: 配置文件ID
#    profilevalue.profilevalue: 配置值
#    prompt.description: 描述
#    prompt.lang: 语言
#    prompt.promptcode: 代码
#    prompt.sourcelang: 语言
#    pspcattachment.attachmentcode: 附着对象
#    pspcattachment.attachmenttyp: 类型
#    pspcattachment.attachmenttype: 类型
#    pspcattachment.description: 附着对象描述
#    quainstimeh.enableflag: 有效性
#    quainstimeh.plantid: 工厂
#    quainstimeh.prodlineid: 产线
#    quainstimeh.shiftcode: 巡检班次
#    quainstimeh.updateby: 最后更新人
#    quainstimeh.updatedate: 最后更新时间
#    quainstimel.inspectiontime: 检验时间
#    refundorderh.agentfullname: 采购员
#    refundorderh.confirmdate: 确认日期
#    refundorderh.confirmenddate: 确认日期至
#    refundorderh.confirmfullname: 确认人
#    refundorderh.confirmstartdate: 确认日期从
#    refundorderh.creationdate: 创建日期
#    refundorderh.creationenddate: 创建日期至
#    refundorderh.creationname: 创建人
#    refundorderh.creationstartdate: 创建日期从
#    refundorderh.plantid: 工厂
#    refundorderh.refundedenddate: 退货日期至
#    refundorderh.refundedstartdate: 退货日期从
#    refundorderh.refundordernum: 退货单号
#    refundorderh.refundorderstatus: 退货单状态
#    refundorderh.refundordertype: 退货单类型
#    refundorderh.remarks: 退货单备注
#    refundorderh.suppliercode: 供应商编码
#    refundorderh.supplierid: 供应商编码
#    refundorderh.suppliername: 供应商名称
#    refundorderh.suppliersiteid: 供应商地点
#    refundorderl.currency: 币种
#    refundorderl.itemcode: 物料编码
#    refundorderl.itemname: 物料描述
#    refundorderl.itemversion: 物料版本
#    refundorderl.linenum: 订单行号
#    refundorderl.lineremarks: 行备注
#    refundorderl.ponumber: 采购订单号
#    refundorderl.quantity: 数量
#    refundorderl.quantityrefunded: 实际退货数量
#    refundorderl.refundeddate: 退货时间
#    refundorderl.refundedfullname: 退货执行人
#    refundorderl.rolinenum: 行号
#    refundorderl.rolinestatus: 行状态
#    refundorderl.rolinetype: 行类型
#    refundorderl.taxrate: 税率
#    refundorderl.unitcode: 单位
#    refundorderl.unitprice: 退货单价
#    remodel.key: 流程标识
#    remodel.name: 流程名称
#    report.defaultquery: 默认查询
#    report.description: 报表描述
#    report.design: 报表设计
#    report.fileid: 报表文件
#    report.name: 报表名称
#    report.parameter: 报表参数
#    report.preview: 预览
#    report.reportcode: 报表编码
#    report.reportid: 报表ID
#    report.selectdatasource: 选择数据来源
#    report.selectreportfile: 选择报表文件
#    report.url: 报表定义URL
#    reportfiles.content: 文件内容
#    reportfiles.fileid: 文件ID
#    reportfiles.name: 文件名称
#    reportfiles.params: 文件参数
#    resource.accesscheck: 权限控制
#    resource.accesscomponent: 权限组件
#    resource.description: 描述
#    resource.itemallocation: 组件定义
#    resource.loginrequire: 需要登录
#    resource.name: 名称
#    resource.resourceitem: 资源组件
#    resource.selectresource: 选择资源
#    resource.type: 类型
#    resource.url: URL
#    resourcecustomization.personalization: 个性化
#    resourcecustomization.sequence: 序列号
#    resourceitem.buttons: 按钮组
#    resourceitem.description: 描述
#    resourceitem.form: 表单
#    resourceitem.gird: 表格
#    resourceitem.itemid: 组件标识
#    resourceitem.itemname: 组件名称
#    resourceitem.itemtype: 组件类型
#    resourceitem.ownerresourceid: 资源ID
#    resourceitem.resource: 目标资源
#    resourceitem.targetresourceid: 目标资源ID
#    resourceitem.targetresourcename: 目标资源名称
#    resourceitem.variable: 服务端变量
#    resourceitemelement.button: 按钮
#    resourceitemelement.column: 表格列
#    resourceitemelement.columnbutton: 表格列按钮
#    resourceitemelement.elementid: 元素ID
#    resourceitemelement.field: 字段
#    resourceitemelement.gridbutton: 工具栏按钮
#    resourceitemelement.name: 名称
#    resourceitemelement.property: 属性
#    resourceitemelement.propertyvalue: 属性值
#    resourceitemelement.resourceitemid: 资源组件ID
#    resourceitemelement.type: 类型
#    return.back: 返回
#    role.changerole: 切换角色
#    role.enableflag: 是否启用
#    role.endactivedate: 结束日期
#    role.isexpired: 是否过期
#    role.rolecode: 角色代码
#    role.roledescription: 角色描述
#    role.rolename: 角色名称
#    role.startactivedate: 启用时间
#    rolefunction.functionid: 功能ID
#    rolefunction.roleid: 角色ID
#    rolefunction.select_role: 选择角色
#    roleresourceitem.roleid: 角色ID
#    roleresourceitem.rsiid: 资源ID
#    sample.associateddocument: 关联单据
#    sample.description: 样品名称
#    sample.enableflag: 是否有效
#    sample.plantid: 工厂
#    sample.sampledisposaldate: 处置时间
#    sample.sampledisposalmethod: 处置方法
#    sample.samplegivedate: 送样时间
#    sample.samplegiver: 送样人
#    sample.samplenumber: 样品编号
#    sample.samplepositionstatus: 在库状态
#    sample.sampleproperties: 样品属性
#    sample.samplestatus: 样品状态
#    sample.sampletype: 样品型号
#    sample.sampleusedate: 领用时间
#    sample.sampleusedepartment: 领用部门
#    sample.sampleuser: 领用人
#    sample.sendback: 归还
#    "sampledisposalmethod\tsample.sampledisposaldate": 处置时间
#    samplemethod: 处置
#    sampleproceduretype: 抽样标准类型
#    samplescheme.acceptancequalitylimit: AQL值
#    samplescheme.acvalue: AC值
#    samplescheme.enableflag: 有效性
#    samplescheme.revalue: RE值
#    samplescheme.sampleplantype: 抽样计划类型
#    samplescheme.sampleproceduretype: 抽样标准类型
#    samplescheme.samplesize: 抽样数量
#    samplescheme.samplesizecodeletter: 样本量字码
#    samplescheme.schemeid: 样本抽样方案主键
#    samplesizecodeletter.enableflag: 有效性
#    samplesizecodeletter.inspectionlevelsfive: I
#    samplesizecodeletter.inspectionlevelsfour: S-4
#    samplesizecodeletter.inspectionlevelsone: S-1
#    samplesizecodeletter.inspectionlevelsseven: III
#    samplesizecodeletter.inspectionlevelssix: II
#    samplesizecodeletter.inspectionlevelsthree: S-3
#    samplesizecodeletter.inspectionlevelstwo: S-2
#    samplesizecodeletter.lotsizefrom: 下限
#    samplesizecodeletter.lotsizeto: 上限
#    samplesizecodeletter.sampleproceduretype: 抽样标准类型
#    samplesizecodeletter.sizecodeletter: 样本量字码
#    sampleswitchrule.enableflag: 启用
#    sampleswitchrule.newsampletype: 变更抽样方案
#    sampleswitchrule.sampleproceduretype: 抽样标准
#    sampleswitchrule.sourcesampletype: 原抽样方案
#    sampleswitchrule.switchrulevaluen: 抽样方案转移规则
#    samuseorderh.applicant: 申请人
#    samuseorderh.applicationdate: 申请时间
#    samuseorderh.approvaldate: 审批时间
#    samuseorderh.approver: 审批人
#    samuseorderh.check: 审批
#    samuseorderh.plantid: 工厂
#    samuseorderh.printflag: 打印标识
#    samuseorderh.remark: 备注
#    samuseorderh.usedepartment: 领用部门
#    samuseorderh.useordernumber: 领用单号
#    samuseorderh.useorderstatus: 单据状态
#    samuseorderh.usereason: 使用原因
#    samuseorderl.applicationnum: 申请数量
#    samuseorderl.issuenum: 实发数量
#    samuseorderl.pass: 通过
#    samuseorderl.sampletype: 样品型号
#    samuseorderl.stop: 驳回
#    sendretrieve.email: 邮件
#    sendretrieve.phoneno: 电话
#    sendretrieve.retrievedate: 重试日期
#    sendretrieve.retrievetype: 重试类型
#    sendretrieve.userid: 用户ID
#    server.accesstokenurl: AccessTokenUrl
#    server.auth: 服务认证
#    server.auth.config: 配置
#    server.authtype: 认证模式
#    server.code: 服务代码
#    server.domainurl: 服务地址
#    server.elementformdefault: 参数前缀
#    server.import: 导入
#    server.importurl: 导入地址
#    server.importurl.description: '导入地址:支持导入WSDL或者Swagger服务描述地址'
#    server.mappingurl: 发布地址
#    server.mappingurl.error: 发布地址不能出现 /
#    server.mappingurl.existed: 发布地址已存在
#    server.name: 服务名称
#    server.servicetype: 服务类型
#    server.soapversion: SOAP版本
#    server.wsspasswordtype: 加密类型
#    shortcut.addshortcut: 添加快捷方式
#    shortcut.functioncode: 功能代码
#    shortcut.functionicon: 功能图标
#    shortcut.functionname: 功能名称
#    shortcut.notaddshortcut: 还未添加快捷方式！
#    shortcut.shortcut: 快捷方式
#    shortcut.url: URL
#    shortcut.userid: 用户id
#    simpletriggerdto.repeatcount: 重复次数
#    simpletriggerdto.repeatinterval: 重复间隔
#    smallbarcode.creationdate: 创建时间
#    smallbarcode.itemcode: 物料编码
#    smallbarcode.itemname: 物料描述
#    smallbarcode.itemversion: 物料版本
#    smallbarcode.lotcode: 批次
#    smallbarcode.packinglevel: 包装方式
#    smallbarcode.packingsize: 规格
#    smallbarcode.plantcode: 工厂
#    smallbarcode.plantname: 工厂
#    smallbarcode.productionendtime: 创建时间至
#    smallbarcode.productionstarttime: 创建时间从
#    smallbarcode.productiontime: 生产日期
#    smallbarcode.quantity: 数量
#    smallbarcode.remarks: 备注
#    smallbarcode.sbarcode: 小箱条码
#    smallbarcode.status: 状态
#    smallbarcode.uom: 单位
#    soppqccontrolh.enableflag: 是否有效
#    soppqccontrolh.iqflag: IQ岗位
#    soppqccontrolh.keyopflag: 关键工序
#    soppqccontrolh.plantid: 工厂
#    soppqccontrolh.pqcflag: PQC启用
#    soppqccontrolh.prodline: 产线
#    soppqccontrolh.standardopcode: 工序编码
#    soppqccontrolh.standardopdes: 工序描述
#    soppqccontrolh.standardoporder: 工序
#    soppqccontroll.enableflag: 是否有效
#    soppqccontroll.workstationcode: 工位
#    soppqccontroll.workstationdes: 工位描述
#    standardopinspectionh.detail: 明细
#    standardopinspectionh.enableflag: 有效性
#    standardopinspectionh.plantid: 工厂
#    standardopinspectionh.prodlineid: 产线
#    standardopinspectionh.standardopdes: 工序描述
#    standardopinspectionh.standardopid: 工序
#    standardopinspectionh.version: 版本
#    standardopinspectionh.workstationid: 工位
#    standardopinspectionl.acceptancequalitylimit: AQL值
#    standardopinspectionl.attributetype: 项目类别
#    standardopinspectionl.enableflag: 有效性
#    standardopinspectionl.fillintype: 填写类型
#    standardopinspectionl.frequency: 检验频次
#    standardopinspectionl.frequencytype: 检验频次类型
#    standardopinspectionl.inspectionattribute: 检验项目
#    standardopinspectionl.inspectionlevels: 检验水平
#    standardopinspectionl.inspectiontool: 检验工具
#    standardopinspectionl.sampleproceduretype: 抽样标准类型
#    standardopinspectionl.samplesize: 抽样数量
#    standardopinspectionl.sourcetype: 检验来源
#    standardopinspectionl.standardtype: 规格类型
#    standardopinspectionl.standradfrom: 规格值从
#    standardopinspectionl.standradto: 规格值至
#    standardopinspectionl.standraduom: 规格单位
#    standardopinspectionl.textstandrad: 文本规格值
#    suppitemexemption.enableflag: 有效性
#    suppitemexemption.exemptionflag: 免检标识
#    suppitemexemption.exemptiontimefrom: 免检时间从
#    suppitemexemption.exemptiontimeto: 免检时间至
#    suppitemexemption.itemcode: 物料
#    suppitemexemption.itemescription: 物料描述
#    suppitemexemption.plantcode: 工厂
#    suppitemexemption.remark: 备注
#    suppitemexemption.suppliercode: 供应商
#    suppitemexemption.suppliername: 供应商名称
#    suppitemexemption.suppliersitename: 供应商地点
#    supplieronhandquantities.businessunitname: 业务实体
#    supplieronhandquantities.comments: 备注
#    supplieronhandquantities.finishedquantity: 成品数量
#    supplieronhandquantities.itemcode: 物料编码
#    supplieronhandquantities.itemname: 物料描述
#    supplieronhandquantities.itemversion: 物料版本
#    supplieronhandquantities.lastupdatedate: 最后更新时间
#    supplieronhandquantities.plantname: 工厂
#    supplieronhandquantities.primaryuom: 单位
#    supplieronhandquantities.roughquantity: 毛坯数量
#    supplieronhandquantities.semifinishedquantity: 半成品数量
#    supplieronhandquantities.supplier: 供应商
#    supplieronhandquantities.supplierid: 供应商编码
#    supplieronhandquantities.suppliername: 供应商名称
#    supplieronhandquantities.suppliersitename: 供应商地点
#    suppliers.suppliercode: 供应商编码
#    suppliers.suppliername: 供应商名称
#    suppliers.username: 用户名
#    switchrule.enableflag: 有效性
#    switchrule.inspectionjudge: 检样结果
#    switchrule.sampleplantype: 抽样计划类型
#    switchrule.sampleproceduretype: 抽样标准类型
#    switchrule.switchscorelimit: 转移得分限制
#    switchrule.switchscorerule: 转移得分规则
#    sys.config.captcha: 验证码
#    sys.config.configuration: 系统配置
#    sys.config.default_password: 新用户默认密码
#    sys.config.default_target_url: 跳转URL
#    sys.config.default_target_url.describe: 登录成功以后跳转的URL
#    sys.config.favicon: favicon
#    sys.config.favicon.desciption: 上传图片大小建议为32 * 32 px
#    sys.config.oauth2_authentication_lock_time: Oauth2认证失败锁定时间
#    sys.config.oauth2_authentication_num: Oauth2认证失败次数
#    sys.config.other: 密码策略
#    sys.config.password_complexity: 密码复杂度要求
#    sys.config.password_invalid_describe: '单位:天,0表示密码不过期'
#    sys.config.password_invalid_time: 密码失效时间
#    sys.config.password_min_length: 密码最小长度
#    sys.config.password_policy: 密码策略
#    sys.config.prohibit_repeat_login: 禁止用户重复登录
#    sys.config.prohibit_repeat_login.describe: 同一用户不能同时在多个地点登录
#    sys.config.resetpassword: 首次登陆修改密码
#    sys.config.resetpassword.describe: 首次登陆强制新用户修改密码
#    sys.config.rolemerge: 角色合并
#    sys.config.safety: 安全策略
#    sys.config.select_file: 选择文件
#    sys.config.style: 样式
#    sys.config.system_title: 系统标题
#    sys.config.systemlogo: 系统图标
#    sys.config.systemlogo.desciption: 上传图片大小建议为100 * 70 px
#    sys.config.upload_file: 上传
#    sys.config.user_role_merge.describe: 合并后，登录不在需要选择角色，菜单、权限都是合并后的
#    sys.dashboard.dashboardcode: 代码
#    sys.dashboard.dashboarddescription: 描述
#    sys.dashboard.dashboardmainpage: 入口页面
#    sys.dashboard.dashboardtitle: 标题
#    sys.job.emailtemplate.desciption: '邮件模版的内容可以使用如下表达式：${jobName}---任务名称 ${scheduledFireTime}---任务结束时间 ${status}----执行结果'
#    sys.login.refreshverificationcode: 刷新验证码
#    sys.login.safety: 登录策略
#    sysconfig.category: 配置分类
#    sysconfig.configcode: 配置代码
#    sysconfig.configvalue: 配置值
#    sysfile.filename: 文件名
#    sysfile.filepath: 文件路径
#    sysfile.filesize: 文件大小
#    sysfile.filesizedesc: 文件大小
#    sysfile.filetype: 文件类型
#    sysfile.upload: 上传
#    sysfile.uploaddate: 上传日期
#    syspreferences.preferences: 引用
#    syspreferences.preferencesvalue: 引用值
#    syspreferences.userid: 用户ID
#    tablehead.line: 行数据
#    task.execute: 执行
#    task.execute.executionlog: 执行日志
#    task.execute.form: 执行表单
#    task.execute.parameter: 参数
#    task.execute.parameters: 任务执行参数
#    task.execute.text: 显示值
#    task.execute.value: 参数值
#    task.execution.cancel: 取消任务
#    task.execution.close: 关闭
#    task.execution.continue: 继续执行
#    task.execution.description: 执行描述
#    task.execution.detail: 执行详情
#    task.execution.download: 执行日志下载
#    task.execution.executionnumber: 执行编号
#    task.execution.groupexecutionnumber: 任务组执行编号
#    task.execution.result.download: 执行结果下载
#    task.execution.show: 查看执行记录
#    task.execution.status: 执行状态
#    task.execution.username: 提交人
#    task.executionnumber: 任务编号
#    task.group.subtask: 子任务
#    task.input.length.error: 字符长度超过设定长度
#    taskdateil.type: Task Type
#    taskdetail.assign: 授权
#    taskdetail.code: 任务代码
#    taskdetail.description: 任务描述
#    taskdetail.editgroup: 编辑子任务
#    taskdetail.edittask: 编辑参数
#    taskdetail.endtime: 结束时间
#    taskdetail.executionorder: 任务执行顺序
#    taskdetail.name: 任务名称
#    taskdetail.order.repeat: 任务执行顺序重复
#    taskdetail.role.assign: 角色授权
#    taskdetail.starttime: 开始时间
#    taskdetail.taskclass: 任务类名
#    taskdetail.type: 任务类型
#    taxinvoice.approveddate: 审批日期
#    taxinvoice.approvedfullname: 审批人
#    taxinvoice.approvedremarks: 审批备注
#    taxinvoice.creationdate: 创建时间
#    taxinvoice.creationname: 创建人
#    taxinvoice.currency: 币种
#    taxinvoice.enddate: 审批日期至
#    taxinvoice.endtime: 创建时间至
#    taxinvoice.invoiceamount: 含税总额（实际）
#    taxinvoice.invoiceamounts: 含税总额（系统）
#    taxinvoice.invoicetaxamount: 税额（实际）
#    taxinvoice.invoicetaxamounts: 税额（系统）
#    taxinvoice.plantname: 工厂
#    taxinvoice.startdate: 审批日期从
#    taxinvoice.starttime: 创建时间从
#    taxinvoice.submiteddate: 提交日期
#    taxinvoice.submitenddate: 提交日期至
#    taxinvoice.submitname: 提交人
#    taxinvoice.submitstartdate: 提交日期从
#    taxinvoice.suppliercode: 供应商编码
#    taxinvoice.suppliername: 供应商名称
#    taxinvoice.supplierremarks: 供应商备注
#    taxinvoice.suppliersitename: 供应商地点
#    taxinvoice.taxinvoicenum: 税务发票号
#    taxinvoice.taxinvoiceqty: 发票张数
#    taxinvoice.webinvoicenum: 网上发票号
#    taxinvoice.webinvoicestatus: 状态
#    tokenlogs.cancelauthorization: 确定取消当前授权?
#    tokenlogs.tokenaccessaction: 操作
#    tokenlogs.tokenaccessall: 全部
#    tokenlogs.tokenaccessinvalid: 无效
#    tokenlogs.tokenaccessrevoke: 取消授权
#    tokenlogs.tokenaccessstatus: 授权状态
#    tokenlogs.tokenaccesstime: 授权时间
#    tokenlogs.tokenaccesstype: 授权类型
#    tokenlogs.tokenaccessvalid: 有效
#    tokenlogs.tokenexpirestime: 失效时间
#    tokenlogs.userid: 用户ID
#    triggerdto.endtime: 结束时间
#    triggerdto.jobgroup: 任务组
#    triggerdto.jobname: 任务名称
#    triggerdto.starttime: 开始时间
#    triggerdto.triggergroup: 任务组
#    user.again_new_password: 确认新密码
#    user.allocationrole: 角色分配
#    user.createuser: 新建用户
#    user.current_password: 当前密码
#    user.customerid: 客户ID
#    user.description: 描述
#    user.email: 邮件
#    user.employeecode: 员工代码
#    user.employeeid: 员工ID
#    user.employeename: 员工名称
#    user.endactivedate: 失效日期
#    user.firstlogin: 首次登录
#    user.info: 用户信息
#    user.lastlogindate: 最后登录时间
#    user.lastpasswordupdatedate: 密码最后更新时间
#    user.new_password: 新密码
#    user.password: 密码
#    user.password.discord: 密码输入不一致
#    user.passwordencrypted: 密码
#    user.passwordlength.insufficient: 密码长度不能小于
#    user.phone: 电话
#    user.selectuser: 查询用户
#    user.startactivedate: 生效日期
#    user.status: 状态
#    user.supplierid: 供应商ID
#    user.updatepassword: 修改密码
#    user.username: 用户名
#    user.userrole: 用户角色
#    user.usertype: 用户类型
#    user.verificode: 验证码
#    userdashboard.adddashboard: 添加仪表盘
#    userdashboard.dashboardcode: 仪表盘代码
#    userdashboard.dashboardid: 仪表盘ID
#    userdashboard.dashboardsequence: 仪表盘序列
#    userdashboard.dashboardtitle: 仪表盘标题
#    userdashboard.dashboardurl: 仪表盘URL
#    userdashboard.mydashboard: 我的仪表盘
#    userdashboard.userid: 用户ID
#    userlogin.ip: Ip地址
#    userlogin.logintime: 登录时间
#    userlogin.referer: 登录url
#    userlogin.useragent: 用户代理
#    userlogin.userid: 用户ID
#    userrole.defaultflag: 默认标注
#    userrole.roleid: 角色id
#    userrole.userid: 用户ID
#    wfl.security.error.need_assignee_or_admin: 当前登录用户无权审批！
#    wfl.security.error.user_not_relate_emp: 当前用户未关联员工
hchg:
  purchaseDetail:
    model.purchaseDetail.chargeService: 服务代码
    model.purchaseDetail.orderQuantity: 订购次数
    model.purchaseDetail.orderTime: 订购时间
    model.purchaseDetail.paidTime: 付款时间
    model.purchaseDetail.ruleName: 计费规则说明
    model.purchaseDetail.service: 服务
    model.purchaseDetail.tradeNo: 交易流水
    model.serviceCharge.chargeServiceMeaning: 服务说明
    model.serviceCharge.serviceName: 服务说明
    view.button.detail: 查看详情
    view.title.orderDetail: 订单详情
    view.title.orderInfo: 订单信息
    view.title.purchaseDetail: 购买详单
  serviceBill:
    model.serviceBill.chargeAmount: 原价（元）
    model.serviceBill.chargeTimes: 收费服务次数
    model.serviceBill.client: 客户端
    model.serviceBill.discountAmount: 优惠（元）
    model.serviceBill.freeTimes: 不收费服务次数
    model.serviceBill.from: 发生日期从
    model.serviceBill.paidTime: 实际扣款时间
    model.serviceBill.remark: 备注
    model.serviceBill.service: 服务
    model.serviceBill.serviceName: 服务
    model.serviceBill.to: 发生日期至
    model.serviceName: 服务
    view.button.orderDetail: 订购详单
    view.title.serviceBill: 服务账单
  serviceCharge:
    model.serviceCharge.billCycle: 账单周期
    model.serviceCharge.charge: 计费
    model.serviceCharge.chargeBasis: 计费单位
    model.serviceCharge.chargeMethod: 计费方式
    model.serviceCharge.chargeService: 服务代码
    model.serviceCharge.chargeServiceMeaning: 服务说明
    model.serviceCharge.chargeType: 计费类型
    model.serviceCharge.discountLineId: 折扣行
    model.serviceCharge.empty: 暂无
    model.serviceCharge.endDate: 生效日期至
    model.serviceCharge.groupCode: 计费组代码
    model.serviceCharge.groupName: 计费组名称
    model.serviceCharge.intervalCycle: 阶梯周期
    model.serviceCharge.intervalMeasure: 阶梯单位
    model.serviceCharge.measureBasis: 计量单位
    model.serviceCharge.priority: 优先级
    model.serviceCharge.quantity: 计量
    model.serviceCharge.rangeFrom: 阶梯从
    model.serviceCharge.rangeTo: 阶梯至
    model.serviceCharge.remark: 说明
    model.serviceCharge.ruleName: 说明
    model.serviceCharge.scope: 服务范围
    model.serviceCharge.serviceName: 服务名称
    model.serviceCharge.startDate: 生效日期从
    model.serviceCharge.status: 状态
    view.button.cancel: 取消
    view.button.detail: 详情
    view.button.edit: 编辑
    view.button.publish: 发布
    view.title.configInfo: 配置信息
    view.title.modal.serviceList: 服务列表
    view.title.pay.after: 后付费
    view.title.pay.before: 预付费
    view.title.rule.create: 新建计费规则
    view.title.rule.edit: 编辑计费规则
    view.title.rule.view: 查看计费规则
    view.title.serviceCharge: 服务计费配置
    view.title.serviceCharge.detail: 服务计费配置详情
  typeDefinition:
    model.typeDefinition.pattern.error: 只能包含大写字母及数字
hcnf:
  common:
    model.common.configVersion: 配置版本
    model.common.releaseDate: 发布时间
    model.common.serviceCode: 服务编码
    model.common.serviceName: 服务名称
    model.common.updateDate: 更新时间
    model.common.versionNumber: 服务版本
    model.serviceCollect.serviceLogo: 服务图片
    model.upload.support: 上传格式：*.png;*.jpeg
    view.message.confirm.refresh: 确定要刷新
    view.message.refresh.description: 将动态刷新服务配置!
  hystrix:
    model.hystrix.confKey: 类型
    model.hystrix.confTypeCode: 代码
    model.hystrix.enableFlag: 启用
    model.hystrix.enabledFlag: 启用状态
    model.hystrix.noRefreshSuccess: 未刷新
    model.hystrix.propertyName: 参数代码
    model.hystrix.propertyRemark: 参数描述
    model.hystrix.propertyValue: 参数值
    model.hystrix.refreshFailed: 刷新失败
    model.hystrix.refreshMessage: 刷新消息
    model.hystrix.refreshStatus: 刷新状态
    model.hystrix.refreshSuccess: 刷新成功
    model.hystrix.refreshTime: 刷新时间
    model.hystrix.remark: 描述
    model.hystrix.serviceConfLabel: 服务配置标签
    model.hystrix.serviceConfProfile: 服务配置Profile
    model.hystrix.serviceName: 服务
    view.message.title.hystrix: 熔断设置
    view.message.title.modal.create: 新建熔断类型
    view.message.title.noChange: 未修改数据
    view.title.createForm: 创建值
    view.title.editForm: 编辑值
    view.title.hystrix: 熔断规则定义
    view.title.hystrix.detail: 熔断规则定义
    view.title.hystrixRow: 参数行
  nodeRule:
    view.message.confirm.remove: 是否删除此条记录？
  serviceConfig:
    model.serviceConfig.default: 是否默认
    model.serviceConfig.retryable: 默认
    model.serviceConfig.serviceCode: 服务编码
    view.button.refresh: 刷新配置
    view.editor.configInfo: 配置信息
    view.message.editor.create: 新建服务配置
    view.message.editor.edit: 编辑服务配置
    view.message.title: 服务配置
  serviceManage:
    model.serviceManage.serviceCode: 服务编码
    model.serviceManage.serviceName: 服务名称
    view.message.title: 服务管理
    view.message.title.editor.create: 新建服务
    view.message.title.editor.edit: 编辑服务
  serviceRoute:
    model.serviceRoute.customSensitiveHeaders: 自定义敏感头
    model.serviceRoute.gatewayHelper: 自定义GatewayHelper
    model.serviceRoute.helperService: 敏感头部列表
    model.serviceRoute.name: 路由标识
    model.serviceRoute.path: 服务路径
    model.serviceRoute.retryable: 支持路由重试
    model.serviceRoute.serviceCode: 服务编码
    model.serviceRoute.serviceName: 服务名称
    model.serviceRoute.stripPrefix: 去掉前缀
    model.serviceRoute.url: 物理路径
    view.button.refresh: 刷新路由
    view.message.editor.create: 新建服务路由
    view.message.editor.edit: 编辑服务路由
    view.message.refresh.description: 将动态刷新服务路由
    view.message.title: 服务路由
  zuulRateLimit:
    model.zuulRateLimit.consumeRate: 令牌消耗速率
    model.zuulRateLimit.enableFlag: 启用
    model.zuulRateLimit.enabledFlag: 是否启用
    model.zuulRateLimit.maxLimit: 请求数限制
    model.zuulRateLimit.noRefresh: 未刷新
    model.zuulRateLimit.origin: 源请求地址维度
    model.zuulRateLimit.quota: 请求时间限制
    model.zuulRateLimit.rate: 令牌产生速率
    model.zuulRateLimit.rateLimitKey: 代码
    model.zuulRateLimit.rateLimitType: 限流方式
    model.zuulRateLimit.refreshFailed: 刷新失败
    model.zuulRateLimit.refreshInterval: 刷新窗口(秒)
    model.zuulRateLimit.refreshMessage: 刷新消息
    model.zuulRateLimit.refreshStatus: 刷新状态
    model.zuulRateLimit.refreshSuccess: 刷新成功
    model.zuulRateLimit.refreshTime: 刷新时间
    model.zuulRateLimit.remark: 说明
    model.zuulRateLimit.routeKey: 路由
    model.zuulRateLimit.serviceConfLabel: 服务配置标签
    model.zuulRateLimit.serviceConfProfile: 服务配置Profile
    model.zuulRateLimit.serviceName: 网关服务
    model.zuulRateLimit.tenant: 租户维度
    model.zuulRateLimit.uomTypeCode: 代码
    model.zuulRateLimit.url: URL维度
    model.zuulRateLimit.user: 用户维度
    view.button.refresh: 刷新配置
    view.message.detail: 限流方式定义
    view.message.detailAdd: 创建限流方式
    view.message.detailEdit: 编辑限流方式
    view.message.title: 限流配置
    view.message.title.content: 确定删除吗？
    view.message.title.listForm: 新增限流配置
    view.title.detailHeader: 限流方式
    view.title.detailLine: 限流路由
# hdemo is not need
#hdemo:
#  identification:
#    model.identification.creationDate: 识别时间
#    model.identification.error: 识别失败
#    model.identification.field: 字段
#    model.identification.generate: 生成订单
#    model.identification.identification: 识别
#    model.identification.identificationId: 识别ID
#    model.identification.identifyDateFrom: 识别时间从
#    model.identification.identifyDateTo: 识别时间至
#    model.identification.imgUrl: 识别图片
#    model.identification.loginName: 识别人
#    model.identification.value: 值
#    view.message.modal.create: 新建
#    view.message.modal.result: 结果
#    view.message.title.list: 发票识别
#  order:
#    model.order.alipayQR: 支付宝二维码
#    model.order.createDateFrom: 订单时间从
#    model.order.createDateTo: 订单时间至
#    model.order.creationDate: 订单时间
#    model.order.customerName: 客户名称
#    model.order.notifyPhone: 通知手机号
#    model.order.orderAmount: 订单金额
#    model.order.orderNumber: 订单编号
#    model.order.payAmount: 支付金额
#    model.order.payDate: 支付时间
#    model.order.payDateFrom: 支付时间从
#    model.order.payDateTo: 支付时间至
#    model.order.status: 支付状态
#    model.order.unionpayQR: 银联二维码
#    model.order.wechatQR: 微信二维码
#    view.message.modal.pay: 支付渠道
#    view.message.title.list: 订单处理
hdip:
  practice:
    order.header.code: 订单编号
hdtt:
  common:
    producerConfig.view.producerConfig.basic.config: 基本配置
  dataCheck:
    model.dataCheck.all: 全部
    model.dataCheck.batchNum: 核对批次
    model.dataCheck.chkLevel: 核对层级
    model.dataCheck.diffContent: 差异内容
    model.dataCheck.diffType: 差异类型
    model.dataCheck.dimension: 核对维度
    model.dataCheck.failed: 失败
    model.dataCheck.fromDb: 来源DB
    model.dataCheck.fromService: 来源服务
    model.dataCheck.fromTable: 来源表
    model.dataCheck.handling: 处理中
    model.dataCheck.processMsg: 处理消息
    model.dataCheck.processTime: 处理时间
    model.dataCheck.remark: 备注
    model.dataCheck.sourceDb: 生产DB
    model.dataCheck.sourceDs: 生产数据源
    model.dataCheck.sourceLine: 来源行
    model.dataCheck.sourceService: 生产服务
    model.dataCheck.sourceTable: 生产表名
    model.dataCheck.success: 完成
    model.dataCheck.targetDb: 消费DB
    model.dataCheck.targetDs: 消费数据源
    model.dataCheck.targetLine: 消费行
    model.dataCheck.targetService: 消费服务
    model.dataCheck.targetTable: 消费表名
    model.dataCheck.toDb: 目标DB
    model.dataCheck.toService: 目标服务
    model.dataCheck.toTable: 目标表
    model.dataCheck.validation.checkLevel: 请选择核对维度
    model.dataCheck.waiting: 待处理
    view.message.detail: 详情
    view.message.title: 数据核对
    view.message.title.checkDetail: 核对详情
    view.message.title.dataInfo: 数据信息
    view.message.title.detail: 数据核对详情
    view.message.title.launch: 发起核对
    view.message.title.modal.info: 处理信息
    view.message.title.modal.params: 参数选择
  exception:
    model.errorType: 错误类型
    model.exception.checkCompleteFlag: 是否包含已完成
    model.exception.errorText: 错误消息
    model.exception.errorTime: 出错时间
    model.exception.errorTimeFrom: 出错时间从
    model.exception.errorTimeTo: 出错时间至
    model.exception.errorType: 错误类型
    model.exception.eventId: 事件ID
    model.exception.eventType: 事件类型
    model.exception.handle: 处理
    model.exception.messages: 消息内容
    model.exception.number.warning: 请输入正整数
    model.exception.processMsg: 处理信息
    model.exception.retryTimes: 已重试次数
    model.exception.sourceKeyId: 数据ID
    model.exception.sourceService: 生产服务
    model.exception.status.failed: 失败
    model.exception.status.handling: 处理中
    model.exception.status.post: 错误已上报
    model.exception.status.post.failed: 错误上报失败
    model.exception.status.right: 无需处理
    model.exception.status.success: 完成
    model.exception.status.waiting: 待处理
    model.exception.tableName: 生产表名
    model.exception.targetDb: 消费DB
    model.exception.targetService: 消费服务
    model.exception.targetTable: 消费表
    model.exception.view.config: 查看配置
    view.message.title: 生产消费异常监控
  initProcess:
    model.initProcess.config: 消息生产配置
    model.initProcess.createTable: 分发表
    model.initProcess.ddlSql: DDL语句
    model.initProcess.importDataFlag: 初始化数据
    model.initProcess.processDate: 处理日期
    model.initProcess.processStatus: 处理状态
    model.initProcess.service: 服务编码
    model.initProcess.tempTable: 临时表
    veiw.message.ddl.warning: DDL语句不能为空
    view.message.add.warning: 未新增任何数据行
    view.message.continue: 是否继续
    view.message.remove.warning: 完成状态数据不可删除
    view.message.status: 待处理
    view.message.tab.db: DB处理
    view.message.tab.tenant: 租户处理
    view.message.title.ddl: DDL明细
    view.message.title.destribute: 分发处理
    view.message.title.init: 数据初始化
    view.message.unsave: 新增数据未保存
    view.message.update.warning: 未进行数据变更
    view.option.distribute: 分发处理
    view.option.submit: 提交处理
  producerConfig:
    description: 说明
    endDate: 生效日期至
    lov.producerService: 生产服务
    model.producerConfig.consDB: 消费DB
    model.producerConfig.consDataSource: 消费数据源
    model.producerConfig.consDbCode: 分发DB
    model.producerConfig.consServiceName: 消费服务
    model.producerConfig.consTableName: 消费表名
    model.producerConfig.consumerOffset: 初始偏移
    model.producerConfig.copy: 复制
    model.producerConfig.description: 说明
    model.producerConfig.enable: 是否启用
    model.producerConfig.endDate: 生效日期至
    model.producerConfig.init: 初始化
    model.producerConfig.initDb: 初始化DB
    model.producerConfig.initDdl: 初始化DDL
    model.producerConfig.initFlag: 是否初始化数据
    model.producerConfig.initMsg: 初始化消息
    model.producerConfig.initStatus: 初始化状态
    model.producerConfig.initTempTable: 初始化临时表
    model.producerConfig.initTime: 初始化时间
    model.producerConfig.initTimeFrom: 初始化时间从
    model.producerConfig.initTimeTo: 初始化时间至
    model.producerConfig.producerService: 生产服务
    model.producerConfig.refresh.init: 刷新初始化DDL
    model.producerConfig.sourceDb: 生产DB
    model.producerConfig.startDate: 生效日期从
    model.producerConfig.tableName: 生产表名
    model.producerConfig.tenant: 租户
    model.producerConfig.tenantFlag: 是否按照租户分发
    model.producerConfig.tenantName: 消费租户
    model.producerConfig.topicStatus: Topic创建状态
    startDate: 生效日期从
    tableName: 生产表名
    tenantFlag: 是否按照租户分发
    view.message.basic.config: 基本配置
    view.message.copy.success: 复制成功
    view.message.create.consumer: 新建消费配置
    view.message.delete.warning: 请先修改后保存配置信息
    view.message.edit.consumer: 编辑消费配置
    view.message.handleTenantDelete: 请勾选您要删除的数据
    view.message.init.defaultConfig: 初始化默认配置
    view.message.lov.consumerService: 服务名称
    view.message.table.consumptionAllocation: 消费配置
    view.message.tenant.repeat: 不可选择重复租户
    view.message.tenant.warning: 按租户分发时，必须至少有一个租户消费设置
    view.message.title: 数据消息生产消费配置
    view.message.title.allocation: 消息配置
    view.message.title.config: 生产消费配置
    view.message.topicFailedInfo: Topic创建失败信息
    view.message.topicMsg: Topic创建消息
    view.message.topicTime: Topic创建时间
    view.producerConfig.basic.config: 基本配置
    view.producerConfig.init.defaultConfig: 初始化默认配置
  tableChangeLog:
    model.tableChangeLog.changeLog: 变更内容
    model.tableChangeLog.processMsg: 处理信息
    model.tableChangeLog.processTime: 处理时间
    model.tableChangeLog.sourceDs: 生产数据源
    model.tableChangeLog.targetDs: 消费数据源
    view.message.title: 表结构变更日志
  typeDefinition:
    model.typeDefinition.majorCategory: 应用大类
    model.typeDefinition.minorCategory: 应用小类
hfile:
  common:
    validation.notChange: 未更改
  editLog:
    model.editLog.changeDate: 提交时间
    model.editLog.changeDateFrom: 编辑时间从
    model.editLog.changeDateTo: 编辑时间至
    model.editLog.editType: 编辑类型
    model.editLog.fileName: 文件名
    model.editLog.realName: 提交人
    model.editLog.tenantName: 租户
    view.message.title: 文件编辑日志
  fileAggregate:
    modal.fileAggregate.attachmentUuid: 批号
    modal.fileAggregate.bucketName: 分组
    modal.fileAggregate.creationDate: 创建时间
    modal.fileAggregate.fileName: 文件名称
    modal.fileAggregate.fileSize: 文件大小
    modal.fileAggregate.fileType: 文件类型
    model.fileAggregate.attachmentUUID: 批号
    model.fileAggregate.attachmentUuid: 批号
    model.fileAggregate.bucketName: 分组
    model.fileAggregate.configCode: 上传配置编码
    model.fileAggregate.cover: 覆盖已有文件
    model.fileAggregate.directory: 上传目录
    model.fileAggregate.fileFormat: 文件格式
    model.fileAggregate.fileMaxSize: 文件最大
    model.fileAggregate.fileMinSize: 文件最小
    model.fileAggregate.fileName: 文件名
    model.fileAggregate.fileSize: 文件大小
    model.fileAggregate.fileType: 文件类型
    model.fileAggregate.hrealName: 上传人
    model.fileAggregate.isDirectory: 文件夹上传
    model.fileAggregate.path: 上传目录
    model.fileAggregate.realName: 上传人
    model.fileAggregate.serverCode: 服务器编码
    model.fileAggregate.sourceTypeMeaning: 来源类型
    model.fileAggregate.storageCode: 存储配置编码
    model.fileAggregate.tenantId: 租户
    model.fileAggregate.type: 类型
    model.fileAggregate.type.ecs: 服务器存储
    model.fileAggregate.type.obs: 对象存储
    view.button.saveAndClose: 保存并关闭
    view.button.upload: 文件上传
    view.message.patternValidate: 请输入大于等于0的整数
    view.message.title: 文件汇总查询
    view.validation.bucketName: 只能由小写字母、数字，"-"组成
  fileUpload:
    modal.fileUpload.bucketName: 文件目录
    modal.fileUpload.contentType: 文件分类
    modal.fileUpload.fileFormat: 文件格式
    modal.fileUpload.multipleFileFlag: 上传多个文件
    modal.fileUpload.redisUsedCapacity: 已使用容量
    modal.fileUpload.storageSize: 文件大小限制
    modal.fileUpload.storageUnit: 文件大小单位
    modal.fileUpload.totalCapacity: 最大容量
    model.fileUpload.bucketName: 分组
    model.fileUpload.contentType: 文件分类
    model.fileUpload.directory: 上传目录
    model.fileUpload.fileFormat: 文件格式
    model.fileUpload.redisUsedCapacity: 已使用容量
    model.fileUpload.storageSize: 文件大小限制
    model.fileUpload.storageUnit: 文件大小单位
    model.fileUpload.totalCapacity: 最大容量
    view.button.add: 添加详细配置
    view.message.bucketName.validate: 以小写字母和下划线组成
    view.message.create: 新建文件上传详细配置
    view.message.edit: 编辑文件上传详细配置
    view.message.patternValidate: 请输入大于等于0的整数
    view.message.removeFileUpload: 确认删除此条记录？
    view.message.title: 文件上传配置
  serverUpload:
    model.serverUpload.configCode: 配置编码
    model.serverUpload.defaultRootDir: 默认根目录
    model.serverUpload.description: 描述
    model.serverUpload.enableFlag: 启用
    model.serverUpload.rootDir: 根目录
    model.serverUpload.sourceCode: 服务器/集群编码
    model.serverUpload.sourceName: 服务器/集群名称
    model.serverUpload.sourceType: 上传类型
    view.button.addTemplate: 添加
    view.message.drawer.add: 添加
    view.message.drawer.edit: 编辑
    view.message.title: 服务器上传配置
    view.message.title.edit: 服务器上传配置
    view.message.title.serverUpload: 服务器上传配置
    view.title.line: 服务器上传配置明细
  storage:
    model.storage.AccessKeyId: AccessKeyId
    model.storage.AccessKeySecret: AccessKeySecret
    model.storage.AppId: AppId
    model.storage.Domain: 域名(Domain)
    model.storage.Domain2: 代理地址
    model.storage.EndPoint: EndPoint
    model.storage.accessControl: bucket权限控制
    model.storage.accessKeySecret: AccessKeySecret
    model.storage.createBucketFlag: 自动创建桶
    model.storage.defaultFlag: 默认
    model.storage.prefix: bucket前缀
    model.storage.prefixStrategy: 文件名前缀策略
    model.storage.region: Bucket所属地区
    model.storage.storageCode: 存储编码
    model.storage.storageRoute: 存储路径
    model.storage.storageType: 存储类型
    view.message.storageType.AWS: AWS
    view.message.storageType.ali: 阿里云
    view.message.storageType.baidu: 百度云
    view.message.storageType.huawei: 华为云
    view.message.storageType.jingdong: 京东云
    view.message.storageType.local: 本地存储
    view.message.storageType.minio: Minio
    view.message.storageType.qiniu: 七牛云
    view.message.storageType.tencent: 腾讯云
    view.message.title: 文件存储配置
    view.title.storageType.create: '新建 {type}'
    view.title.storageType.edit: '编辑 {type}'
    view.validation.notChange: 未更改
hfpm:
  common:
    date.active.from: 有效日期从
hiam:
  apiField:
    model.api.description: 请求描述
    model.api.method: 请求方式
    model.api.path: 请求路径
    model.api.serviceName: 服务名
    model.field.fieldDescription: 字段描述
    model.field.fieldName: 字段名称
    model.field.fieldType: 字段类型
    model.field.orderSeq: 排序号
    view.button.fieldMaintain: 字段维护
    view.title: 接口字段配置
    view.title.fieldCreate: 字段新建
    view.title.fieldEdit: 字段编辑
  authority:
    model.authorityCompany.dataCode: 代码
    model.authorityCompany.dataName: 公司/业务单元/库存组织
    model.authorityCompany.name: 名称
    model.authorityCustomer.dataCode: 客户企业编码
    model.authorityCustomer.dataName: 客户企业名称
    model.authorityDataSource.dataCode: 数据源代码
    model.authorityDataSource.dataName: 数据源名称
    model.authorityDataSource.tenant: 租户
    model.authorityDataSource.viewCode: 数据源代码
    model.authorityDataSource.viewName: 数据源名称
    model.authorityLovView.dataCode: 值集视图代码
    model.authorityLovView.dataName: 值集视图名称
    model.authorityLovView.tenantName: 租户
    model.authorityLovView.viewCode: 值集视图代码
    model.authorityLovView.viewName: 值集视图名称
    model.authorityManagement.authorityChange: 权限交换
    model.authorityManagement.dataCode: 描述
    model.authorityManagement.dataName: 账号
    model.authorityManagement.noAuthority: 当前暂无可维护的数据权限
    model.authorityManagement.role: 角色
    model.authorityManagement.userAccount: 账号
    model.authorityManagement.userName: 描述
    model.authorityPuragent.dataCode: 采购员代码
    model.authorityPuragent.dataName: 采购员名称
    model.authorityPurcat.dataCode: 品类代码
    model.authorityPurcat.dataName: 品类名称
    model.authorityPurorg.dataCode: 采购组织代码
    model.authorityPurorg.dataName: 采购组织名称
    model.authorityValueList.dataCode: 值集代码
    model.authorityValueList.dataName: 值集名称
    model.authorityValueList.lovCode: 值集代码
    model.authorityValueList.lovName: 值集名称
    model.authorityValueList.tenant: 租户
    model.dataGroup.code: 数据组代码
    model.dataGroup.name: 数据组名称
    model.dataSource.datasourceCode: 数据源代码
    model.dataSource.description: 数据源名称
    model.dataSource.viewCode: 数据源代码
    model.dataSource.viewName: 数据源名称
    model.supplier.dataCode: 供应商企业代码
    model.supplier.dataName: 供应商名称
    model.valueList.dataCode: 值集代码
    model.valueList.dataName: 值集名称
    model.valueList.lovCode: 值集代码
    model.valueList.lovName: 值集名称
    view.button.copy: 权限复制
    view.button.table.create.customer: 新建客户权限
    view.button.table.create.dataGroup: 新建数据组权限
    view.button.table.create.dataSource: 新建数据源权限
    view.button.table.create.lovView: 新建值集视图权限
    view.button.table.create.puragent: 新建采购员权限
    view.button.table.create.purcat: 新建采购品类权限
    view.button.table.create.purorg: 新建采购组织权限
    view.button.table.create.supplier: 新建供应商权限
    view.button.table.create.valueList: 新建值集权限
    view.button.table.delete.customer: 删除客户权限
    view.button.table.delete.dataGroup: 删除数据组权限
    view.button.table.delete.dataSource: 删除数据源权限
    view.button.table.delete.lovView: 删除值集视图权限
    view.button.table.delete.puragent: 删除采购员权限
    view.button.table.delete.purcat: 删除采购品类权限
    view.button.table.delete.purorg: 删除采购组织权限
    view.button.table.delete.supplier: 删除供应商权限
    view.button.table.delete.valueList: 删除值集权限
    view.message.confirmDelete: 确认取消？
    view.message.confirmRemove: 确定删除选中数据？
    view.message.info: 确认取消？
    view.message.label: '加入全部:'
    view.message.tab.dataGroup: 数据组
    view.message.tab.dataSource: 数据源
    view.message.tab.lovView: 值集视图
    view.message.tab.puragent: 采购员
    view.message.tab.purorg: 采购组织
    view.message.tab.valueList: 值集
    view.message.title: 权限维护
    view.message.title.authorityChange: 权限交换操作会将当前用户与所选用户权限值进行互换，请谨慎操作!
    view.message.title.authorityCopy: 权限复制操作会将当前用户的权限一键添加至其他用户，请谨慎操作！
    view.message.title.authorityCopyRole: 权限复制操作会将当前角色的权限一键添加至其他角色，请谨慎操作！
    view.message.title.selectPurorg: 选择采购组织
    view.message.title.tooltip: “加入全部”即将所有客户权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.Purorg: “加入全部”即将所有采购组织权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.cus: “加入全部”即将所有客户权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.dg: “加入全部”即将所有数据组权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.ds: “加入全部”即将所有数据源权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.lovView: “加入全部”即将所有值集视图权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.pa: “加入全部”即将所有采购员权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.pc: “加入全部”即将所有品类权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.pur: “加入全部”即将所有采购员权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.sal: “加入全部”即将所有客户权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.sup: “加入全部”即将所有供应商权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.vl: “加入全部”即将所有值集权限自动添加至当前账户，无需再手工添加。
    view.title.modal.customer: 选择客户
    view.title.modal.dataSource: 选择数据源
    view.title.modal.dg: 选择数据组
    view.title.modal.lovView: 选择值集视图
    view.title.modal.puragent: 选择采购员
    view.title.modal.purcat: 选择采购品类
    view.title.modal.supplier: 选择供应商
    view.title.modal.valueList: 选择值集
  authorityManagement:
    modal.authorityCompany.dataCode: 代码
    modal.authorityCompany.dataName: 公司/业务单元/库存组织
    modal.authorityCompany.name: 名称
    modal.authorityCustomer.dataCode: 客户企业编码
    modal.authorityCustomer.dataName: 客户企业名称
    modal.authorityPuragent.dataCode: 采购员编码
    modal.authorityPuragent.dataName: 采购员名称
    modal.authorityPurcat.dataCode: 品类编码
    modal.authorityPurcat.dataName: 品类名称
    modal.authorityPuritem.dataCode: 物品编码
    modal.authorityPuritem.dataName: 物品名称
    modal.authorityPurorg.dataCode: 采购组织编码
    modal.authorityPurorg.dataName: 采购组织名称
    modal.authoritySalitem.dataCode: 产品编码
    modal.authoritySalitem.dataName: 产品名称
    modal.authoritySupplier.dataCode: 供应商企业编码
    modal.authoritySupplier.dataName: 供应商企业名称
    model.authorityCompany.dataCode: 代码
    model.authorityCompany.dataName: 公司/业务单元/库存组织
    model.authorityCompany.name: 名称
    model.authorityCustomer.dataName: 客户企业名称
    model.authorityLovView.dataCode: 值集视图代码
    model.authorityLovView.dataName: 值集视图名称
    model.authorityLovView.tenantName: 租户
    model.authorityLovView.viewCode: 值集视图代码
    model.authorityLovView.viewName: 值集视图名称
    model.authorityManagement.authorityChange: 权限交换
    model.authorityManagement.dataCode: 描述
    model.authorityManagement.dataName: 账号
    model.authorityManagement.userAccount: 账号
    model.authorityManagement.userName: 描述
    model.authorityPuragent.dataCode: 采购员代码
    model.authorityPuragent.dataName: 采购员名称
    model.authorityPurcat.dataCode: 品类代码
    model.authorityPurcat.dataName: 品类名称
    model.authorityPurorg.dataCode: 采购组织代码
    model.authorityPurorg.dataName: 采购组织名称
    model.authoritySupplier.dataCode: 供应商企业代码
    model.authoritySupplier.dataName: 供应商企业名称
    model.authorityValueList.dataCode: 值集代码
    model.authorityValueList.dataName: 值集名称
    model.authorityValueList.lovCode: 值集代码
    model.authorityValueList.lovName: 值集名称
    model.authorityValueList.tenantName: 租户
    view.button.copy: 权限复制
    view.button.table.create.customer: 新建客户权限
    view.button.table.create.lovView: 新建值集视图权限
    view.button.table.create.puragent: 新建采购员权限
    view.button.table.create.purcat: 新建采购品类权限
    view.button.table.create.purorg: 新建采购组织权限
    view.button.table.create.supplier: 新建供应商权限
    view.button.table.create.valueList: 新建值集权限
    view.button.table.delete.customer: 删除客户权限
    view.button.table.delete.lovView: 删除值集视图权限
    view.button.table.delete.puragent: 删除采购员权限
    view.button.table.delete.purcat: 删除采购品类权限
    view.button.table.delete.purorg: 删除采购组织权限
    view.button.table.delete.supplier: 删除供应商权限
    view.button.table.delete.valueList: 删除值集权限
    view.message.description: 对权限进行维护
    view.message.info: 确认取消
    view.message.label: '加入全部:'
    view.message.tab.customer: 客户
    view.message.tab.lovView: 值集视图
    view.message.tab.puragent: 采购员
    view.message.tab.purcat: 采购品类
    view.message.tab.puritem: 采购物料
    view.message.tab.purorg: 采购组织
    view.message.tab.salitem: 销售产品
    view.message.tab.valueList: 值集
    view.message.title: 权限维护
    view.message.title.authorityChange: 权限交换操作会将当前用户与所选用户权限值进行互换，请谨慎操作!
    view.message.title.authorityCopy: 权限复制操作会将当前用户的权限一键添加至其他用户，请谨慎操作！
    view.message.title.tooltip.Purorg: “加入全部”即将所有采购组织权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.customer: “加入全部”即将所有客户权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.lovView: “加入全部”即将所有值集视图权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.puragent: “加入全部”即将所有采购员权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.purcat: “加入全部”即将所有采购品类权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.puritem: “加入全部”即将所有采购物料权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.purorg: “加入全部”即将所有采购组织权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.salitem: “加入全部”即将所有销售权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.supplier: “加入全部”即将所有供应商权限自动添加至当前账户，无需再手工添加。
    view.message.title.tooltip.valueList: “加入全部”即将所有值集权限自动添加至当前账户，无需再手工添加。
    view.title.modal.customer: 选择客户
    view.title.modal.lovView: 选择值集视图
    view.title.modal.puragent: 选择采购员
    view.title.modal.purcat: 选择采购品类
    view.title.modal.supplier: 选择供应商
    view.title.modal.valueList: 选择值集
  certificationApproval:
    model.addressTable.addressDetail: 详细地址
    model.addressTable.countryName: 国家
    model.addressTable.description: 地址备注
    model.addressTable.postCode: 邮政编码
    model.addressTable.regionPathName: 省/市
    model.attachmentTable.description: 说明
    model.attachmentTable.endDate: 文件到期日
    model.attachmentTable.uploadDate: 最后上传时间
    model.bankTable.bankAccountName: 账户名称
    model.bankTable.bankAccountNum: 银行账号
    model.bankTable.bankBranchName: 开户行名称
    model.bankTable.bankName: 银行名称
    model.bankTable.bankTypeCode: 银行代码
    model.certificationApproval.companyName: 企业名称
    model.certificationApproval.companyNum: 企业编码
    model.certificationApproval.contactMail: 邮箱
    model.certificationApproval.contactName: 默认联系人
    model.certificationApproval.domesticForeignRelation: 境内外关系
    model.certificationApproval.groupName: 集团
    model.certificationApproval.legalRepName: 法定代表人
    model.certificationApproval.processDate: 申请时间
    model.certificationApproval.processDateFrom: 提交时间从
    model.certificationApproval.processDateTo: 提交时间至
    model.certificationApproval.unifiedSocialCode: 统一社会信用代码
    model.contactTable.defaultFlag: 默认联系人
    model.contactTable.department: 部门
    model.contactTable.description: 备注
    model.contactTable.gender: 性别
    model.contactTable.idNum: 证件号码
    model.contactTable.idTypeMeaning: 证件类型
    model.contactTable.mail: 邮箱
    model.contactTable.mobilephone: 手机号码
    model.contactTable.name: 姓名
    model.contactTable.position: 职位
    model.contactTable.telephone: 固定电话
    model.detailForm.buildDate: 成立日期
    model.detailForm.businessNature: 经营性质
    model.detailForm.businessScope: 经营范围
    model.detailForm.companyName: 名称
    model.detailForm.companyTypeMeaning: 类型
    model.detailForm.domesticForeignRelation: 境内外关系
    model.detailForm.industryCategoryList: 主营品类
    model.detailForm.industryList: 行业类型
    model.detailForm.legalRepName: 法定代表人
    model.detailForm.licenceEndDate: 营业期限
    model.detailForm.licenceUrl: 营业执照扫描件
    model.detailForm.logoUrl: 下载公司 Logo
    model.detailForm.longTermFlag: 长期
    model.detailForm.manufuctuerFlag: 制造商
    model.detailForm.primaryIdentity: 主要身份
    model.detailForm.processMsg: 审批意见
    model.detailForm.purchaseFlag: 我要采购
    model.detailForm.registeredCapital: 注册资本
    model.detailForm.registeredCountryName: 注册国家
    model.detailForm.registeredRegionName: 注册地址
    model.detailForm.saleFlag: 我要销售
    model.detailForm.servicerFlag: 服务商
    model.detailForm.shortName: 简称
    model.detailForm.taxpayerType: 纳税人标识
    model.detailForm.traderFlag: 贸易商
    model.financeTable.assetLiabilityRatio: 资产负债率
    model.financeTable.currentAssets: 流动资产（万元）
    model.financeTable.currentLiabilities: 流动负债（万元）
    model.financeTable.currentRatio: 流动比率
    model.financeTable.netProfit: 净利润（万元）
    model.financeTable.revenue: 营业收入（万元）
    model.financeTable.totalAssets: 企业总资产（万元）
    model.financeTable.totalAssetsEarningsRatio: 总资产收益率
    model.financeTable.totalLiabilities: 总负债（万元）
    model.financeTable.year: 年份
    model.operationRecord.processDate: 操作日期
    model.operationRecord.processMsg: 说明
    model.operationRecord.processStatusMeaning: 操作
    model.operationRecord.processUserName: 操作人
    view.button.actionHistory: 操作记录
    view.button.approval: 审批通过
    view.button.reject: 审批拒绝
    view.select.domestic: 境内
    view.select.overseas: 境外
    view.title.businessInfo: 业务信息
    view.title.certificationApproval: 企业认证审批
    view.title.certificationApprovalDetail: 企业认证审批明细
    view.title.companyInfo: 企业信息
    view.title.operationRecord: 操作记录
    view.title.registerInfo: 登记信息
    view.title.tab.addressTable: 地址信息
    view.title.tab.bankTable: 银行信息
    view.title.tab.contactTable: 联系人信息
    view.title.tab.financeTable: 财务信息
    view.validate.approve: 请填写审批意见
  client:
    model.client.accessTokenValidity: 访问授权超时(秒)
    model.client.additionalInformation: 附加信息
    model.client.assignLevelValue: 分配层级值
    model.client.authorizedGrantTypes: 授权类型
    model.client.autoApprove: 自动授权域
    model.client.name: 名称
    model.client.namePattern: 客户端名称只能由1-32位的数字或字母或中划线组成
    model.client.refreshTokenValidity: 授权超时(秒)
    model.client.roleName: 角色名称
    model.client.scope: 作用域
    model.client.secret: 密钥
    model.client.webServerRedirectUri: 重定向地址
    model.role.tenantName: 所属租户
    view.message.autoApprove.help.msg: 自动授权域为oauth认证后，系统自动授权而非用户手动添加的作用域。您最多可输入6个域
    view.message.chooseNewRoleFirst: 请先选择新增的角色
    view.message.chooseRoleFirst: 请先选择要删除的角色
    view.message.scope.help.msg: 作用域为申请的授权范围。您最多可输入6个域
    view.message.title.content: 确定删除吗？
    view.message.title.list: 客户端
    view.message.title.roleModal: 选择角色
    view.validate.additionalInformation: 请输入正确的json字符串
    view.validate.autoApprove: 自动授权域只能包含英文字母
    view.validate.maxLength: 最多只能输入6个域
    view.validate.scope: 作用域只能包含英文字母
  clientRole:
    model.clientRole.members: 角色名称
    view.button.auth: 授权
    view.title.disable: 禁用
    view.title.header: 角色授权
  common:
    view.message.confirm.delete: 是否删除此模板？
    view.message.title.allTemplate: '所有模板:'
    view.message.title.customTemplate: 所选模板
    view.message.title.templateCode: '模板代码:'
    view.message.title.templateName: '模板名称:'
  companySearch:
    model.company.capitalRange: 注册资本
    model.company.industry: 行业
    model.company.serviceArea: 送货或服务范围
    view.message.domestic: 境内
    view.message.investigateTemplate: 调查表模板
    view.message.investigateType: 调查类型
    view.message.invitePart1: 目标企业还未注册？试试
    view.message.invitePart2: 吧
    view.message.inviteRemark: 邀请说明
    view.message.inviter: 邀请方
    view.message.longTerm: 长期
    view.message.manufacturer: 制造商
    view.message.noResult: 没有检索到相关企业
    view.message.overseas: 境外
    view.message.purchase: 我要采购
    view.message.sale: 我要销售
    view.message.sendInvestigation: 发送调查表
    view.message.sendInvitation: 你正在向
    view.message.sendInvitationOne: 发出合作邀约，邀请它成为你的【供应商】
    view.message.sendInvitationTwo: 发出合作邀约，邀请它成为您的【客户】
    view.message.servicer: 服务商
    view.message.trader: 贸易商
    view.option.confirmInvitation: 确认邀请
    view.option.inviteRegister: 邀请注册
    view.option.title.purchaser: 采购商选择
    view.option.title.supplier: 供应商选择
    view.title.invitingInformation: 邀请信息
  docType:
    model.docType. authControlType: 权限控制类型
    model.docType.bizMeaning: 限定业务范围
    model.docType.description: 描述
    model.docType.docTypeCode: 单据编码
    model.docType.docTypeName: 单据名称
    model.docType.levelCode: 层级
    model.docType.orderSeq: 排序号
    model.docType.ruleCode: 数据屏蔽规则代码
    model.docType.ruleName: 数据屏蔽规则名称
    model.docType.sourceDataEntity: 来源数据实体
    model.docType.sourceMatchTable: 来源匹配表
    model.docType.sourceServiceName: 来源微服务
    model.docType.tenantName: 租户名称
    model.docType.tenantNum: 租户编号
    model.docType.userMeaning: 限定个人用户
    model.docType.value: 来源匹配字段
    view.button.createRule: 生成数据屏蔽规则
    view.button.editAuth: 维护权限维度
    view.title.authFormTitle: 采购订单权限维度
    view.title.basicSection: 单据权限类型基本信息
    view.title.docType: 单据权限类型定义
    view.title.editFormTitle: 单据类型定义
    view.title.tenantSection: 租户维护
  invitationList:
    model.invitationList.companyName: 发起邀请的公司
    model.invitationList.creationDate: 发出邀请时间
    model.invitationList.endDate: 发出时间到
    model.invitationList.handleUserName: 邀约处理人
    model.invitationList.investigateTemplateId: 是否发出调查表
    model.invitationList.inviteCompanyName: 被邀请企业名称
    model.invitationList.inviteCompanyNum: 被邀请企业编码
    model.invitationList.inviteId: 邀请编号
    model.invitationList.inviteType: 邀请类型
    model.invitationList.inviteTypeMeaning: 邀请类型
    model.invitationList.processDate: 最后处理时间
    model.invitationList.processMsg: 处理消息
    model.invitationList.processStatus: 邀约状态
    model.invitationList.searchCompanyName: 被邀请企业名称
    model.invitationList.searchCompanyName.placeHolder: 企业名称
    model.invitationList.sendUserName: 发起邀请人
    model.invitationList.startDate: 发出时间从
    view.button.dowm: 展开
    view.button.up: 收起
    view.message.title: 企业邀约汇总
    view.message.title.inviteModal: 合作邀约处理
    view.message.title.receive: 我收到的邀约
    view.message.title.send: 我发出的邀约
  ldap:
    button.saveAndTest: 保存并测试
    model.ldap.account: 管理员登录名
    model.ldap.baseDn: 基准DN
    model.ldap.customFilter: 自定义筛选用户条件
    model.ldap.directoryType: 目录类型
    model.ldap.emailField: 邮箱属性
    model.ldap.ldapAccount: LDAP登录名
    model.ldap.ldapPassword: LDAP密码
    model.ldap.loginNameField: 登录名属性
    model.ldap.objectClass: 用户对象类
    model.ldap.password: 管理员密码
    model.ldap.phoneField: 手机号属性
    model.ldap.port: 端口号
    model.ldap.realNameField: 用户名属性
    model.ldap.serverAddress: 主机名
    model.ldap.useSSL: 是否使用SSL
    model.ldap.uuidField: uuid属性
    option.button.abort: 强制终止
    option.syncErrorUser: 同步用户错误详情
    option.syncUser: 同步用户记录
    view.message.abort.content: 您的同步似乎已经超出正常同步的时间，确定要强制终止同步吗？终止之后您可以重新同步
    view.message.baseDn.help.msg: 'LDAP目录树的最顶部的根，从根节点搜索用户。例如：cn=users,dc=example,dc=com'
    view.message.confirm: 确认
    view.message.content: 确定要禁用LDAP吗？禁用LDAP后，之前所同步的用户将无法登录平台，且无法使用测试连接和同步用户功能
    view.message.error: 失败
    view.message.loginName: 登录名
    view.message.noSyncInfo: 当前没有同步用户记录
    view.message.realNameField.help.msg: 为空时系统将默认获取登录名的值
    view.message.serverAddress.help.msg: '运行 LDAP 的服务器主机名。例如：ldap://example.com'
    view.message.serviceSet: 服务器设置
    view.message.success: 成功
    view.message.sync.cause: 失败原因
    view.message.sync.email: 邮箱
    view.message.sync.lastTime: 上次同步时间
    view.message.sync.loading: 正在同步中
    view.message.sync.loading.tip: (本次同步将会耗时较长，您可以先返回页面进行其他操作)
    view.message.sync.newUserCount: 同步用户新增数量
    view.message.sync.phone: 手机号
    view.message.sync.realName: 用户名
    view.message.sync.syncErrorCount: 同步失败数量
    view.message.sync.syncTime: 同步时间
    view.message.sync.updateUserCount: 同步用户更新数量
    view.message.sync.uuid: UUID
    view.message.test.connect: 基础连接
    view.message.test.email: 邮箱地址
    view.message.test.loading: 正在测试中
    view.message.test.login: LDAP登录
    view.message.test.phone: 手机号码
    view.message.test.realName: 用户名
    view.message.test.result: 测试结果
    view.message.test.user: 用户属性校验
    view.message.useSSL.help.msg: 是否使用SSL会对端口号有影响
    view.message.userInfoSet: 用户属性设置
    view.option.enabled: 启用
    view.option.stop: 禁用
    view.option.syncUser: 同步用户
    view.option.testConnect: 测试连接
    view.option.viewSyncUser: 查看同步记录
  menu:
    view.button.collapseAll: 全部收起
    view.button.createFolder: 创建目录
    view.button.expandAll: 全部展开
    view.button.importMenu: 导入客户化菜单
    view.message.column.code: 编码
    view.message.column.folder: 目录/菜单
    view.message.column.icon: 图标
    view.message.column.parent: 所属预设目录
    view.message.column.type: 类型
    view.message.confirm.delete: 确定删除该目录吗?
    view.message.menu.dir: 自设目录
    view.message.menu.menu: 菜单
    view.message.menu.root: 预置目录
    view.message.organization: 组织
    view.message.platform: 平台
    view.message.project: 项目
    view.message.title: 菜单配置
  menuConfig:
    model.menuConfig.catalogCode: 目录编码
    model.menuConfig.code: 编码
    model.menuConfig.conditionLov: 编码/名称
    model.menuConfig.conditionPermission: 描述/路径
    model.menuConfig.controllerTypeMeaning: 控制类型
    model.menuConfig.createLov: 添加Lov
    model.menuConfig.createPermission: 添加权限
    model.menuConfig.description: 描述
    model.menuConfig.dirCode: 目录编码
    model.menuConfig.dirName: 目录名称
    model.menuConfig.folder: 目录/菜单
    model.menuConfig.icon: 图标
    model.menuConfig.level: 层级
    model.menuConfig.linkCode: 链接编码
    model.menuConfig.linkName: 链接名称
    model.menuConfig.lovCode: 编码
    model.menuConfig.lovName: 名称
    model.menuConfig.lovTypeCode: 类型
    model.menuConfig.menuCode: 菜单编码
    model.menuConfig.menuName: 菜单名称
    model.menuConfig.menuType: 类型
    model.menuConfig.method: 方法
    model.menuConfig.name: 目录/菜单
    model.menuConfig.ownDir: 所属目录
    model.menuConfig.parentName: 上级目录
    model.menuConfig.path: 路径
    model.menuConfig.permissionCode: 权限编码
    model.menuConfig.permissionName: 权限名称
    model.menuConfig.permissionSetCode: 权限集编码
    model.menuConfig.permissionSetName: 权限集名称
    model.menuConfig.permissionType: 权限类型
    model.menuConfig.quickIndex: 快速索引
    model.menuConfig.route: 路由
    model.menuConfig.sort: 序号
    model.menuConfig.type: 类别
    model.menuConfig.virtualFlag: 是否虚拟菜单
    view.button.button.permissionSet: 权限集
    view.button.button.selectIcons: 选择图标
    view.button.createFolder: 创建目录
    view.button.importMenu: 导入客户化菜单
    view.button.importing: 导入中...
    view.button.permissionSet: 权限集
    view.button.refreshPathPermission: 刷新路由权限集
    view.button.selectIcons: 选择图标
    view.button.startImporting: 开始导入
    view.button.viewUndecomposedPermissions: 查看未分解的权限
    view.messaege.description.aboutLevel1: 平台层只能包含平台层目录及菜单，且菜单只能选择平台层权限.
    view.messaege.description.aboutLevel2: 租户层只能包含租户层目录及菜单，且菜单只能选择租户层权限.
    view.messaege.description.editor: '请在下面输入{desc}名称、编码，选择图标创建{type}'
    view.messaege.description.importMenu0: 请提供如下三份菜单元数据文件进行客户化扩展菜单导入：
    view.messaege.description.importMenu1: 1. menu.yaml：菜单结构化数据
    view.messaege.description.importMenu2: 2. language.zh.yaml：中文菜单资源
    view.messaege.description.importMenu3: 3. language.en.yaml：英文菜单资源
    view.message.button.importing: 导入中...
    view.message.button.startImporting: 开始导入
    view.message.column.parent: 所属预设目录
    view.message.confirm.delete: 确定删除该目录吗?
    view.message.description.aboutLevel1: 平台层只能包含平台层目录及菜单，且菜单只能选择平台层权限.
    view.message.description.aboutLevel2: 租户层只能包含租户层目录及菜单，且菜单只能选择租户层权限.
    view.message.description.importMenu0: 请提供如下三份菜单元数据文件进行客户化扩展菜单导入：
    view.message.description.importMenu1: 1. menu.yaml：菜单结构化数据：
    view.message.description.importMenu2: 2. language.zh.yaml：中文菜单资源
    view.message.description.importMenu3: 3. language.en.yaml：英文菜单资源
    view.message.error.levelIsRequired: 层级不能为空
    view.message.export.warning: 请至少选择一行数据
    view.message.importSuccess: 导入成功
    view.message.menu.dir: 目录
    view.message.menu.link: 链接
    view.message.menu.menu: 菜单
    view.message.menu.root: 预置目录
    view.message.organization: 组织
    view.message.platform: 平台
    view.message.project: 项目
    view.message.title: 菜单配置
    view.message.title.UndecomposedPermissions: '“{name}”菜单的未分解权限明细'
    view.message.title.aboutLevel: 关于层级
    view.message.title.addPermissions: 添加权限
    view.message.title.basicInfo: 基本信息
    view.message.title.createWithParam: '创建{name}'
    view.message.title.customMenu: '客户化菜单_{name}'
    view.message.title.decompositionPermissionSetWithParam: '"{name}"的权限集'
    view.message.title.editPermissions: '编辑“{name}”的权限明细'
    view.message.title.editWithParam: '编辑{name}'
    view.message.title.exportMenu: 导出客户化菜单
    view.message.title.importMenu: 导入客户化菜单
    view.message.title.lovs: Lov
    view.message.title.menuPermission: 菜单权限
    view.message.title.modifyWithParam: '修改“{name}”'
    view.message.title.permissionName: '“{name}”的权限集'
    view.message.title.permissionSet: 权限集
    view.message.title.permissions: 权限
    view.message.title.selectIcons: 选择图标
    view.message.title.selectLov: 选择Lov
    view.message.title.selectParentDir: 选择上级目录
    view.message.title.selectPermissions: 选择权限
    view.message.title.viewLovs: '“{name}”的LOV'
    view.message.title.viewPermissions: '“{name}”的权限'
    view.message.user: 个人中心
    view.validation.quickIndex: 快速索引只能由字母和数字组成
  message:
    view.message.create: 新建模板配置
    view.message.edit: 编辑模板配置
    view.message.title: 模板分配配置
  openApp:
    model.openApp.appCode: 应用编码
    model.openApp.appId: APP ID
    model.openApp.appImage: 应用图片
    model.openApp.appKey: APP Key
    model.openApp.appName: 应用名称
    model.openApp.appleImage: 应用图片
    model.openApp.authorizePath: 获取授权码地址
    model.openApp.channel: 登录渠道
    model.openApp.orderSeq: 序号
    model.openApp.redirectUri: 回调地址
    model.openApp.refreshTokenPath: 刷新令牌地址
    model.openApp.scope: 授权列表
    model.openApp.selfPath: 获取个人信息地址
    model.openApp.tokenPath: 获取令牌地址
    model.openApp.uploadSupport: 上传格式：*.png;*.jpeg
    view.message.title: 三方应用管理
    view.validation.notChange: 未更改
  order:
    model.order.companyName: 公司名称
    model.order.customerName: 客户名称
    model.order.orderNumber: 订单编码
  partnership:
    model.actionDetail.companyName: 邀请方
    model.actionDetail.inviteCompanyName: 被邀请方
    model.actionDetail.inviteDate: 邀请时间
    model.actionDetail.processDate: 处理时间
    model.actionDetail.processStatus: 处理状态
    model.company.creationDate: 注册时间
    model.company.groupName: 所属集团
    model.company.mail: 默认联系人邮箱
    model.company.registerTimeFrom: 注册时间从
    model.company.registerTimeTo: 注册时间至
    model.company.telephone: 默认联系人手机
    model.group.coreFlag: 核心企业
    model.group.creationDate: 注册时间
    model.group.groupName: 集团名称
    model.group.groupNum: 集团编码
    model.group.registerTimeFrom: 注册时间从
    model.group.registerTimeTo: 注册时间至
    model.partnership.actionHistory: 操作记录
    model.partnership.inviteDateFrom: 邀约时间起
    model.partnership.inviteDateTo: 邀约时间止
    model.partnership.inviteStatus: 邀约状态
    model.partnership.purchaser: 采购
    model.partnership.purchaserCompanyName: 采购公司名称
    model.partnership.purchaserInvite: 采购方发起
    model.partnership.purchaserTenantName: 采购集团名称
    model.partnership.supplier: 销售
    model.partnership.supplierCompanyName: 销售公司名称
    model.partnership.supplierInvite: 销售方发起
    model.partnership.supplierTenantName: 销售集团名称
    model.partnership.tenantName: 所属集团
    view.company.companyName: 请输入公司名称
    view.company.editTitle: 企业编辑
    view.group.editTitle: 集团编辑
    view.group.groupName: 请输入集团名称
    view.message.actionDetail.title: 操作记录
    view.message.description: 合作关系查询
    view.message.title: 合作关系查询
    view.validation.inviteDate: 邀约时间止小于邀约时间起
  passwordPolicy:
    modal.passwordPolicy.digitsCount: 最少数字数
    modal.passwordPolicy.enableCaptcha: 开启验证码
    modal.passwordPolicy.enableLock: 开启锁定
    modal.passwordPolicy.lowercaseCount: 最少小写字母数
    modal.passwordPolicy.maxLength: 最大密码长度
    modal.passwordPolicy.minLength: 最小密码长度
    modal.passwordPolicy.notRecentCount: 最大近期密码数
    modal.passwordPolicy.notUsername: 允许与登录名相同
    modal.passwordPolicy.originalPassword: 新用户默认密码
    modal.passwordPolicy.regularExpression: 密码正则
    modal.passwordPolicy.specialCharCount: 最少特殊字符数
    modal.passwordPolicy.uppercaseCount: 最小大写字母数
    model.passwordPolicy.digitsCount: 最少数字数
    model.passwordPolicy.enableAppLogin: 移动端允许多处登录
    model.passwordPolicy.enableCaptcha: 启用图形验证码
    model.passwordPolicy.enableLock: 允许锁定用户
    model.passwordPolicy.enableWebLogin: PC端允许多处登录
    model.passwordPolicy.lowercaseCount: 最少小写字母数
    model.passwordPolicy.maxLength: 最大密码长度
    model.passwordPolicy.minLength: 最小密码长度
    model.passwordPolicy.notRecentCount: 近期密码
    model.passwordPolicy.notUsername: 允许与登录名相同
    model.passwordPolicy.originalPassword: 新用户默认密码
    model.passwordPolicy.passwordUpdateRate: 密码更新频率
    model.passwordPolicy.regularExpression: 密码正则
    model.passwordPolicy.specialCharCount: 最少特殊字符数
    model.passwordPolicy.uppercaseCount: 最少大写字母数
    view.message.subTitle.loginPolicy: 登录安全策略
    view.message.subTitle.passwordPolicy: 密码安全策略
    view.message.title: 密码策略
  permissionSet:
    model.permissionSet.allPermission: 所有权限
    model.permissionSet.code: 权限
    model.permissionSet.content: 描述权限
    model.permissionSet.currentPermission: 当前权限
    model.permissionSet.description: 描述
    model.permissionSet.detail: 权限明细
    model.permissionSet.permissionSetName: 权限集名称
    model.permissionSet.permissionSets: 所属权限集
    view.button.addChildren: 新增下级
    view.button.addParent: 新增顶级
    view.button.cancelEditName: 取消编辑
    view.button.disableAll: 禁用当前及下级
    view.button.editName: 编辑名称
    view.button.enableAll: 启用当前及下级
    view.title.drawer: 权限集
    view.title.permissionSet: 权限组合
  portalAssign:
    view.button.assignTemplate: 分配模板
  publicDemo:
    model.publicDemo.clientName: 客户端名
    view.message.title.publicDemo: 前端免登陆示例
  roleManagement:
    model.api.description: 请求描述
    model.api.method: 请求方式
    model.api.path: 请求路径
    model.api.serviceName: 服务名
    model.fieldPermission.desensitize: 脱敏规则
    model.fieldPermission.fieldName: 字段名称
    model.fieldPermission.fieldType: 字段类型
    model.fieldPermission.rule: 权限规则
    model.role.assignLevel: 分配层级
    model.role.assignLevelValue: 分配层级值
    model.role.authRang: 权限维度范围
    model.role.code: 角色编码
    model.role.description: 角色描述
    model.role.docType: 单据
    model.role.inheritedRole: 继承自
    model.role.level: 角色层级
    model.role.msgFlag: 消息发送
    model.role.name: 角色名称
    model.role.parentRole: 上级角色
    model.role.permission: 权限
    model.role.permissionCode: 权限编码
    model.role.permissionDescription: 描述
    model.role.permissionName: 权限名称
    model.role.permissionSetName: 权限集名称
    model.role.roleSource: 角色来源
    model.role.unitCode: 组织编码
    model.role.unitName: 组织名称
    model.role.userLoginName: 用户名
    model.role.userRealName: 名称
    model.roleManagement.adminFlag: 管理标志
    model.roleManagement.adminRole: 父级管理角色
    model.roleManagement.assignLevel: 分配层级
    model.roleManagement.assignLevelValue: 分配层级值
    model.roleManagement.assignedFlag: 分配标志
    model.roleManagement.assignedRole: 分配角色
    model.roleManagement.authRang: 权限维度范围
    model.roleManagement.clientName: 客户端名称
    model.roleManagement.code: 角色编码
    model.roleManagement.createdUserName: 创建人
    model.roleManagement.description: 角色描述
    model.roleManagement.docType: 单据
    model.roleManagement.inheritedRole: 继承自
    model.roleManagement.level: 角色层级
    model.roleManagement.members: 角色名称
    model.roleManagement.msgFlag: 消息发送
    model.roleManagement.name: 角色名称
    model.roleManagement.parentRole: 上级角色
    model.roleManagement.parentUnitName: 父级角色分配组织
    model.roleManagement.permission: 权限
    model.roleManagement.permissionCode: 权限编码
    model.roleManagement.permissionDescription: 描述
    model.roleManagement.permissionName: 权限名称
    model.roleManagement.permissionSetName: 权限层级名称
    model.roleManagement.roleSource: 角色来源
    model.roleManagement.tenant: 所属租户
    model.roleManagement.topRole: 上级角色
    model.roleManagement.unitCode: 组织编码
    model.roleManagement.unitName: 组织名称
    model.roleManagement.userLoginName: 用户名
    model.roleManagement.userRealName: 名称
    model.roleManagement.userType: 用户类型
    model.tenantAssignCards.cardCode: 卡片代码
    model.tenantAssignCards.cardH: 高度
    model.tenantAssignCards.cardInit: 初始化
    model.tenantAssignCards.cardName: 卡片名称
    model.tenantAssignCards.cardType: 卡片类别
    model.tenantAssignCards.cardW: 长度
    model.tenantAssignCards.cardX: 位置X
    model.tenantAssignCards.cardY: 位置Y
    'view,message.title.isRefresh': '有未保存的数据, 是否刷新'
    view.button.addAll: 添加所有
    view.button.assignPermissions: 分配权限
    view.button.button.editPermission: 维护数据权限
    view.button.create: 创建
    view.button.createRole: 创建角色
    view.button.deleteAll: 删除所有
    view.button.editMembers: 分配用户
    view.button.editPermission: 维护数据权限
    view.button.fieldPermission: 字段权限维护
    view.button.inherit: 继承
    view.button.permissionMaintain: 字段权限维护
    view.button.roleCreate: 创建角色
    view.description.members: 请在下面输入一个或多个成员，然后为这些成员选择角色，以便授予他们访问权限。您可以分配多个角色
    view.description.role: 角色是您可分配给成员的一组权限。您可以创建角色并为其添加权限，也可以复制现有角色并调整其权限
    view.message.button.more: 更多
    view.message.title.auth: 权限维度
    view.message.title.authData: 权限数据
    view.notification.error.switchAmindRoleFirst: 请先切换管理员角色
    view.status.stop: 停用
    view.title.assign: '给“{name}”分配权限'
    view.title.assignCards: 工作台配置
    view.title.assignPermissions: 分配权限
    view.title.assignedPermissions: 已分配的权限
    view.title.assignedPermissionsToRole: '给“{name}”分配权限'
    view.title.assignedPermissionsWithParams: '分配权限,已分配{num}个权限'
    view.title.authDims: 权限值
    view.title.button.inherit: 继承
    view.title.clients: 分配客户端
    view.title.content.assignedPermissions: '分配权限,已分配{num}个权限'
    view.title.content.assignedPermissionsWithParams: '分配权限,已分配{num}个权限'
    view.title.content.createRole: '在${name}中创建角色'
    view.title.content.editRole: '修改“{name}”'
    view.title.content.members: '给“{name}”分配用户'
    view.title.content.permissionDetail: 权限明细
    view.title.content.permissionDetailOwn: '“{name}”的权限明细'
    view.title.content.permissionSet: 权限集
    view.title.content.viewRole: '查看角色“{name}”的明细'
    view.title.createRole: 创建角色
    view.title.disable: 禁用
    view.title.editPermission: 维护数据权限
    view.title.editRole: 修改角色
    view.title.fieldPermission: 接口字段权限配置
    view.title.fieldPermissionCreate: 字段权限新建
    view.title.fieldPermissionEdit: 字段权限编辑
    view.title.listHeader: 角色管理
    view.title.members: 分配用户
    view.title.name: 角色名称
    view.title.permissionSet: '权限集“{name}”的权限明细'
    view.title.selectUnit: 选择组织
    view.title.treeHeader: 角色管理树形
    view.title.unassignedPermissions: 未分配的权限
    view.title.viewRole: 查看角色
  serverUpload:
    model.serverUpload.configCode: 配置编码
    model.serverUpload.description: 描述
  ssoConfig:
    model.sscConfig.templateName: 模板名称
    model.ssoConfig.clientHostUrl: 客户端地址
    model.ssoConfig.companyName: 公司名称
    model.ssoConfig.configCode: 配置编码
    model.ssoConfig.configTypeCode: 配置类型
    model.ssoConfig.configTypeCodeMeaning: 配置类型
    model.ssoConfig.configValue: 配置值
    model.ssoConfig.confirmPassword: 确认密码
    model.ssoConfig.differentPassword: 密码与之前不一致
    model.ssoConfig.domainUrl: 域名
    model.ssoConfig.ip: IP
    model.ssoConfig.link: 链接
    model.ssoConfig.loginEncPwd: 登录密码
    model.ssoConfig.loginUser: 登录用户名
    model.ssoConfig.newPassword: 新密码
    model.ssoConfig.noTemplateAssignList: 当前暂无可配置的模板，请点击分配模板按钮进行分配
    model.ssoConfig.orderSeq: 排序号
    model.ssoConfig.port: 端口
    model.ssoConfig.protocol: 服务器协议
    model.ssoConfig.remark: 备注信息
    model.ssoConfig.samlMetaUrl: SAML元数据地址
    model.ssoConfig.serverCode: 服务器代码
    model.ssoConfig.serverName: 服务器名称
    model.ssoConfig.ssoClientId: oAuth认证ClientId
    model.ssoConfig.ssoClientPwd: oAuth认证Client密码
    model.ssoConfig.ssoLoginUrl: 单点登录地址
    model.ssoConfig.ssoLogoutUrl: 单点登出地址
    model.ssoConfig.ssoServerUrl: 单点登录服务器地址
    model.ssoConfig.ssoTypeCode: 单点登录类型
    model.ssoConfig.ssoUserInfo: oAuth认证用户信息
    model.ssoConfig.templateCode: 模板编码
    model.ssoConfig.templateName: 模板名称
    model.ssoConfig.templatePath: 模板路径
    model.ssoConfig.tenantName: 租户名称
    model.ssoConfig.uploadSupport: 上传格式：*.png;*.jpeg
    view.message.modal.create: 新建单点登录页面
    view.message.modal.edit: 编辑单点登录页面
    view.message.title: 分配模板
    view.message.title.detail: 分配模板
    view.message.title.list: 域名配置
  subAccount:
    model.api.description: 请求描述
    model.api.method: 请求方式
    model.api.path: 请求路径
    model.api.serviceName: 服务名
    model.fieldPermission.desensitize: 脱敏规则
    model.fieldPermission.fieldName: 字段名称
    model.fieldPermission.fieldType: 字段类型
    model.fieldPermission.rule: 权限规则
    model.group.defaultGroupId: 默认
    model.group.groupCode: 用户组编码
    model.group.groupName: 用户组名称
    model.organization.unitCode: 组织编码
    model.organization.unitName: 组织名称
    model.role.assignLevel: 分配层级
    model.role.assignLevelValue: 分配层级值
    model.role.defaultRoleId: 默认
    model.role.name: 角色名称
    model.role.parentUnit: 父级角色组织
    model.role.tenantName: 所属租户
    model.subAccount.anotherPassword: 确认密码
    model.subAccount.endDateActive: 有效日期至
    model.subAccount.password: 密码
    model.subAccount.startDateActive: 有效日期从
    model.user.addressDetail: 详细地址
    model.user.anotherPassword: 确认密码
    model.user.authorityType: 权限维度
    model.user.birthday: 出生日期
    model.user.countryId: 国家
    model.user.defaultTenant: 默认租户
    model.user.email: 邮箱
    model.user.enabled: 冻结
    model.user.endDateActive: 有效期至
    model.user.locked: 锁定
    model.user.loginName: 账号
    model.user.nickname: 昵称
    model.user.originalPassword: 原密码
    model.user.password: 密码
    model.user.phone: 手机号码
    model.user.realName: 名称
    model.user.regionId: 地区
    model.user.startDateActive: 有效期从
    model.user.tenant: 所属租户
    model.user.userType: 用户类型
    view.button.authorityCodeImport: 授权码导入
    view.button.batchImport: 账户导入
    view.button.fieldMaintain: 字段权限维护
    view.button.permissionImport: 权限导入
    view.button.permissionMaintain: 字段权限维护
    view.button.roleImport: 角色导入
    view.button.subAccountImport: 账户导入
    view.message.chooseNewGroupFirst: 请先选择新增的用户组
    view.message.chooseNewRoleFirst: 请先选择新增的角色
    view.message.chooseNewTenantFirst: 请先选择租户
    view.message.chooseRoleFirst: 请先选择要删除的角色
    view.message.loginName.tooltip: 不输入账户则自动生成
    view.message.noEnoughRole: 可分配的角色已全部分配完毕
    view.message.notRecentCount.tooltip: 近期密码不能作为更新密码
    view.message.password.tooltip: 不输入密码则使用默认密码
    view.message.title: 子账户管理
    view.message.title.chooseOrganization: 选择组织
    view.message.title.confirmUnlock: 是否确认解锁?
    view.message.title.content: 确定删除吗？
    view.message.title.delete: 提示框
    view.message.title.groupModal: 选择用户组
    view.message.title.permission: 权限
    view.message.title.role: 角色
    view.message.title.roleModal: 选择角色
    view.message.title.userCreate: 账号新建
    view.message.title.userEdit: 账号编辑
    view.message.title.userGroup: 用户组分配
    view.option.authMaintain: 权限维护
    view.option.grantMaintain: 授权维护
    view.option.passwordUpdate: 修改密码
    view.option.unlock: 解除锁定
    view.option.userGroup: 用户组
    view.title.fieldPermission: 接口字段权限配置
    view.title.fieldPermissionCreate: 字段权限新建
    view.title.fieldPermissionEdit: 字段权限编辑
    view.validation.emailNotCheck: 邮箱未验证
    view.validation.passwordLenLimit: 长度为6-30个字符
    view.validation.passwordNoSame: 新密码不能与原密码相同
    view.validation.passwordSame: 确认密码必须与密码一致
    view.validation.phoneNotCheck: 手机号码未验证
    view.validation.timeRange: 有效日期至必须大于有效日期从
  tenantConfig:
    model.tenantConfig.empty: '暂无租户{name}类型的图形'
    model.tenantConfig.initType: 初始化类型
    model.tenantConfig.instanceKey: 租户编码
    model.tenantConfig.noCreate: 暂无租户创建类型的图形
    model.tenantConfig.noUpdate: 暂无租户更新类型的图形
    model.tenantConfig.order: 排序
    model.tenantConfig.processMessage: 处理消息
    model.tenantConfig.processStatus: 处理状态
    model.tenantConfig.processTime: 处理时间
    model.tenantConfig.processorCode: 处理器代码
    model.tenantConfig.processorName: 处理器名称
    model.tenantConfig.processorType: 处理器类型
    model.tenantConfig.remark: 说明
    model.tenantConfig.serviceName: 服务名称
    model.tenantConfig.tenantNum: 租户编码
    view.message.create: 创建
    view.message.update: 更新
    view.title.tenant.create: 租户创建
    view.title.tenant.init.config: 租户初始化处理配置
    view.title.tenant.result.list: 结果列表
    view.title.tenant.update: 租户更新
  tenantLog:
    view.title.error.msg: 错误消息
    view.title.tenant.init.log: 租户初始化处理日志
  userGroupManagement:
    model.userGroup.groupCode: 用户组编码
    model.userGroup.groupName: 用户组名称
    model.userGroup.loginName: 用户账号
    model.userGroup.realName: 用户名称
    model.userGroup.remark: 备注说明
    model.userGroupManagement.groupCode: 用户组编码
    model.userGroupManagement.groupName: 用户组名称
    model.userGroupManagement.loginName: 用户账号
    model.userGroupManagement.realName: 用户昵称
    model.userGroupManagement.remark: 备注说明
    view.message.create: 新建用户组
    view.message.edit: 编辑用户组
    view.message.title: 用户组管理
    view.title.usersAdd: 新增用户
  userInfo:
    model.user.anotherPassword: 确认密码
    model.user.date: 日期格式
    model.user.defaultCompany: 默认公司
    model.user.defaultRole: 默认角色
    model.user.email: 邮箱
    model.user.emailBind: 邮箱绑定
    model.user.emailCaptcha: 邮箱验证码
    model.user.endDateActive: 至
    model.user.groupName: 所属集团
    model.user.language: 语言切换
    model.user.lastLoginAt: 上次登录时间
    model.user.loginName: 账号
    model.user.loginPassword: 登录密码
    model.user.menu: 菜单布局
    model.user.originalPassword: 原密码
    model.user.password: 密码
    model.user.phone: 手机号码
    model.user.phoneBind: 绑定手机
    model.user.phoneCaptcha: 短信验证码
    model.user.realName: 昵称
    model.user.reminderFlag: 首页消息弹窗
    model.user.roleMerge: 角色合并
    model.user.securityLevelMeaning: 安全等级
    model.user.tenantName: 所属集团
    model.user.time: 时间格式
    model.user.timeZone: 时区切换
    model.userInfo.anotherPassword: 确认密码
    model.userInfo.emailCaptcha: 邮箱验证码
    model.userInfo.password: 密码
    model.userInfo.phoneCaptcha: 短信验证码
    view.check: 查看
    view.confirmUnBind: 确定解除绑定
    view.login.log: 登录日志
    view.message.bind: 已绑定
    view.message.cantReceiveEmailCaptcha: 邮箱无法收到验证码
    view.message.cantReceivePhoneCaptcha: 手机无法接收验证码
    view.message.changeAvatar: 更换头像
    view.message.comment.date: 日期首选项，择不同的日期格式
    view.message.comment.email: 可用邮箱加密码登录HZERO，可用邮箱找回密码
    view.message.comment.initPassWord: 安全性高的密码可以使帐号更安全，建议您定期更换密码。
    view.message.comment.language: 语言首选项，用于用户切换语言
    view.message.comment.password: 用于保护账号信息和登录安全
    view.message.comment.phone: 可用手机号加密码登录HZERO，可通过手机号找回密码
    view.message.comment.time: 时间首选项，用户选择不同的时间格式
    view.message.comment.timezone: 时区首选项，用于用户切换时区
    view.message.company: 在汉得云平台内根据权限分配的公司中的默认公司选项
    view.message.component.company: 在汉得云平台内更具权限分配的公司中的默认公司选项
    view.message.component.role: 登录汉得云时默认使用的角色
    view.message.confirmUnBind: 确定解除绑定
    view.message.cutSuccess: 头像裁剪成功
    view.message.date: 日期首选项，选择不同的日期格式
    view.message.description.initPassWord: 管理员设置的初始密码，请修改
    view.message.description.password: 已设置
    view.message.emailBind: 可用邮箱加密码登录HZERO，可用邮箱找回密码
    view.message.fileTypeError: 文件类型不支持
    view.message.language: 语言首选项，用于用户切换语言
    view.message.menu: 菜单首选项，选择不同的菜单布局
    view.message.password: 安全性高的密码可以使账号更安全。建议您定期更换密码，设置一个包含字母，符号或数字中至少两项长度超过6位的密码。
    view.message.passwordUpdateSuccess: '密码修改成功,请重新登录'
    view.message.phoneBind: 可用手机号加密码登录HZERO，可通过手机号找回密码
    view.message.preview: 预览
    view.message.role: 登录汉得云时默认使用的角色
    view.message.roleMerge: 角色合并首选项，选择是否角色合并
    view.message.sizeError: '文件大小不支持，最大支持{maxSize}'
    view.message.time: 时间首选项，选择不同的时间格式
    view.message.timeZone: 时区首选项，用于用户切换时区
    view.message.title.account: 账号绑定
    view.message.title.center: 个人中心
    view.message.title.company: 默认公司
    view.message.title.config: 时区/语言/日期格式/时间格式
    view.message.title.date: 日期格式
    view.message.title.email: 邮箱
    view.message.title.form.email: 更改邮箱
    view.message.title.form.password: 更改密码
    view.message.title.form.phone: 更改手机号码
    view.message.title.form.unCheckedEmail: 绑定邮箱
    view.message.title.form.unCheckedPhone: 绑定手机号码
    view.message.title.language: 语言切换
    view.message.title.openApp: 第三方账户绑定
    view.message.title.organization: 集团设置
    view.message.title.password: 密码
    view.message.title.phone: 手机
    view.message.title.role: 默认角色
    view.message.title.time: 时间格式
    view.message.title.timezone: 时区切换
    view.message.unbind: 未绑定
    view.message.updateSuccess: 头像保存成功
    view.message.uploadTips: 点击或将图片拖到此区域上传图片
    view.message.uploadType: '支持{uploadType}格式，'
    view.message.uploadtype: 图片支持PNG、JPG、JPEG格式，且不能大于2M
    view.option.bind: 绑定
    view.option.clickAvatar: 点击更换头像
    view.option.cut: 确定裁剪
    view.option.gainCaptcha: 获取验证码
    view.option.selectPic: 重新上传
    view.option.unBind: 解绑
    view.status.noSetPassword: '管理员设置的初始密码,请修改'
    view.status.setted: 已设置
    view.title: 个人中心
    view.title.main.accountInfo: 账号信息
    view.title.main.preferenceSetting: 偏好设置
    view.title.main.receiveSetting: 接收设置
    view.title.main.safeSetting: 安全设置
    view.title.subMain.baseInfo: 基本信息
    view.title.subMain.groupInfo: 默认集团信息
    view.title.subMain.openApp: 第三方账号绑定
    view.validation.newEmailNoSameLast: 新邮箱不能和原邮箱相同
    view.validation.newPhoneNoSameLast: 新手机号码不能和原手机号码相同
    view.validation.passwordLenLimit: 长度为6-30个字符
    view.validation.passwordNoSame: 新密码不能与原密码相同
    view.validation.passwordSame: 确认密码必须与密码相同
himp:
  comment:
    model.comment.dataStatus: 数据状态
    model.comment.errorMsg: 错误信息
    model.template.errorMsg: 错误信息
    model.template.imported: 导入结果
    model.template.validated: 验证信息
    view.button.dataUpload: 数据上传
    view.button.downloadTemplate: 下载模板
    view.button.export: 数据导出
    view.button.importData: 数据导入
    view.button.templateCSV: CSV
    view.button.templateExcel: EXCEL
    view.button.uploadExcel: 上传Excel
    view.button.validateData: 数据验证
    view.messaege.option.importedError: 未导入
    view.messaege.option.importedSuccess: 导入成功
    view.messaege.option.validatedError: 未验证
    view.messaege.option.validatedSuccess: 已验证
    view.messaege.title.sureToCancel: 确定取消编辑?
    view.message.error.ImportFile: 请上传导入文件
    view.message.error.notConfigured: 模板客户端路径前缀未配置
    view.message.error.pleaseUploadAnImportFile: 请上传导入文件
    view.message.error.templateClientPathPrefixIsNotConfigured: 模板客户端路径前缀未配置
    view.message.title.currentStatus: '当前数据状态：{name}'
    view.message.title.refreshSuccess: 刷新成功
    view.message.title.sureToCancel: 确定取消编辑？
  commentImport:
    model.commentImport.batch: 批次号
    model.commentImport.creationDate: 创建日期
    model.commentImport.creationDateFrom: 创建日期从
    model.commentImport.creationDateTo: 创建日期至
    model.commentImport.dataCount: 数据数量
    model.commentImport.sheetIndex: Sheet
    model.commentImport.status: 导入状态
    view.button.history: 历史记录
    view.button.restore: 恢复
    view.button.templateImport: 模板导入
    view.message.processHelp: 需要刷新，才能更新进度
    view.title.history: 导入历史
    view.title.process: 进度
  template:
    model.template.changeData: 数据转换
    model.template.changeDataCode: 数据转换编码
    model.template.changeDataFlag: 值集转换
    model.template.changeDataUrl: 数据转换URL
    model.template.columnCode: 列编码
    model.template.columnIndex: 排序号
    model.template.columnName: 列名
    model.template.columnType: 列类型
    model.template.databaseName: 数据源名称
    model.template.description: 描述
    model.template.editTemplateCol: 维护模板列
    model.template.formatMask: 格式掩码
    model.template.length: 长度
    model.template.maxValue: 最大值
    model.template.minValue: 最小值
    model.template.nullable: 可否为空
    model.template.prefixPatch: 客户端路径前缀
    model.template.programCode: 程序编码
    model.template.programName: 程序名称
    model.template.regularExpression: 正则式
    model.template.sampleData: 示例数据
    model.template.templateCode: 模板代码
    model.template.templateName: 模板名称
    model.template.templateType: 模板类型
    model.template.tenantName: 租户
    model.template.validate: 数据验证
    model.template.validateSet: 验证值集
    model.template.validated: 数据验证
    view.messaege.option.client: 客户端
    view.messaege.option.date: 日期
    view.messaege.option.decimal: 浮点数
    view.messaege.option.long: 整数
    view.messaege.option.server: 服务端
    view.messaege.option.string: 字符串
    view.message.title: 导入模板管理
    view.message.title.CSV: CSV
    view.message.title.EXCEL: EXCEL
    view.message.title.commonTemplate: 通用导入
    view.message.title.confirmDelete: 确定删除？
    view.message.title.createCol: 新建列
    view.message.title.createTemplateDetail: 通用模板明细
    view.message.title.editCol: 编辑列
    view.message.title.editTemplateDetail: 通用模板明细
    view.message.title.enable: 是否启用
    view.message.title.selectDataSource: 选择数据源
    view.message.title.selectProgramInfo: 选择程序信息
    view.message.title.sheetTitle: Sheet页
    view.message.title.templateCol: 模板列
    view.message.title.templateDetail: 导入模板管理明细
    view.title.dataSource: 数据源
    view.title.officialDataTableName: 正式数据表名
    view.title.pageName: 页名称
    view.title.pageNumber: 页序号
    view.title.validationRule: 校验规则
hiot:
  dataPointTemplate:
    view.message.title.code: 编码
hitf:
  application:
    model.application.authFlag: 是否授权
    model.application.authorizationRedirectUrl: 授权重定向URL
    model.application.authorizationType: 授权类型
    model.application.authorizedGrantTypes: 客户端授权类型
    model.application.automaticallyAuthorizeDomain: 自动授权域
    model.application.client: 客户端
    model.application.clientId: 客户端ID
    model.application.clientKey: 客户端秘钥
    model.application.clientName: 客户端名称
    model.application.clientTenantName: 所属租户
    model.application.code: 应用代码
    model.application.extraInformation: 附加信息
    model.application.interfaceCode: 接口编码
    model.application.interfaceName: 接口名称
    model.application.name: 应用名称
    model.application.permissionType: 授权类型
    model.application.refreshTokenDate: Refresh Token有效期
    model.application.remark: 说明
    model.application.roleCode: 角色代码
    model.application.roleName: 角色名称
    model.application.serverCode: 服务代码
    model.application.serverName: 服务名称
    model.application.serverType: 服务类型
    model.application.serviceCode: 服务代码
    model.application.serviceName: 服务名称
    model.application.statisticsLevel: 统计维度
    model.application.tenant: 所属租户
    model.application.title.deleteContent: '未保存的数据将会丢失,确定删除吗?'
    model.application.tokenDate: Token有效期
    view.button.addAuth: 添加授权
    view.button.addRole: 添加角色
    view.button.bind: 绑定
    view.button.create: 创建
    view.button.deleteAuth: 删除授权
    view.button.deleteRole: 删除角色
    view.button.resetClientKey: 重置密码
    view.button.untie: 解绑
    view.message.confirm.remove: 确定删除该应用吗?
    view.message.description: 您可以在此定义应用、客户端以及绑定相关服务接口。
    view.message.title.auth.create: 创建认证配置
    view.message.title.auth.edit: 编辑认证配置
    view.message.title.create: 创建客户端授权
    view.message.title.edit: 编辑客户端授权
    view.message.title.editor.create: 创建应用
    view.message.title.editor.withEditedName: '修改“{name}”'
    view.message.title.header: 应用管理
    view.message.title.role.create: 创建角色授权
    view.message.title.role.edit: 编辑角色授权
    view.title.editor.create: 创建应用
    view.title.editor.edit: 编辑应用
    view.title.editor.withEditedName: '修改“{name}”'
    view.title.header: 应用管理
  caManagement:
    model.caManagement.creationDate: 有效期从
    model.caManagement.endDate: 有效期至
    model.caManagement.issuerDomainName: 颁发者
    view.button.upload: 上传证书
    view.button.upload.again: 重新上传
    view.message.confirm.delete: 是否删除此证书？
    view.message.title.caManagement: CA证书管理
    view.message.upload.limit: '证书大小不能超过{size}'
    view.message.upload.success: 上传成功
  clientAuth:
    view.message.title.header: 客户端授权
  clientRole:
    model.clientRole.belong: 继承自
    model.clientRole.code: 角色编码
    model.clientRole.level: 角色层级
    model.clientRole.name: 角色名称
    model.clientRole.parentRole: 父级角色
    model.clientRole.remark: 说明
    model.clientRole.roleSource: 角色来源
    model.clientRole.tenant: 所属租户
    model.clientRole.topRole: 上级角色
    view.button.auth: 授权
    view.title.header: 角色授权
  document:
    create.bodyParams: 新建BODY参数
    view.message: 类型
    view.message.auth: 认证方式
    view.message.default: 默认
    view.message.empty: 暂无
    view.message.general.body: 通用请求体
    view.message.general.body.tip1: 平台API通过将外部API参数封装成为请求体中的payload实体内容进⾏行行透传，进⽽而调⽤用外部API
    view.message.general.body.tip2: 同时，返回时，通过解析外部API响应，进⽽而构造响应体中的payload实体内容进⾏行行返回
    view.message.general.code.tip: '备注:其中请求payload及响应payload对应下⽂的{name}所述内容'
    view.message.interface.info: 外部接⼝请求信息
    view.message.introduction: 简介
    view.message.outer.interface: 外部接⼝信息
    view.message.platform.info: 平台API信息
    view.message.request: 请求
    view.message.response: 响应
    view.message.responseDemo: 响应示例
    view.message.structure: 最外层结构为
    view.message.title.request.mapping: 请求参数映射
    view.message.title.response.mapping: 响应参数映射
    view.message.type: 类型
    view.title.alternative: 备选值
    view.title.bodyParams: BODY参数
    view.title.create.bodyParams: 新建BODY参数
    view.title.create.childParams: 新建子节点参数
    view.title.create.formdata: 新建form-data参数
    view.title.create.pathParams: 新建路径参数
    view.title.create.queryParams: 新建GET/URL参数
    view.title.create.requestHeader: 新建请求头部参数
    view.title.create.respHeader: 新建响应头部参数
    view.title.create.respParams: 新建响应结果参数
    view.title.create.rootParams: 新建根节点参数
    view.title.create.urlencoded: 新建x-www-form-urlencoded参数
    view.title.demo: 示例
    view.title.detailDes: 详细说明
    view.title.document: 接口文档
    view.title.edit.bodyParams: 编辑BODY参数
    view.title.edit.formdata: 编辑form-data参数
    view.title.edit.params: 编辑参数
    view.title.edit.pathParams: 编辑路径参数
    view.title.edit.queryParams: 编辑GET/URL参数
    view.title.edit.requestHeader: 编辑请求头部参数
    view.title.edit.respHeader: 编辑响应头部参数
    view.title.edit.respParams: 编辑响应结果参数
    view.title.edit.testcase: 编辑测试用例
    view.title.edit.urlencoded: 编辑x-www-form-urlencoded参数
    view.title.failedDemo: 失败示例
    view.title.paramsInfo: 参数信息
    view.title.pathParams: 路径参数
    view.title.queryParams: GET/URL参数
    view.title.rawType: raw类型
    view.title.requestDemo: 请求示例
    view.title.requestDes: 请求说明
    view.title.requestHeader: 请求头部
    view.title.responseBody: 响应结果
    view.title.responseDes: 响应说明
    view.title.responseHeader: 响应头部
    view.title.rootType: JSON根类型
    view.title.successDemo: 成功示例
    view.title.test.history: 测试历史
    view.title.testcase: 测试用例
  interfaceLogs:
    model.interfaceLogs.applicationCode: 应用代码
    model.interfaceLogs.applicationName: 应用名称
    model.interfaceLogs.clientId: 客户端ID
    model.interfaceLogs.failure: 失败
    model.interfaceLogs.interfaceLogId: 请求ID
    model.interfaceLogs.interfaceReqBodyParam: 接口调用参数
    model.interfaceLogs.interfaceRequestTime: 请求时间
    model.interfaceLogs.interfaceRequestTimeEnd: 请求时间至
    model.interfaceLogs.interfaceRequestTimeStart: 请求时间从
    model.interfaceLogs.interfaceRespContent: 接口响应内容
    model.interfaceLogs.interfaceUrl: 接口路径
    model.interfaceLogs.invokeKey: 请求ID
    model.interfaceLogs.invokeType: 接口调用类型
    model.interfaceLogs.reqBodyParam: 调用参数
    model.interfaceLogs.requestTime: 请求时间
    model.interfaceLogs.requestTimeEnd: 请求时间至
    model.interfaceLogs.requestTimeStart: 请求时间从
    model.interfaceLogs.respContent: 响应内容
    model.interfaceLogs.responseStatus: 请求状态
    model.interfaceLogs.serverCode: 服务代码
    model.interfaceLogs.serverName: 服务名称
    model.interfaceLogs.success: 成功
    model.interfaceLogs.tenant: 所属租户
    view.message.applicationCode: 应用代码
    view.message.applicationName: 应用名称
    view.message.baseMessage: 基本信息
    view.message.clientId: 客户端ID
    view.message.detail: 详情
    view.message.detailMessage: 详情信息
    view.message.failed: 失败
    view.message.interfaceLogsDetail: 接口监控详情
    view.message.interfaceRequestTime: 接口请求时间
    view.message.interfaceResponseTime: 接口响应时间(ms)
    view.message.interfaceType: 接口类型
    view.message.interfaceUrl: 接口地址
    view.message.invokeKey: 请求ID
    view.message.ip: 请求IP
    view.message.referer: Referer
    view.message.requestMethod: 请求方式
    view.message.responseStatus: 请求状态
    view.message.responseTime: 系统响应时间(ms)
    view.message.serverCode: 服务代码
    view.message.serverName: 服务名称
    view.message.stacktraceMessage: 异常信息
    view.message.success: 成功
    view.message.title: 接口监控
    view.message.userAgent: User-Agent
  interfaceStatistics:
    model.interfaceStatistics.count: 异常次数
    model.interfaceStatistics.interfaceCode: 接口代码
    model.interfaceStatistics.latestTime: 最近异常时间
    model.interfaceStatistics.serverCode: 服务代码
    model.interfaceStatistics.statisticsDetail: 最近异常信息
    model.statistics.count: 异常次数
    model.statistics.interfaceCode: 接口代码
    model.statistics.latestTime: 最近异常时间
    model.statistics.serverCode: 服务代码
    model.statistics.statisticsDetail: 最近异常信息
    view.message.title.header: 健康状况监控
  interfaces:
    model.interfaces.accessTokenUrl: Token URL
    model.interfaces.authFlag: 授权
    model.interfaces.authLevel: 认证层级
    model.interfaces.authLevelValue: 认证层级值
    model.interfaces.authPassword: 认证密码
    model.interfaces.authType: 认证模式
    model.interfaces.authUsername: 认证用户名
    model.interfaces.clientId: 客户端ID
    model.interfaces.clientSecret: 客户端密钥
    model.interfaces.grantType: 授权模式
    model.interfaces.interfaceCode: 接口编码
    model.interfaces.interfaceName: 接口名称
    model.interfaces.isPublicFlag: 是否公共
    model.interfaces.passwordEncodeType: 密码加密类型
    model.interfaces.remark: 备注
    model.interfaces.serverCode: 服务代码
    model.interfaces.serverName: 服务名称
    model.interfaces.serverType: 服务类型
    model.interfaces.soapPassword: 校验密码
    model.interfaces.soapUsername: 校验用户名
    model.interfaces.soapWssPasswordType: SOAP加密类型
    model.interfaces.table.column.option: 操作
    view.button.auth: 认证配置
    view.button.viewDocument: 查看文档
    view.message.button.auth.test: 测试
    view.message.test.success: 测试成功
    view.message.title.authConfigHeader: 认证配置
    view.message.title.header: 接口能力汇总
  maintenanceConfig:
    view.title.maintenanceConfig: 运维配置
  services:
    model.interfaceLogs.failure: 失败
    model.interfaceLogs.success: 成功
    model.services: 参数值
    model.services.accessTokenUrl: 获取Token的URL
    model.services.address: 服务地址
    model.services.address1: 服务地址
    model.services.authPassword: 认证密码
    model.services.authType: 认证模式
    model.services.authUsername: 认证用户名
    model.services.category: 服务类别
    model.services.checkPeriod: 统计周期（秒）
    model.services.checkRoundRobin: 轮询周期（秒）
    model.services.checkThreshold: 异常阈值
    model.services.checkUsecaseId: 所用测试用例
    model.services.checkWarningEmailFlag: 邮件预警
    model.services.checkWarningMsgTplCode: 预警消息模板代码
    model.services.checkWarningSmsFlag: 短信预警
    model.services.checkWarningUserId: 预警目标用户
    model.services.clientId: 客户端ID
    model.services.clientSecret: 客户端密钥
    model.services.code: 服务代码
    model.services.defaultValue: 默认值
    model.services.demo: 示例
    model.services.demo.content: 示例内容
    model.services.documentName: 文档名称
    model.services.enabledFlag0: 未启用
    model.services.enabledFlag1: 启用
    model.services.encryptionType: 加密类型
    model.services.formatRegexp: 格式限制
    model.services.grantType: 授权模式
    model.services.healthCheckFlag: 是否开启健康检查
    model.services.httpcode: Http响应码
    model.services.interfaceAddress: 接口地址
    model.services.interfaceCode: 接口编码
    model.services.interfaceName: 接口名称
    model.services.interfaceType: 接口类型
    model.services.invokeDetailsFlag: 记录调用详情
    model.services.invokeRecordDetails: 记录调用详情
    model.services.invokeStatisticsFlag: 是否记录调用次数
    model.services.mappingClass: 映射类
    model.services.modelCode: 模型编码
    model.services.name: 服务名称
    model.services.nameSpace: 命名空间
    model.services.param: 参数
    model.services.param.alternative.value: 参数潜在值
    model.services.paramName: 参数名
    model.services.paramPrefix: 参数前缀
    model.services.paramValue: 参数值
    model.services.paramValueType: 类型
    model.services.password: 校验密码
    model.services.passwordEncodeType: 密码加密类型
    model.services.publishUrl: 发布地址
    model.services.releaseType: 发布类型
    model.services.remark: 说明
    model.services.requestHeader: 接口ContentType
    model.services.requestMethod: 请求方式
    model.services.requestUrl: 请求地址
    model.services.requiredFlag: 是否必填
    model.services.resDetail: 请求详情
    model.services.respDetail: 响应详情
    model.services.responseStatus: 返回状态
    model.services.responseTime: 耗时
    model.services.soapVersion: SOAP版本
    model.services.statisticsExceedAction: 超阈值措施
    model.services.statisticsGrace: 宽免次数
    model.services.statisticsLevel: 统计维度
    model.services.statisticsPeriod: 统计周期
    model.services.statisticsThreshold: 统计阈值
    model.services.statisticsWarningBefore: 提前预警（次数）
    model.services.table.column.option: 操作
    model.services.tenant: 所属租户
    model.services.test.time: 测试时间
    model.services.type: 服务类型
    model.services.usecaseName: 用例名称
    model.services.usecaseType: 用例类型
    model.services.userName: 校验用户名
    view.button.authConfig: 服务认证配置
    view.button.create: 注册
    view.button.create.internal: 新建内部接口
    view.button.document: 编辑接口文档
    view.button.editDocument: 编辑接口文档
    view.button.execute: 执行
    view.button.import: 导入服务
    view.button.maintenanceConfig: 配置维护
    view.button.register: 注册服务
    view.button.test: 测试
    view.button.test.history: 查看测试历史
    view.button.view: 预览
    view.button.view.code: 代码预览
    view.message.description: 通过服务注册，将外部服务注册到平台，配置认证信息、定义接口列表等
    view.message.detail: 详细信息
    view.message.importFailed: 导入失败
    view.message.importPlaceHolder: 导入地址：支持导入WSDL或者Swagger服务地址描述地址
    view.message.test.success: 测试成功
    view.message.title.deleteContent: 确定删除吗？
    view.message.title.detail: 服务注册详情
    view.message.title.editor.authConfig: 服务认证配置
    view.message.title.editor.create: 注册服务
    view.message.title.editor.edit: 修改服务配置
    view.message.title.header: 服务注册
    view.message.title.interface.create: 创建接口
    view.message.title.interface.edit: 编辑接口
    view.title.deleteContent: 确定删除吗？
    view.title.deleteTitle: 提示框
    view.title.detailHeader: 服务注册基本信息
    view.title.detailInterfaces: 接口配置
    view.title.editor.authConfig: 服务认证配置
    view.title.editor.create: 注册服务
    view.title.editor.edit: 修改服务配置
    view.title.editor.withEditedName: '修改“{name}”'
    view.title.header: 服务注册
    view.title.healthExamination: 健康检查
    view.title.interface.create: 创建接口
    view.title.interface.edit: 编辑接口
    view.title.interface.withInterfaceName: '修改“{name}”'
    view.title.internal.interface: 选择内部接口
    view.title.statisticalAnalysis: 统计分析
  typeDefinition:
    model.typeDefinition.applicationCode: 应用代码
    model.typeDefinition.combineParamName: 组合参数
    model.typeDefinition.combineParamNameRemark: 组合参数说明
    model.typeDefinition.combineParamNameType: 组合参数类型
    model.typeDefinition.combineParamRemark: 组合参数说明
    model.typeDefinition.composePolicy: 编排策略
    model.typeDefinition.instance.class: 映射类
    model.typeDefinition.instance.code: 实例接口代码
    model.typeDefinition.instance.name: 实例接口名称
    model.typeDefinition.instance.orderSeq: 优先级
    model.typeDefinition.instance.sorder: 排序
    model.typeDefinition.instance.weight: 权重
    model.typeDefinition.interfaceId: 开放接口
    model.typeDefinition.majorCategory: 应用大类
    model.typeDefinition.minorCategory: 应用小类
    model.typeDefinition.name: 应用名称
    model.typeDefinition.number.warning: 请输入正整数
    model.typeDefinition.pattern.error: 只能包含大写字母及数字
    model.typeDefinition.remark: 说明
    model.typeDefinition.sourceParamName: 实例参数
    model.typeDefinition.sourceParamNameRemark: 实例参数说明
    model.typeDefinition.sourceParamNameType: 实例参数类型
    model.typeDefinition.sourceParamRemark: 实例参数说明
    model.typeDefinition.targetParamName: 映射参数
    model.typeDefinition.targetParamNameType: 映射参数类型
    model.typeDefinition.targetParamRemark: 映射参数说明
    view.button.test: 测试
    view.message.title.application.type: 应用类型
    view.message.title.button.refresh: 刷新参数配置
    view.message.title.detail.mapping.class: 查看映射类详情
    view.message.title.edit: 编辑
    view.message.title.edit.mapping.class: 查看编辑映射类
    view.message.title.instance.config: 实例配置
    view.message.title.instance.create: 新建实例配置
    view.message.title.instance.edit: 编辑实例配置
    view.message.title.request.mapping: 请求参数映射
    view.message.title.response.mapping: 响应参数映射
    view.message.title.typeDefinition: 应用类型定义
  typeDefinition、:
    view.message.title.instance.config: 实例配置
hivc:
  inspectionHistory:
    model.inspectionHistory.billingDate: 开票时间
    model.inspectionHistory.checkCode: 校验码
    model.inspectionHistory.creationDate: 查验时间
    model.inspectionHistory.errorMessage: 查验结果
    model.inspectionHistory.failure: 失败
    model.inspectionHistory.invoiceAmount: 不含税金额
    model.inspectionHistory.invoiceCode: 发票代码
    model.inspectionHistory.invoiceNo: 发票号码
    model.inspectionHistory.success: 成功
    model.inspectionHistory.tenantName: 租户
    view.message.title: 发票查验历史
  invoiceDetail:
    view.title.line: 发票详情
  manualInspection:
    model.manualInspection.BankAccount: 开户/账号
    model.manualInspection.OCR: OCR发票查验
    model.manualInspection.TaxpayerNumber: 纳税人识别号
    model.manualInspection.amount: 金额
    model.manualInspection.billingDate: 开票日期
    model.manualInspection.billingDatePH: 请选择
    model.manualInspection.checkCode: 校验码
    model.manualInspection.checkCodePH: 请输入校验码后6位
    model.manualInspection.count: 数量
    model.manualInspection.deviceNumber: 机器编号
    model.manualInspection.draweeAddPhone: 购方地址/电话
    model.manualInspection.fee: 价税合计
    model.manualInspection.goodsName: 商品/服务名称
    model.manualInspection.identify: 识别并查验
    model.manualInspection.invoiceAmount: 不含税金额
    model.manualInspection.invoiceAmountPH: 请输入不含税金额
    model.manualInspection.invoiceCode: 发票代码
    model.manualInspection.invoiceCodePH: 请输入10或12或14位数字或字母
    model.manualInspection.invoiceNo: 发票号码
    model.manualInspection.invoiceNoPH: 请输入
    model.manualInspection.invoiceTypeNo: 发票类型
    model.manualInspection.manual: 手工发票查验
    model.manualInspection.model: 规格型号
    model.manualInspection.payee: 销售方
    model.manualInspection.payeeAddPhone: 销方地址/电话
    model.manualInspection.remark: 备注
    model.manualInspection.taxPrice: 税额
    model.manualInspection.taxRate: 税率(%)
    model.manualInspection.title: 购买方
    model.manualInspection.unit: 单位
    model.manualInspection.unitPrice: 单价
    view.message.title: 手工发票查验
    view.message.title.edit: 手工发票查验
    view.title.line: 发票详情
  ocrInspection:
    model.ocrInspection.OCR: OCR识别并查验
    view.message.title: OCR发票查验
    view.message.title.edit: OCR发票查验
hlcd:
  c7n:
    403.view.button.bak: 返回首页
    403.view.title: 抱歉 ，您没有权限访问！
    404.view.button.bak: 返回首页
    404.view.title: 抱歉 ，您访问的页面不存在！
    content.view.learnMore: 了解更多
hmdm:
  bank:
    model.bank.address: 地址
    model.bank.bankCode: 银行代码
    model.bank.bankName: 银行名称
    model.bank.bankShortName: 银行简称
    model.bank.bankType: 银行类型
    model.bank.branchBankCode: 分行代码
    model.bank.branchBankName: 分行名称
    model.bank.contact: 联系人
    model.bank.email: 邮箱
    model.bank.phone: 电话
    model.bank.zeroPaymentFlag: 允许零付款
    view.message.noDataModified: 数据没有修改
    view.message.refSiteSuccess: 导入银行云级数据成功
    view.message.safeAccess: 请保证正确的银行
    view.message.title.bank: 银行定义
    view.message.title.branch: 分行
    view.option.branch: 分行
    view.option.refSite: 引入云级数据
  currencyOrg:
    model.currency.currencyCode: 引用币种代码
    model.currency.currencyName: 引用币种名称
    model.currency.currencySymbol: 货币符号
    model.currency.defaultPrecision: 精度
    model.currency.financialPrecision: 财务精度
    view.message.edit: 编辑币种
    view.message.title: 币种定义
    view.message.title.modal: 编辑租户级币种
    view.option.quote: 引用云级数据
  ledger:
    model.ledger.coaId: 科目表
    model.ledger.currencyCode: 本位币
    model.ledger.ledgerCode: 账套编码
    model.ledger.ledgerName: 账套名称
    model.ledger.periodSetId: 会计期
    model.ledger.sourceCode: 来源
    view.description.ledger: 账套定义明细
    view.title.ledger: 账套定义
  materiel:
    model.materiel.agentCompanyName: 代理商
    model.materiel.attributeName: 属性描述
    model.materiel.attributeValue: 属性值
    model.materiel.brand: 品牌
    model.materiel.categoryCode: 品类代码
    model.materiel.categoryName: 品类名称
    model.materiel.categoryName.platform: 平台分类
    model.materiel.commonName: 通用名
    model.materiel.customCompanyName: 客户名称
    model.materiel.doubleUomName: 双单位
    model.materiel.eanCode: 商品流通码
    model.materiel.explain: 物料说明
    model.materiel.externalBatchFlag: 是否启用外部批次
    model.materiel.forPurchaseFlag: 是否用于采购
    model.materiel.forSalesFlag: 是否用于销售
    model.materiel.grossWeight: 毛重
    model.materiel.importFlag: 是否进口
    model.materiel.internalBatchFlag: 是否启用内部批次
    model.materiel.itemCode: 物料编码
    model.materiel.itemManageMethod: 物料管理方式
    model.materiel.itemName: 物料名称
    model.materiel.itemNumber: 云平台物料编码
    model.materiel.lotNumberingRule: 批号规则
    model.materiel.lpnFlag: 物料运输组
    model.materiel.manufacturerCompanyName: 制造商
    model.materiel.materialsDisplayed: 是否显示失效物料
    model.materiel.model: 型号
    model.materiel.netWeight: 净重
    model.materiel.organizationCode: 库存组织代码
    model.materiel.organizationName: 库存组织描述
    model.materiel.origin: 产地
    model.materiel.ouName: 业务实体
    model.materiel.packingUomName: 包装单位
    model.materiel.primaryUomName: 基本计量单位
    model.materiel.productHierarchies: 产品层次
    model.materiel.purchaseAgentName: 采购员
    model.materiel.quotaManageType: 物料配额管理类型
    model.materiel.realName: 上传人
    model.materiel.remark: 备注
    model.materiel.secondaryUomName: 辅助计量单位
    model.materiel.sourceCode: 数据来源
    model.materiel.specifications: 规格
    model.materiel.taxDescription: 默认税种/税率
    model.materiel.uomConversionRate: 单位转换率
    model.materiel.uomName: 基本计量单位
    model.materiel.uploadDate: 上传时间
    model.materiel.usedItemCode: 旧物料号
    model.materiel.validPeriodFlag: 是否启用有效期
    model.materiel.volume: 体积
    model.materiel.volumeUomName: 体积单位
    model.materiel.weightUomName: 重量单位
    view.message.attribute: 物料属性
    view.message.base: 基本信息
    view.message.explain: 物料说明
    view.message.modal.affiliated.edit: 编辑所属组织
    view.message.tab.affiliatedOrgTable: 所属组织
    view.message.tab.attributeTable: 自定义物品属性
    view.message.tab.categoryTable: 自主品类分配物料
    view.message.tab.partnerTable: 客户物料
    view.message.title.detail.create: 新建物料
    view.message.title.detail.edit: 编辑物料
    view.message.title.list: 物料管理
    view.message.toolTip.affiliated.create: 新增所属组织
    view.message.toolTip.affiliated.delete: 删除所属组织
    view.message.toolTip.attribute.create: 新增物品属性
    view.message.toolTip.attribute.detele: 删除物品属性
    view.message.toolTip.attribute.edit: 编辑物品属性
    view.message.toolTip.category.create: 新增自主品类物料
    view.message.toolTip.category.detele: 删除自主品类物料
    view.message.toolTip.category.edit: 编辑自主品类物料
    view.message.toolTip.partner.create: 新增客户物料
    view.message.toolTip.partner.delete: 删除客户物料
    view.message.toolTip.partner.edit: 编辑客户物料
    view.message.warning.upload: 上传文件大小不能超过
    view.option.batchImport: 批量导入
    view.option.blankOut: 作废
    view.option.partnerImport: 物料合作伙伴导入
  paymentTerms:
    model.paymentTerms.acceptFlag: 需要验收
    model.paymentTerms.invoiceFlag: 需要发票
    model.paymentTerms.sourceCode: 数据来源
    model.paymentTerms.termCode: 条款代码
    model.paymentTerms.termDtlCode: 明细代码
    model.paymentTerms.termDtlDesc: 明细条款
    model.paymentTerms.termName: 条款名称
    view.message.info: 确认取消？
    view.message.title.list: 付款条款
    view.message.title.list.modal: 付款条款
    view.option.termsDetail: 条款明细
  paymentType:
    model.paymentType.ebankAccountFlag: 电子银行账号
    model.paymentType.paymentCode: 付款方式代码
    model.paymentType.paymentName: 付款方式名称
    view.message.tab.unused: 未用
    view.message.tab.use: 使用
    view.message.title: 付款方式定义
    view.message.title.modal.create: 新建付款方式
    view.message.title.modal.edit: 编辑付款方式
  paymentUsages:
    model.paymentUsages.description: 备注
    model.paymentUsages.usageCode: 付款用途代码
    model.paymentUsages.usageName: 付款用途描述
    view.message.description: 付款用途定义
    view.message.title: 付款用途
    view.message.title.modal: 新建付款用途
  period:
    model.period.endDate: 期间至
    model.period.periodName: 期间
    model.period.periodQuarter: 季度
    model.period.periodSetCode: 会计期编码
    model.period.periodSetName: 会计期名称
    model.period.periodTotalCount: 期间总数
    model.period.periodYear: 年
    model.period.startDate: 期间从
    model.period.tenantName: 企业集团名称
    model.period.tenantNum: 企业集团代码
    view.message.disable: 会计期未启用
    view.message.edit: 会计期处于编辑状态
    view.message.maintain: 期间维护
    view.message.range: 期间范围
    view.message.save: 当前页有未保存的数据
    view.message.tab.define: 期间定义
    view.message.tab.search: 期间查询
    view.message.title: 期间定义
    view.message.update: 未进行任何数据修改
    view.option.create: 创建规则
    view.option.quote: 引用云级数据
    view.option.refDetail: 引用明细
  purchaseCategory:
    model.category.categoryCode: 品类代码
    model.category.categoryName: 品类名称
    model.category.impStandardMeaning: 引入要求
    model.category.manufacturingCost: 制造费用
    model.category.materialPrice: 材料总价
    model.category.ouName: 业务实体
    model.category.rateTypeName: 下级品类
    model.category.template: 报价模板
    model.category.templateName: 模板名称
    model.category.uomName: 计量单位
    view.message.copyTemplate: 复制模板
    view.message.modal.createConfiguration: 新增配置项
    view.message.modal.editConfiguration: 编辑配置项
    view.message.supportExtension: 支持扩展名
    view.message.title.list: 自主品类定义
    view.message.title.modal.create: 新建品类
    view.message.title.modal.edit: 编辑品类
    view.message.title.quotationTemplate: 报价模板
    view.message.title.template: 自主品类定义
    view.message.warning.writeConfig: 请填写配置项
  rateOrg:
    modal.rateOrg.currencyNumber: 货币数量
    modal.rateOrg.endDate: 结束时间
    modal.rateOrg.exchangeNumber: 兑换数量
    modal.rateOrg.fromCurrencyCode: 币种代码
    modal.rateOrg.fromCurrencyName: 币种名称
    modal.rateOrg.rateDate: 兑换日期
    modal.rateOrg.rateTypeName: 汇率类型
    modal.rateOrg.rateValue: 汇率
    modal.rateOrg.startDate: 起始时间
    modal.rateOrg.toCurrencyCode: 兑换币种代码
    modal.rateOrg.toCurrencyName: 兑换币种名称
    view.message.create: 新建汇率定义
    view.message.edit: 编辑汇率定义
    view.message.title: 汇率定义
    view.validation.data: 结束时间不能早于起始时间
    view.validation.notSame: 不能选择相同的币种代码
    view.validation.repeatData: 所选日期区间存在重复数据：
  rateTypeOrg:
    model.rateType.rateMethodCode: 方式
    model.rateType.typeCode: 类型编码
    model.rateType.typeName: 类型名称
    view.button.quote: 引用云级数据
    view.description.rateType: 汇率类型定义
    view.title.rateType: 汇率类型定义
  taxRateOrg:
    model.taxRate.cloudDescription: 引用税率描述
    model.taxRate.cloudTaxCode: 引用税率代码
    model.taxRate.cloudTaxRate: 云级税率
    model.taxRate.description: 税率描述
    model.taxRate.taxCode: 税率代码
    model.taxRate.taxRate: 税率
    view.message.title: 集团税率定义
    view.message.title.modal.create: 新建租户级税率
    view.message.title.modal.edit: 编辑租户级税率
    view.option.quote: 引用云级数据
  uom:
    model.uom.refUomCode: 引用单位编码
    model.uom.refUomName: 引用单位名称
    model.uom.uomCode: 计量单位编码
    model.uom.uomName: 计量单位名称
    model.uom.uomTypeCode: 单位类型名称
    view.message.continue: 保存的数据查询后将丢失，是否继续?
    view.message.title: 计量单位定义
    view.message.warn: 未进行数据新增或编辑
    view.option.quote: 引用云级数据
hmfm:
  profile:
    model.profile.name: 配置编码
    model.profile.profileValue: 配置值
    model.profileValue.levelCode: 层级
    model.profileValue.levelValue: 层级值
    model.profileValue.levelValue.GLOBAL: 全局
    model.profileValue.profileValue: 配置值
    view.form.create: 新增配置值
hmnt:
  auditConfig:
    model.auditConfig.auditArgsFlag: 审计请求参数
    model.auditConfig.auditContent: 操作内容
    model.auditConfig.auditResultFlag: 审计响应参数
    model.auditConfig.code: 租户
    model.auditConfig.permissionId: 审计接口
    model.auditConfig.serviceName: 服务
    model.auditConfig.tenantId: 租户
    model.auditConfig.tenantName: 租户
    view.message.create: 新建操作审计配置
    view.message.edit: 编辑操作审计配置
    view.message.title: 操作审计配置
  auditQuery:
    model.auditQuery.auditContent: 操作内容
    model.auditQuery.auditDateEnd: 操作日期至
    model.auditQuery.auditDateStart: 操作日期从
    model.auditQuery.auditDatetime: 操作时间
    model.auditQuery.auditResult: 操作结果
    model.auditQuery.field: 参数名称
    model.auditQuery.serviceName: 服务名称
    model.auditQuery.success: 成功
    model.auditQuery.userId: 用户
    model.auditQuery.value: 参数值
    view.message.modal.params: 操作参数
    view.message.modal.response: 操作响应
    view.message.title.list: 操作审计查询
  dataAudit:
    model.dataAudit.auditType: 操作类型
    model.dataAudit.columnName: 审计列名
    model.dataAudit.endProcessTime: 操作时间至
    model.dataAudit.entityCode: 审计实体
    model.dataAudit.entityId: 主键ID
    model.dataAudit.entityId.warning: 请输入正整数
    model.dataAudit.entityVersion: 版本
    model.dataAudit.fieldCode: 审计字段名
    model.dataAudit.fieldValueNew: 现值
    model.dataAudit.fieldValueOld: 原值
    model.dataAudit.lang: 语言
    model.dataAudit.processTime: 操作时间
    model.dataAudit.processUserName: 操作用户
    model.dataAudit.serviceName: 服务名
    model.dataAudit.startProcessTime: 操作时间从
    model.dataAudit.tableName: 审计表
    view.message.audit.detail: 审计详情
    view.message.detail: 详情
    view.message.title: 数据审计
  dataAuditConfig:
    model.dataAuditConfig.columnName: 列名
    model.dataAuditConfig.dataSecurityFlag: 是否敏感字段
    model.dataAuditConfig.displayMask: 格式掩码
    model.dataAuditConfig.displayName: 展示名称
    model.dataAuditConfig.displayType: 展示类型
    model.dataAuditConfig.fieldName: 字段名
    model.dataAuditConfig.multiLanguageFlag: 是否多语言字段
    model.dataAuditConfig.pkIdFlag: 是否主键
    model.dataAuditConfig.serviceName: 服务名
    model.dataAuditConfig.tableName: 表名
    model.dataAuditConfig.transientFlag: 是否非数据库字段
    model.dataAuditConfig.uniqueFlag: 是否唯一
    view.message.title: 数据审计配置
    view.message.title.audit: 审计
    view.message.title.detail: 数据审计配置详情
    view.message.title.head: 配置信息
    view.message.title.line: 配置详情
hmsg:
  cards:
    message.messageCenter: 消息中心
    message.platformAnnounce: 平台公告
    message.stationMessages: 站内消息
  email:
    button.filter: 设置黑白名单
    model.email.filterStrategy: 安全策略
    model.email.host: 邮件服务器
    model.email.name: 邮箱
    model.email.password: 密码
    model.email.passwordEncrypted: 密码
    model.email.port: 端口
    model.email.propertyCode: 属性编码
    model.email.propertyValue: 属性值
    model.email.protocol: 协议
    model.email.sender: 发送人
    model.email.serverCode: 账户代码
    model.email.serverName: 账户名称
    model.email.tenantName: 租户
    model.email.tryTimes: 重试次数
    model.email.userName: 用户名
    model.email.userName.filterType: 邮箱账户或邮箱服务器
    model.email.userName.type: 用户名为邮箱格式
    view.message.title: 邮箱账户
    view.message.title.exist: 该配置项已存在，请忽重复添加
    view.message.title.filter: 编辑黑白名单
    view.message.title.modal.create: 新建邮箱账户
    view.message.title.modal.edit: 编辑邮箱账户
    view.message.title.modal.server: 服务器配置
    view.message.title.modal.server.create: 新建服务器配置项
    view.message.title.modal.server.edit: 编辑服务器配置项
  form:
    js.model.form.js.serverCode: 账户代码
    js.model.form.js.serverName: 账户名称
    js.model.form.js.tenantName: 租户
  messageQuery:
    modal.messageQuery.endDate: 发送时间至
    modal.messageQuery.error: 错误
    modal.messageQuery.messageTypeCode: 类型
    modal.messageQuery.receiver: 接收人
    modal.messageQuery.receiverAddress: 收件人地址
    modal.messageQuery.serverCode: 账号代码
    modal.messageQuery.startDate: 发送时间从
    modal.messageQuery.subject: 主题
    modal.messageQuery.trxStatusCode: 状态
    model.messageQuery.content: 内容
    model.messageQuery.endDate: 发送时间至
    model.messageQuery.error: 错误
    model.messageQuery.messageTypeCode: 类型
    model.messageQuery.receiver: 接收人
    model.messageQuery.receiverAddress: 收件人地址
    model.messageQuery.sendDate: 发送时间
    model.messageQuery.serverCode: 账号代码
    model.messageQuery.startDate: 发送时间从
    model.messageQuery.subject: 主题
    model.messageQuery.trxStatusCode: 状态
    view.button.resend: 重试
    view.button.save: 确定
    view.message.title: 消息查询
    view.messageQuery.view: 查看
  messageTemplate:
    model.template.externalCode: 外部编码
    model.template.serverTypeCode: 服务类型
    model.template.sqlValue: SQL
    model.template.subcategoryCode: 消息子类型
    model.template.templateCode: 消息模板代码
    model.template.templateContent: 消息模板内容
    model.template.templateName: 消息模板名称
    model.template.templateTitle: 消息模板标题
    model.template.templateTypeMeaning: 消息模板类型
    model.validation.notNull: 消息模板内容不能为空
    view.message.title.detail: 消息模板明细
    view.message.title.list: 消息模板
  notice:
    button.revoke: 撤销
    model.notice.containsDeletedDataFlag: 显示已删除
    model.notice.lang: 语言
    model.notice.noticeCategoryCode: 公告类别
    model.notice.noticeContent: 公告内容
    model.notice.publishedByUser: 发布人
    model.notice.publishedDate: 发布时间
    model.notice.receiverType: 发布类别
    model.notice.receiverTypeCode: 发布对象类别
    model.notice.receiverTypeCode.All: 全部公告
    model.notice.receiverTypeMeaning: 公告类型
    model.notice.statusCode: 公告状态
    model.notice.title: 公告标题
    model.publish.publishedDate: 发布时间
    model.publish.publishedStatus: 发布状态
    model.publish.publisherName: 发布人
    model.receive.receiverSource: 接收方名称
    model.receive.receiverType: 类型
    view.message.alert.noticeContentRequired: 请输入公告内容
    view.message.title.detail: 公告明细
    view.message.title.list: 公告管理
    view.message.title.publish: 发布系统消息公告
    view.title.publishedHistory: 公告发布记录
    view.title.receiveCreate: 新增接收配置
    view.title.receiveHistory: 公告接收记录
    view.validation.titleNotContainEmoji: 标题不能含有表情符号
  portalTemplate:
    model.portalTemplate.templateAvatar: 模板缩略图
    model.portalTemplate.templateCode: 模板代码
    model.portalTemplate.templateName: 模板名称
    model.portalTemplate.templatePath: 模板路径
    view.message.title: 模板维护
  receiveConfig:
    model.receiveConfig.defaultReceiveType: 默认接收方式
    model.receiveConfig.receiveCode: 接收配置编码
    model.receiveConfig.receiveName: 接收配置名称
    model.receiveConfig.receiveType: 默认接收方式
    option.createChildren: 新建下级配置
    view.message.title: 消息接收配置
  receiverType:
    model.receiverType.apiUrl: URL
    model.receiverType.receiver: 接收者
    model.receiverType.typeCode: 接收组编码
    model.receiverType.typeMode: 接收组模式
    model.receiverType.typeName: 描述
    model.receiverType.unitCode: 组织编码
    model.receiverType.unitName: 组织名称
    model.receiverType.userGroupCode: 用户组编码
    model.receiverType.userGroupName: 用户组名称
    model.recieverType.apiUrl: URL
    model.recieverType.routeName: 服务
    view.message.option: 接收组维护
    view.message.title: 接收组维护
    view.title.unitAdd: 新增组织
    view.title.userGroupAdd: 新增用户组
  reportRequest:
    model.reportRequest.reportName: 报表名称
  sendConfig:
    modal.sendConfig.lang: 语言
    modal.sendConfig.paramsName: 参数名称
    modal.sendConfig.paramsValue: 参数值
    modal.sendConfig.recipient: 接收人
    modal.sendConfig.recipientType: 类型
    modal.sendConfig.remark: 备注
    modal.sendConfig.server: 消息服务
    modal.sendConfig.serverId: 消息服务代码
    modal.sendConfig.serverName: 消息服务名称
    modal.sendConfig.templateId: 模板代码
    modal.sendConfig.templateName: 模板名称
    modal.sendConfig.typeCode: 消息类型
    modal.sendConfig.typeMeaning: 启用服务
    model.message.confirm.remove: 确认删除此条记录？
    model.sendConfig.lang: 语言
    model.sendConfig.messageCode: 消息代码
    model.sendConfig.messageName: 消息名称
    model.sendConfig.recipient: 接收人
    model.sendConfig.recipientType: 类型
    model.sendConfig.serverId: 服务编码
    model.sendConfig.serverName: 服务名称
    model.sendConfig.templateCode: 模板代码
    model.sendConfig.templateId: 模板代码
    model.sendConfig.templateName: 模板名称
    model.sendConfig.tenantId: 租户
    model.sendConfig.typeCode: 消息类型
    model.sendConfig.typeMeaning: 启用服务
    view.button.add: 添加服务
    view.button.addParams: 添加参数
    view.button.addRecipient: 添加接收人
    view.button.addTemplate: 添加模板
    view.message.drawer.add: 添加账户
    view.message.drawer.edit: 编辑账户
    view.message.failed: 失败
    view.message.success: 成功
    view.message.title: 发送配置
    view.message.title.add: 消息发送配置 - 添加
    view.message.title.edit: 消息发送配置 - 编辑
    view.tab.service: 服务
    view.title.template: 模板
    view.title.testSend: 测试发送
  smsConfig:
    modal.smsConfig.AccessKey: AccessKey
    modal.smsConfig.EndPoint: EndPoint
    modal.smsConfig.accessKeySecret: accessKeySecret
    modal.smsConfig.serverCode: 账户代码
    modal.smsConfig.serverName: 账户名称
    modal.smsConfig.serverTypeCode: 服务类型
    modal.smsConfig.signName: 短信签名
    model.smsConfig.AccessKey: AccessKey
    model.smsConfig.EndPoint: EndPoint
    model.smsConfig.accessKeySecret: AccessKeySecret
    model.smsConfig.serverCode: 账户代码
    model.smsConfig.serverName: 账户名称
    model.smsConfig.serverTypeCode: 服务类型
    model.smsConfig.signName: 短信签名
    model.smsConfig.tenant: 租户
    view.message.create: 新建短信账户
    view.message.edit: 编辑短信账户
    view.message.title: 短信账户
  smsTemplate:
    modal.smsTemplate.externalCode: 外部编码
    modal.smsTemplate.templateCode: 模板编码
    modal.smsTemplate.templateName: 模板名称
    modal.smsTemplate.title: 短信模板
  templateService:
    modal.templateService.lang: 语言
    modal.templateService.paramsName: 参数名称
    modal.templateService.paramsValue: 参数值
    modal.templateService.recipient: 接收人
    modal.templateService.recipientType: 类型
    modal.templateService.remark: 备注
    modal.templateService.server: 消息服务
    modal.templateService.serverId: 消息服务代码
    modal.templateService.serverName: 消息服务名称
    modal.templateService.template: 消息模板
    modal.templateService.templateId: 模板代码
    modal.templateService.templateName: 模板名称
    modal.templateService.typeCode: 消息类型
    modal.templateService.typeMeaning: 启用服务
    model.message.confirm.remove: 确认删除此条记录？
    view.button.add: 添加服务
    view.button.addParams: 添加参数
    view.button.addRecipient: 添加接收人
    view.message.drawer.add: 添加服务
    view.message.drawer.edit: 编辑服务
    view.message.title: 模板服务映射
    view.message.title.add: 模板服务映射 - 添加
    view.message.title.edit: 模板服务映射 - 编辑
    view.tab.service: 服务
    view.title.testSend: 测试发送
  userMessage:
    modal.userMessage.creationDate: 提交时间
    modal.userMessage.messageTypeCode: 类型
    modal.userMessage.subject: 标题内容
    model.userMessage.creationDate: 提交时间
    model.userMessage.messageTypeCode: 类型
    model.userMessage.subject: 标题内容
    view.message.handleDelete: 请勾选您要删除的数据
    view.message.handleRead: 请勾选您要标记已读的数据
    view.message.title: 站内消息
    view.message.title.detail: 消息详情
    view.option.allMessage: 全部消息
    view.option.allRead: 全部已读
    view.option.readMessage: 已读消息
    view.option.signRead: 标记已读
    view.option.unReadMessage: 未读消息
    view.title.announce: 公告
    view.title.message: 消息
    view.title.notice: 通知
  userReceiveConfig:
    model.userReceiveConfig: '{typeName}'
    model.userReceiveConfig.messageType: 消息类型
    model.userReceiveConfig.type: 消息类型
    view.title.subMain.config: 用户消息接收设置
    view.title.subMain.userReceiveConfig: 用户消息接收设置
hnlp:
  basicData:
    model.basicData.actualValue: 实际类型
    model.basicData.context: 上下文
    model.basicData.dataKey: 数据编码
    model.basicData.dataType: 数据类型
    model.basicData.empty: 存在映射值
    model.basicData.id: 数据ID
    model.basicData.mappedValue: 映射值
    model.basicData.value: 数据值
    view.title.actualValueEdit: 实际类型编辑
    view.title.help.fileExport: 上下文多于3列，请修改导入模板，模板编码HNLP.BASIC_DATA
  common:
    message.noSaveDataSubmit: 有修改的数据未提交，是否继续?
  configTemplate:
    model.configTemplate.actualType: 识别要素
    model.configTemplate.baseActualTypeMsg: 基础数据中存在的实际类型
    model.configTemplate.isCustom: 是否映射
    model.configTemplate.resultActualTypeMsg: 识别结果中的数据类型映射
    model.configTemplate.template: 模板
    model.configTemplate.templateCode: 模板编码
    model.configTemplate.templateName: 模板名称
    model.configTemplate.type: 映射数据类型
    model.configTemplate.typeNum: 识别要素数量
    model.configTemplate.typeNumMsg: 同一数据类型，能够被识别的词语数量
    view.title.create: 创建模板配置
    view.title.edit: 编辑模板配置
  template:
    model.template.description: 模板描述
    model.template.maxGram: 模型准确度
    model.template.maxGram.type: 识别算法的准确度，准确度越高，误识别率越低，识别性能消耗越高
    model.template.replaceChar: 替换字符串
    model.template.replaceChar.type: 识别文本中可能存在的特殊字符，识别时会按照字符替换为空
    model.template.templateCode: 模板编码
    model.template.templateCode.type: 在调用识别接口时使用的编码参数
    model.template.templateName: 模板名称
    view.title.create: 创建模板
    view.title.edit: 编辑模板
  templateWord:
    model.templateWord.actualValue: 实际词语
    model.templateWord.template: 模板
    model.templateWord.templateName: 模板名称
    model.templateWord.tenant: 租户
    model.templateWord.tenantName: 租户
    model.templateWord.value: 转化后词语
    view.title.create: 创建模板词语映射
    view.title.edit: 编辑模板词语映射
  tenantWord:
    model.tenantWord.actualValue: 实际词语
    model.tenantWord.hzeroPlatform: HZERO平台
    model.tenantWord.value: 转化后词语
    view.title.create: 创建词语映射
    view.title.edit: 编辑词语映射
  textExtraction:
    model.textTraction.contextKey: contextKey
    model.textTraction.contextType: contextType
    model.textTraction.tagType: 标记类型
    model.textTraction.tagValue: 标记值
    model.textTraction.template: 模板
    model.textTraction.tenant: 租户
    model.textTraction.text: 识别文本
    view.message.Authorization: '其中Y2xpZW50OnNlY3JldA==为clientid值:secret值base64加密后的值'
    view.message.example: 示例：
    view.message.password: 密码
    view.message.passwordSuggest: '建议用http://tool.oschina.net/encrypt?type=3进行加密'
    view.message.passwordTips: 密码需要BASE64加密
    view.message.request: 识别测试请求
    view.message.requestBody: 请求报文
    view.message.requestHeader: 头信息
    view.message.requestToken: token获取请求
    view.message.requestURL: 请求URL
    view.message.userName: 用户名
    view.message.v: 请求方式
    view.title.extractionResult: 识别结果
    view.title.extractionSource: 识别内容
    view.title.resultMsg: 识别消息
    view.title.resultStatus: 识别状态码
  textExtractionLog:
    model.textExtractionLog.contexts: 上下文
    model.textExtractionLog.convert: 转换文本
    model.textExtractionLog.convertText: 转换文本
    model.textExtractionLog.maintain: 数据维护
    model.textExtractionLog.tagType: 标记类型
    model.textExtractionLog.tagValue: 标记值
    model.textExtractionLog.templateCode: 模板编码
    model.textExtractionLog.text: 识别文本
    view.btn.viewOriData: 查看原始数据
    view.title.extractionResult: 识别结果
    view.title.finalResult: 转换结果
    view.title.view: 查看详情
    view.title.viewOriData: 查看原始数据
  textTraction:
    model.textTraction.tagType: 标记类型
    model.textTraction.tagValue: 标记值
hoce:
  commonOcr:
    model.commonOcr.key: 值
hocr:
  auditConfig:
    model.auditConfig.realName: 识别人
  commonOcr:
    model.commonOcr.imageBack: 身份证反面
    model.commonOcr.imageFront: 身份证正面
    model.commonOcr.imageUrl: 识别图片
    model.commonOcr.resultInfo: 文本内容
    view.title.commonOcr: 通用OCR
  ocrRecord:
    model.ocrRecord.realName: 识别人
    model.ocrRecord.recognizeDate: 识别时间
    model.ocrRecord.recognizeDateFrom: 识别时间从
    model.ocrRecord.recognizeDateTo: 识别时间到
    model.ocrRecord.recognizeType: 识别类型
    model.ocrRecord.resourceUrl: 文件路径
    model.ocrRecord.typeMeaning: 识别类型
    view.title.ocrRecord: 识别汇总
hpay:
  order:
    model.order.paid: 已支付
    model.order.unpaid: 待支付
  payConfig:
    button.cert: 证书
    button.clearCert: 清除证书
    model.payConfig.alipublicKey: 支付宝公钥
    model.payConfig.appId: APPID
    model.payConfig.certPwd: 证书密码
    model.payConfig.channelCode: 支付渠道
    model.payConfig.channelMeaning: 支付渠道
    model.payConfig.configCode: 支付配置编码
    model.payConfig.configName: 支付配置名称
    model.payConfig.content: 证书内容
    model.payConfig.defaultFlag: 默认标识
    model.payConfig.mchId: 合作商ID
    model.payConfig.middleCert: 中级证书
    model.payConfig.payNotifyUrl: 支付回调地址
    model.payConfig.privateCert: 私钥证书
    model.payConfig.privateKey: 私钥
    model.payConfig.publicKey: 转账公钥
    model.payConfig.refundNotifyUrl: 退款回调地址
    model.payConfig.returnUrl: 页面回调地址
    model.payConfig.rootCert: 根证书
    model.payConfig.seller: 收款账号
    model.payConfig.signType: 签名方式
    view.message.cert: 证书
    view.message.create: 新建支付配置
    view.message.edit: 编辑支付配置
    view.message.title: 支付配置
    view.message.uploadError: 上传失败
  paymentOrder:
    model.paymentOrder.cancelReason: 订单撤销原因
    model.paymentOrder.canceled: 取消
    model.paymentOrder.changeDateFrom: 编辑时间从
    model.paymentOrder.changeDateTo: 编辑时间至
    model.paymentOrder.channelCode: 支付渠道
    model.paymentOrder.channelRespCode: 支付消息码
    model.paymentOrder.channelRespMsg: 支付消息
    model.paymentOrder.channelTradeNo: 支付流水号
    model.paymentOrder.currencyCode: 币种
    model.paymentOrder.expireTime: 到期时间
    model.paymentOrder.failed: 失败
    model.paymentOrder.merchantOrderNum: 商户订单号
    model.paymentOrder.paid: 已支付
    model.paymentOrder.paymentAmount: 金额
    model.paymentOrder.paymentCustomer: 支付用户
    model.paymentOrder.paymentDatetime: 支付成功时间
    model.paymentOrder.paymentDatetimeFrom: 支付时间从
    model.paymentOrder.paymentDatetimeTo: 支付时间至
    model.paymentOrder.paymentDescription: 支付订单描述
    model.paymentOrder.paymentOrderNum: 支付订单号
    model.paymentOrder.paymentSubject: 订单标题
    model.paymentOrder.returnUrl: 页面回调地址
    model.paymentOrder.status: 状态
    model.paymentOrder.unpaid: 待支付
    view.message.title: 支付订单
  refundOrder:
    model.refundOrder.channelCode: 支付渠道
    model.refundOrder.channelRespCode: 退款消息码
    model.refundOrder.channelRespMsg: 退款消息
    model.refundOrder.channelTradeNo: 支付流水号
    model.refundOrder.currencyCode: 币种
    model.refundOrder.failed: 退款失败
    model.refundOrder.merchantOrderNum: 商户订单号
    model.refundOrder.paymentOrderNum: 支付订单号
    model.refundOrder.refundAmount: 退款金额
    model.refundOrder.refundDatetime: 退款成功时间
    model.refundOrder.refundDatetimeFrom: 退款时间从
    model.refundOrder.refundDatetimeTo: 退款时间至
    model.refundOrder.refundOrderNum: 退款订单号
    model.refundOrder.refundReason: 退款原因
    model.refundOrder.refundWay: 退款方式
    model.refundOrder.refunded: 已退款
    model.refundOrder.refunding: 退款中
    model.refundOrder.refused: 退款拒接
    model.refundOrder.status: 退款状态
    model.refundOrder.totalAmount: 订单总金额
    model.refundOrder.unref: 待退款
    view.message.title: 退款订单
hpfm:
  bank:
    model.bank.bankCode: 银行代码
    model.bank.bankName: 银行名称
    model.bank.bankShortName: 银行简称
    model.bank.bankType: 银行类型
    view.message.editBank: 编辑银行
    view.message.newBank: 新建银行
    view.message.title: 银行定义
  button:
    action: 操作
    create: 新建
  calendar:
    model.calendar.calendarName: 描述
    model.calendar.country: 国家/地区
    model.calendar.dateRange: 假期范围
    model.calendar.holidayName: 公休假期
    model.calendar.holidayType: 公休假期类型
    model.calendar.keyDate: 假期当天
    model.calendar.maintain: 日历维护
    model.calendar.remark: 说明
    model.calendar.week: 星期
    model.calendar.workday: 工作日
    view.message.detail.title: 日历查询
    view.message.drawer: 信息编辑
    view.message.maintain: 公共假期维护
    view.message.not.include: 日期范围未包含当前日期
    view.message.title.define: 日历定义
    view.message.validation.date.notNull: 日期不能为空
    view.message.weekday: 工作日分配
  card:
    model.card.catalogType: 卡片类型
    model.card.code: 卡片代码
    model.card.description: 卡片描述
    model.card.fdLevel: 层级
    model.card.h: 高度
    model.card.name: 卡片名称
    model.card.w: 宽度
    view.button.assignCard: 分配卡片
    view.title.cardAssign: 分配卡片
    view.title.cardCreate: 卡片新建
    view.title.cardEdit: 卡片编辑
    view.title.cardsSetting: 卡片设置
    view.title.list: 卡片管理
  cardTenantList:
    model.tenant.loginDate: 最近访问日期
    model.tenant.tenantName: 租户名称
    view.title.tenantList: 可访问租户列表
  codeRule:
    model.codeRule.addColumn: 向下新增一列
    model.codeRule.addRow: 向下新增一行
    model.codeRule.canCombineRightFiled: 只能合并右侧空字段
    model.codeRule.canNotDelLastCol: 不能删除最后一列
    model.codeRule.canNotDelLastRow: 不能删除最后一行
    model.codeRule.canQCFiled: 只能拆分合并后的字段
    model.codeRule.cancelCombine: 取消合并
    model.codeRule.combineRight: 向右合并
    model.codeRule.currentValue: 当前值
    model.codeRule.dateMask: 日期掩码
    model.codeRule.deleteCol: 删除列
    model.codeRule.deleteRow: 删除行
    model.codeRule.description: 规则描述
    model.codeRule.description.dist: 描述
    model.codeRule.fieldTypeDescription: 段类型
    model.codeRule.fieldValue: 段值
    model.codeRule.isDelCurCol: 是否删除当前列
    model.codeRule.isDelCurRow: 是否删除当前行
    model.codeRule.levelCodeDescription: 层级
    model.codeRule.levelValueDescription: 值
    model.codeRule.meaning: 层级
    model.codeRule.orderSeq: 序号
    model.codeRule.resetData: 上次重置日期
    model.codeRule.resetFrequencyDescription: 重置频率
    model.codeRule.ruleCode: 规则代码
    model.codeRule.ruleName: 规则名称
    model.codeRule.seqLength: 位数
    model.codeRule.startValue: 开始值
    model.codeRule.tenantName: 租户
    model.codeRule.usedFlag: 是否已经使用
    view.codeRule.minOrderSeq: 序号需大于1
    view.codeRule.minSeqLength: 位数需大于0
    view.codeRule.minStartValue: 开始值需大于0
    view.detail.button.create: 新增层级
    view.detail.button.delete: 删除层级
    view.message.description.Dist: 规则明细信息
    view.message.description.list: 设置编码规则
    view.message.error: 序号不能重复
    view.message.info: 提示：当前数据已经被使用，无法修改！
    view.message.title.detail: 编码段维护
    view.message.title.dist: 规则明细
    view.message.title.list: 编码规则
    view.message.title.modal.list: 新建编码规则
    view.option.change: 修改编码段
    view.title.addLevel: 新增层级
    view.title.codeRule: 编码规则
    view.title.codeRuleLine: 层级
    view.title.createField: 新建编码段
    view.title.editField: 编辑编码段
    view.title.editLevel: 编辑层级
  common:
    date.active.to: 有效日期至
    model.common.orderSeq: 排序号
    userUI.view.filterBar.display: 显示
    userUI.view.filterBar.field: 字段
    userUI.view.filterBar.lock: lock
    userUI.view.filterBar.orderSeq: 排序
  company:
    model.company.companyName: 公司名称
    model.company.organizationCode: 公司编码
    model.company.shortName: 公司简称
    view.message.title: 公司
    view.message.title.modal.create: 新建公司
    view.message.title.modal.edit: 公司信息
  config:
    model.config.favicon: favicon
    model.config.logo: LOGO
    model.config.menuLayout: 菜单布局
    model.config.menuLayoutTheme: 菜单布局主题
    model.config.roleMergeFlag: 角色合并
    model.config.title: 系统标题
    model.config.uploadSupport: '上传格式：{type}'
    view.extra.title: 输入全局系统标题
    view.message.title: 系统配置
    view.title.config: 系统配置
  country:
    model.country.abbreviation: 简称
    model.country.area: 地区定义
    model.country.condition: 国家代码/国家名称
    model.country.countryCode: 国家代码
    model.country.countryName: 国家名称
    model.country.quickIndex: 快速索引
    view.message.title: 国家定义
    view.message.title.modal.create: 新建国家
    view.message.title.modal.edit: 编辑国家
  currency:
    model.currency.countryName: 国家/地区
    model.currency.currencyCode: 币种代码
    model.currency.currencyName: 币种名称
    model.currency.currencySymbol: 货币符号
    model.currency.defaultPrecision: 精度
    model.currency.financialPrecision: 财务精度
    model.currency.tenantName: 企业集团名称
    model.currency.tenantNum: 企业集团代码
    view.message.description.detail: 规则明细信息
    view.message.description.list: 币种类型定义
    view.message.title.create: 新建币种
    view.message.title.detail: 规则明细
    view.message.title.detail.modal: 币种明细
    view.message.title.edit: 编辑币种
    view.message.title.list: 币种定义
    view.message.title.list.modal: 新建币种
    view.option.referenceDetail: 引用明细
  customize:
    button.create: 新建
    button.refresh: 刷新服务
    model.customize.point.className: 类名
    model.customize.point.methodArgs: 方法参数列表
    model.customize.point.methodDescription: 方法描述
    model.customize.point.methodName: 方法名
    model.customize.point.msg: 输入扫描的包名，多个包用逗号隔开
    model.customize.point.packageName: 包名
    model.customize.point.serviceName: 服务名
    model.customize.point.typeValue: 代码
    model.customize.range.description: 描述
    model.customize.range.enableFlag: 启用
    model.customize.range.tenantName: 租户
    model.customize.rule.description: 描述
    model.customize.rule.enableFlag: 启用
    model.customize.rule.ruleCode: 规则编码
    model.customize.rule.ruleName: 规则名称
    model.customize.rule.rulePositionMeaning: 位置
    model.customize.rule.syncFlag: 同步
    model.customize.rule.tenantName: 租户
    model.customize.rule.typeCode: 类别
    model.customize.serviceChoice: 服务选择
    range.button.use: 应用规则
    view.title.header: API 个性化
    view.title.point: 个性化切入点
    view.title.point.create: 创建切入点
    view.title.range: 个性化范围
    view.title.range.create: 新建范围
    view.title.range.edit: 编辑范围
    view.title.rule: 个性化规则
    view.title.rule.create: 新建规则
    view.title.rule.edit: 编辑规则
  dashboardClause:
    model.dashboard.cardCode: 卡片编码
    model.dashboard.cardName: 卡片名称
    model.dashboard.clauseCode: 条目代码
    model.dashboard.clauseName: 条目名称
    model.dashboard.dataTenantLevel: 层级
    model.dashboard.docRemarkExpression: 单据标题表达式
    model.dashboard.enabledFlag: 状态
    model.dashboard.menuCode: 功能代码
    model.dashboard.remark: 备注
    model.dashboard.route: 路由
    model.dashboard.statsExpression: 数据匹配表达式
    view.message.card: 分配卡片
    view.message.title.clauseAdd: 条目配置创建
    view.message.title.clauseEdit: 条目配置编辑
    view.message.title.dashboardCard: 卡片
    view.message.title.dashboardClause: 条目配置
    view.message.title.tenantAssign: 分配租户
    view.message.toolTip.create: 分配卡片
    view.message.toolTip.dashboardClause.create: 分配卡片
    view.message.toolTip.dashboardClause.delete: 取消分配
    view.message.toolTip.delete: 取消分配
  dataGroup:
    model.dataGroup.code: 代码
    model.dataGroup.dimensionCode: 维度代码
    model.dataGroup.dimensionMeaning: 维度值含义
    model.dataGroup.dimensionName: 维度名称
    model.dataGroup.dimensionValue: 维度值
    model.dataGroup.isEnabled: 是否启用
    model.dataGroup.name: 名称
    model.dataGroup.remark: 说明
    view.message.create: 创建数据组
    view.message.dataGroup.head: 数据组头
    view.message.dataGroup.line: 数据组行
    view.message.dataGroup.value: 分配值
    view.message.detail: 数据组详情
    view.message.modal.code.choose: 选择维度代码
    view.message.modal.value.choose: 选择维度值
    view.message.title: 数据组管理
  dataHierarchies:
    model.dataHierarchies.create: 新建数据层级配置
    model.dataHierarchies.dataHierarchyCode: 编码
    model.dataHierarchies.dataHierarchyName: 名称
    model.dataHierarchies.down: 新增数据层级配置下级
    model.dataHierarchies.edit: 编辑数据层级配置
    model.dataHierarchies.hzeroPlat: HZERO平台
    model.dataHierarchies.orderSeq: 排序
    model.dataHierarchies.parentId: 上级配置
    model.dataHierarchies.tenantName: 租户
    model.dataHierarchies.valueSourceId: 值来源
    view.message.title.list: 数据层级配置
  dataSource:
    model.dataSource.create: 数据源新建
    model.dataSource.datasourceCode: 数据源编码
    model.dataSource.datasourceUrl: URL地址
    model.dataSource.dbType: 数据库类型
    model.dataSource.description: 数据源名称
    model.dataSource.detail: 数据源详情
    model.dataSource.driverId: 数据源驱动
    model.dataSource.dsPurposeCodeMeaning: 数据源用途
    model.dataSource.password: 密码
    model.dataSource.remark: 备注
    model.dataSource.serviceName: 服务名称
    model.dataSource.testConnection: 测试连接
    model.dataSource.user: 用户
    view.button.add: 添加服务
    view.button.test: 测试
    view.message.create: 新建数据源
    view.message.edit: 编辑数据源
    view.message.test.success: 测试成功
    view.message.title: 数据源
  dataSourceDriver:
    model.DataDimconfig: 数据维度配置
    model.dataSourceDriver.create: 创建驱动
    model.dataSourceDriver.databaseType: 驱动类型
    model.dataSourceDriver.description: 描述
    model.dataSourceDriver.driverName: 驱动名称
    model.dataSourceDriver.driverPath: jar包
    model.dataSourceDriver.driverVersion: 驱动版本
    model.dataSourceDriver.edit: 编辑驱动
    model.dataSourceDriver.jarUpload: jar上传
    model.dataSourceDriver.mainClass: 主类入口
    model.dataSourceDriver.message: '入口主类格式错误。例子:(com.xx.xx）。包含大小写字母、数字和下划线，每段须以字母开头.'
    model.dataSourceDriver.tenantName: 租户名称
    model.dataSourceDriver.title: 数据源驱动
    model.dataSourceDriver.uploadSupport: 上传格式：*.jar
  database:
    model.database.dataSourceName: 数据库描述
    model.database.databaseCode: 数据库代码
    model.database.databaseName: 数据库名称
    model.database.datasourceId: 数据源代码
    model.database.description: 数据源描述
    model.database.publicFlag: 公共库标识
    model.database.tablePrefix: 表前缀
    model.database.tenantName: 租户名称
    model.database.tenantNum: 租户编码
    view.button.add: 添加租户
    view.message.create: 新建数据库
    view.message.edit: 编辑数据库
    view.message.title: 数据库
  department:
    model.department.phoneticize: 拼音
    model.department.quickIndex: 快速索引
    model.unit.parentUnit: 上级部门
    model.unit.parentUnitId: 上级部门
    view.message.edit: 部门信息修改
    view.message.tips: '当前正在为「{name}」公司，分配部门'
    view.message.title: 公司分配部门
    view.message.warn: 未添加任何部门
    view.option.assign: 分配岗位
  dimension:
    model.header.parentDimension: 父级维度
    view.title.create: 新建数据维度
  dimensionConfig:
    model.header.dimensionCode: 维度代码
    model.header.dimensionName: 维度名称
    model.line.meaning: 维度值含义
    model.line.parentValue: 父级维度值
    model.line.value: 维度值
    view.title.createForm: 创建维值
    view.title.dataDefinition: 维值定义
    view.title.dimension: 维度定义
    view.title.editForm: 编辑维值
    view.title.header: 数据维度配置
    view.title.valueDetail: 维度数据定义
  dynamicForm:
    header.configCode: 配置编码
    header.configName: 配置名称
    header.create: 新建配置
    header.description: 配置描述
    header.edit: 维护
    header.enableFlag: 启用
    header.formCode: 配置编码
    header.formDescription: 配置描述
    header.formGroupCode: 配置归类
    header.formGroupMeaning: 配置归类
    header.formName: 配置名称
    header.header.edit: 编辑配置
    header.title: 表单配置头
    line.button.action: 操作
    line.create: 新建配置行
    line.defaultValue: 默认值
    line.edit: 编辑配置行
    line.enableFlag: 启用
    line.formCode: 配置编码
    line.formName: 配置名称
    line.itemCode: 配置编码
    line.itemDescription: 配置说明
    line.itemName: 配置名称
    line.itemTypeCode: 配置类型
    line.keyDescription: 配置说明
    line.keyType: 配置类型
    line.orderSeq: 排序号
    line.requiredFlag: 是否必输
    line.title: 表单配置行
  employee:
    model.employee.phoneticize: 拼音
    model.employee.positionName: 所属岗位
    model.employee.primaryPositionFlag: 主岗
    model.employee.quickIndex: 快速索引
    model.employee.status: 员工状态
    model.employee.unitCompanyName: 所属公司
    model.employee.unitName: 所属部门
    model.unit.assignFlag: 分配岗位
    model.unit.code: 编码
    model.unit.name: 组织/部门/岗位
    view.message.assign.position: 分配岗位
    view.message.employee.detail: 基础信息
    view.message.emplyee.detail: 员工信息
    view.message.primary.need: 一个员工必须维护一个主岗
    view.message.search.user: 用户信息查询
    view.message.tab.position: 岗位信息
    view.message.tab.user: 用户信息
    view.message.tips: '当前正在为「{name}」员工，分配岗位'
    view.message.title.assign: 岗位分配员工
    view.message.title.define: 员工定义
    view.message.title.detail: 员工明细
    view.message.title.staffDetail: 员工定义详情
    view.option.add: 添加岗位
    view.option.assign: 岗位分配
    view.option.change: 维护岗位
    view.option.import: 批量导入
    view.option.remove: 删除岗位
    view.option.user.add: 新增用户
    view.option.user.delete: 删除用户
    view.validation.quickIndex: 快速索引只能由字母和数字组成
  enterprise:
    model.legal.addressDetail: 详细地址
    model.legal.buildDate: 成立日期
    model.legal.companyName: 企业名称
    model.legal.companyType: 企业类型
    model.legal.dunsCode: 邓白氏编码
    model.legal.legalRepName: 法定代表人
    model.legal.organizingInstitutionCode: 组织机构代码
    model.legal.registeredCountryId: 注册地址
    model.legal.registeredRegionId: 注册地址
    model.legal.shortName: 企业简称
    model.legal.taxpayerType: 纳税人标识
    model.legal.unifiedSocialCode: 统一社会信用代码号
    model.legal.unifiedSocialCodeRule: 由18位大写字母或数字组成
    view.message.buildDate: 成立日期
    view.message.businessLicense: 营业执照
    view.message.businessScope: 经营范围
    view.message.domesticForeignRelation: 我是境内机构
    view.message.legalRepName: 法定代表人
    view.message.licenceEndDate: 营业期限
    view.message.longTerm: 长期
    view.message.organizingInstitutionCode: 由大写字母及数字组成
    view.message.registeredAddress: 注册地址
    view.message.registeredCapital: 注册资本
    view.message.registrationCertificate: 企业登记证件
  event:
    model.event.code: 事件编码
    model.event.description: 事件描述
    model.event.message: 事件消息
    model.event.messageMaintain: 消息维护
    model.event.process: 事件过程
    model.event.processMaintain: 事件维护
    model.eventMessage.messageName: 消息发送配置
    model.eventMessage.messageTypeCode: 消息类型
    model.eventMessage.receiverTypeId: 接收组
    model.eventMessage.tempServerId: 消息模板账户
    model.eventMessage.templateId: 消息模板
    model.eventRule.callType: 调用类型
    model.eventRule.orderSeq: 顺序
    model.eventRule.resultFlag: 返回结果
    model.eventRule.rule: 匹配规则
    model.eventRule.ruleDescription: 规则描述
    model.eventRule.syncFlag: 是否同步
    view.createForm.title: 创建事件
    view.detail.button.create: 新建规则
    view.detail.button.edit: 编辑规则
    view.detail.button.remove: 删除规则
    view.detail.description: 根据规则调度配置的方法或者API，支持同步和异步的方式。多个事件规则按顺序执行，同步调用可以配置是否返回调度结果，异步调用不会返回
    view.detail.title: 事件规则
    view.head.description: 平台服务提供事件及规则维护的服务
    view.list.title: 事件管理
    view.message.button.create: 新增消息
    view.message.button.remove: 删除消息
    view.message.create: 新建事件消息
    view.message.edit: 编辑事件消息
    view.message.title: 事件消息
    view.title.event: 事件规则
    view.title.eventMessage: 事件消息
    view.title.eventRule: 匹配规则
  excelAsyncExport:
    model.excelAsyncExport.errorInfo: 异常信息
    model.excelAsyncExport.serviceName: 所属服务
    model.excelAsyncExport.state: 任务状态
    model.excelAsyncExport.taskCode: 任务编号
    model.excelAsyncExport.taskName: 任务名称
    view.message.title.list: Excel异步导出
  financialCode:
    model.financialCode.description: 描述
    model.financialCode.financialCode: 代码
    model.financialCode.financialName: 名称
    model.financialCode.financialType: 类型
    model.financialCode.superiorType: '上级{type}'
    view.message.close: 关
    view.message.code: 代码
    view.message.createTitle: 新建财务代码
    view.message.describe: 说明
    view.message.edit: 编辑
    view.message.editTitle: 编辑财务代码
    view.message.enable: 启用
    view.message.financialCode: 代码
    view.message.financialDes: 描述
    view.message.financialName: 名称
    view.message.financialStatus: 状态
    view.message.financialType: 类型
    view.message.name: 名称
    view.message.open: 开
    view.message.operate: 操作
    view.message.tipMessage: 父节点未启用，子节点不可启用
    view.message.title: 财务代码设置
    view.message.types: 类型
  flexFieldModel:
    model.flexFieldModel.description: 字段描述
    model.flexFieldModel.fieldName: 字段名称
    model.flexFieldModel.modelCode: 模型编码
    model.flexFieldModel.modelName: 模型名称
  flexFields:
    model.flexFields.description: 规则项描述
    model.flexFields.fieldDescription: 字段描述
    model.flexFields.fieldName: 字段名称
    model.flexFields.fieldProps: 字段属性
    model.flexFields.fieldType: 字段类型
    view.button.editDetail: 定义规则字段
    view.button.fieldProps: 字段属性
    view.button.flexFields: 弹性域配置
    view.button.flexFieldsConfig: 弹性域配置
    view.button.flexFieldsRole: 弹性域配置(角色)
    view.button.flexFieldsTenant: 弹性域配置(租户)
    view.button.flexFieldsUser: 弹性域配置(用户)
    view.button.individuationForm: 个性化表单配置
    view.button.individuationTable: 个性化表格配置
    view.button.individuationTableRole: 个性化表格配置(角色)
    view.button.individuationTableTenant: 个性化表格配置(租户)
    view.button.individuationTableUser: 个性化表格配置(用户)
    view.title.flexFields: 弹性域
    view.title.flexFieldsRole: 角色
    view.title.flexFieldsRule: 规则项定义
    view.title.flexFieldsTenant: 租户
    view.title.individuationForm: 表单个性化
  flexModel:
    model.flexModel.backSymbol: 后缀
    model.flexModel.description: 字段描述
    model.flexModel.fieldColumnNumber: 行号
    model.flexModel.fieldColumnWidth: 宽度
    model.flexModel.fieldDescription: 字段描述
    model.flexModel.fieldName: 字段名称
    model.flexModel.fieldType: 规则字段类型
    model.flexModel.fieldValue: 规则字段值
    model.flexModel.modelCode: 模型编码
    model.flexModel.modelFieldName: 弹性域模型字段名称
    model.flexModel.modelName: 模型名称
    model.flexModel.modelTable: 模型表
    model.flexModel.operator: 运算符
    model.flexModel.orderSeq: 排序号
    model.flexModel.preSymbol: 前缀
    model.flexModel.readableFlag: 是否只读
    model.flexModel.requiredFlag: 是否必输
    model.flexModel.ruleCode: 规则编码
    model.flexModel.serviceName: 服务名称
    model.flexModel.tenant: 租户
    model.flexModel.tenantId: 租户
    model.flexModel.valueSource: 数据来源
    view.button.editFieldsDetail: 编辑模板列表
    view.button.init: 初始化
    view.message.flexModel: 弹性域模型
    view.title.editFileds: 编辑模板列表
    view.title.flexFieldsConfig: 弹性域配置
    view.title.flexFieldsRuleDetail: 定义规则字段
    view.title.ruleFieldsConfig: 规则字段配置
  flexRule:
    model.flexModel.description: 规则描述
    model.flexModel.ruleCode: 规则编码
    model.flexRule.description: 规则描述
    model.flexRule.modelId: 模型名称
    model.flexRule.modelName: 弹性域模型名称
    model.flexRule.ruleCode: 规则编码
    view.message.flexRule: 弹性域规则
  group:
    model.company.groupName: 集团名称
    model.company.groupNum: 集团编码
    view.message.title: 集团
    view.message.title.modal.edit: 编辑集团
  hpfmTemplate:
    model.portalTemplate.templateAvatar: 模板缩略图
    model.portalTemplate.templateCode: 模板代码
    model.portalTemplate.templateLevel: 层级
    model.portalTemplate.templateName: 模板名称
    model.portalTemplate.templatePath: 模板路径
    view.message..edit: 编辑模板
    view.message.create: 新建模板
  individuation:
    view.title.default: 还原默认配置
    view.title.form: 表单
    view.title.individuation: 个性化
    view.title.individuationFormRole: 角色
    view.title.individuationFormTenant: 租户
    view.title.individuationFormUser: 用户
    view.title.individuationTableRole: 角色
    view.title.individuationTableTenant: 租户
    view.title.individuationTableUser: 用户
    view.title.table: 表格
  individuationForm:
    view.button.default: 还原默认配置
    view.button.individuationForm: 个性化表单配置
    view.button.individuationFormRole: 个性化表单配置(角色)
    view.button.individuationFormTenant: 个性化表单配置(租户)
    view.button.individuationFormUser: 个性化表单配置(用户)
    view.title: 个性化表单
    view.title.fieldProps: 字段属性配置
    view.title.moreFieldProps: 更多属性配置
    view.title.preview: 自定义效果预览
  individuationTable:
    view.position.left: 左固定
    view.position.right: 右固定
    view.title.autoCancel: '可将列的宽度设置为自动（均分剩余宽度）,再次点击取消自动。'
    view.title.cancel: 可取消固定。
    view.title.click: 1、点击
    view.title.descrition01-a: 1、上下拖动可排序，点击
    view.title.descrition01-b: 可将列固定在最左/最右，点击
    view.title.leftFixedColumns: 左固定列
    view.title.middleColumns: 中间列
    view.title.noFixedColumns: 暂无固定列
    view.title.nothing: 暂时还没有列
    view.title.oriConfig: 已是原始配置
    view.title.preview: 自定义效果预览
    view.title.prompt: '提示:'
    view.title.rightFixedColumns: 右固定列
  industryCategory:
    model.industryCategory.categoryCode: 品类代码
    model.industryCategory.categoryName: 品类名称
    model.industryCategory.industryCode.second: 二级行业代码
    model.industryCategory.industryCode.top: 一级行业代码
    model.industryCategory.industryName.second: 二级行业名称
    model.industryCategory.industryName.top: 一级行业名称
    model.industryCategory.secondCode: 二级行业代码
    model.industryCategory.secondName: 二级行业名称
    model.industryCategory.topCode: 一级行业代码
    model.industryCategory.topName: 一级行业名称
    view.message.description: 国标品类定义
    view.message.error: 保存失败！
    view.message.title: 国标品类
    view.message.title.modal.category: 品类维护
    view.message.title.modal.second: 二级行业维护
    view.message.title.modal.top: 一级行业维护
    view.message.title.table.category: 品类
    view.message.title.table.second: 二级行业
    view.message.title.table.top: 一级行业
  inventoryOrg:
    model.inventoryOrg.externalSystemCode: 来源系统
    model.inventoryOrg.headerTitle: 库存组织编码
    model.inventoryOrg.organizationCode: 库存组织编码
    model.inventoryOrg.organizationName: 库存组织名称
    model.inventoryOrg.ouId: 业务实体
    model.inventoryOrg.sourceCode: 数据来源
    view.inventoryOrg.cancle: 取消
    view.inventoryOrg.clear: 清除
    view.inventoryOrg.headerTitle: 库存组织定义
    view.inventoryOrg.message.warning: 未进行数据新增或编辑
    view.inventoryOrg.organizationCode: 请输入库存组织编码
    view.inventoryOrg.organizationName: 请输入库存组织名称
    view.inventoryOrg.ouId: 请输入业务实体
    view.inventoryOrg.saveSuccess: 保存成功
  investigation:
    model.investigation.industryId: 行业
    model.investigation.investigateType: 调查表类型
    model.investigation.remark: 备注说明
    model.investigation.templateCode: 预置模板代码
    model.investigation.templateDetail: 模板明细
    model.investigation.templateName: 模板名称
    view.message.codeMaxLength: 代码不能超过30位
    view.message.content.pageChange: 有未保存的修改
    view.message.nameMaxLength: 模板名称不能超过255位
    view.message.notEdit: 没有修改的数据
    view.message.title: 调查表模板定义
    view.message.title.modal: 新增平台级调查模板预置
    view.message.title.pageChange: 确定离开此页面吗？
  languages:
    model.languages.code: 语言编码
    model.languages.description: 语言描述
    model.languages.name: 语言名称
    view.message.title: 语言维护
  libraryPosition:
    model.libraryPosition.externalSystemCode: 来源系统
    model.libraryPosition.invOrganizationName: 库存组织
    model.libraryPosition.inventoryName: 库房
    model.libraryPosition.locationCode: 库位编码
    model.libraryPosition.locationName: 库位名称
    model.libraryPosition.ouId: 业务实体
    model.libraryPosition.ouName: 业务实体
    model.libraryPosition.sourceCode: 数据来源
    model.lp.externalSystemCode: 来源系统
    model.lp.invOrganizationName: 库存组织
    model.lp.inventoryName: 库房
    model.lp.locationCode: 库位编码
    model.lp.locationName: 库位名称
    model.lp.ouId: 业务实体
    model.lp.ouName: 业务实体
    model.lp.sourceCode: 数据来源
    view.message.title: 库位
  login:
    audit.model.account: 账号
    audit.model.auditTypeMeaning: 审计类型
    audit.model.login.address: 登录地址
    audit.model.login.auditTypeMeaning: 审计类型
    audit.model.login.device: 登录设备
    audit.model.login.platform: 登录平台
    audit.model.login.time: 登录时间
    audit.model.login.time.after: 登录时间从
    audit.model.login.time.before: 登录时间至
    audit.model.loginTimeFrom: 登录时间从
    audit.model.loginTimeTo: 登录时间至
    audit.model.name: 名称
    audit.model.phone: 手机号
    audit.model.tenant: 所属租户
    audit.model.userName: 名称
    audit.view.title.userLoginLog: 用户登录日志
    view.message.title: 用户登录日志
  lov:
    model.detail.childrenFieldName: 子字段名
    model.detail.delayLoadFlag: 加载延时
    model.detail.display: 表格列标题
    model.detail.fieldName: 表格字段名
    model.detail.height: 高度
    model.detail.orderSeq: 列序号
    model.detail.pageSize: 页大小
    model.detail.queryFieldFlag: 查询字段
    model.detail.tableFieldFlag: 表格列
    model.detail.tableFieldWidth: 列宽度
    model.detail.title: 标题
    model.detail.width: 宽度
    model.lov.childrenFieldName: 子字段名
    model.lov.delayLoadFlag: 加载延时
    model.lov.display: 表格列标题
    model.lov.displayField: 显示字段名
    model.lov.fieldName: 表格字段名
    model.lov.height: 高度
    model.lov.lovId: 值集
    model.lov.orderSeq: 列序号
    model.lov.pageSize: 页大小
    model.lov.queryFieldFlag: 查询字段
    model.lov.tableFieldFlag: 表格列
    model.lov.tableFieldWidth: 列宽度
    model.lov.title: 标题
    model.lov.valueField: 值字段名
    model.lov.viewCode: 视图代码
    model.lov.viewName: 视图名称
    model.lov.width: 宽度
    view.detail.button.create: 新增表格字段
    view.detail.button.delete: 删除表格字段
    view.message.createTableRecord: 新建表格字段
    view.message.description.detail: 值集视图配置信息
    view.message.detailForm: 必须输入
    view.message.editTableRecord: 编辑表格字段
    view.message.title.lovSetting: 值集视图配置
    view.message.title.modal.lovSetting: 新建值集视图
    view.option.preview: 预览
    view.option.setting: 配置
    view.title.model.preview: 值集视图预览
  message:
    model.message.code: 消息编码
    model.message.description: 消息描述
    model.message.lang: 语言
    model.message.type: 消息类型
    view.message.create: 新建消息
    view.message.edit: 编辑消息
    view.message.title: 返回消息管理
  nodeRule:
    view.message.confirm.remove: 是否删除此条记录？
  operationUnit:
    model.operationUnit.externalSystemCode: 来源系统
    model.operationUnit.ouCode: 业务实体编码
    model.operationUnit.ouName: 业务实体名称
    model.operationUnit.sourceCode: 数据来源
    view.title.operationUnit: 业务实体
  orgInfo:
    view.message.route.company: 公司
    view.message.route.group: 集团
    view.message.route.inventoryOrg: 库存组织
    view.message.route.libraryPosition: 库位
    view.message.route.operationUnit: 业务实体
    view.message.route.purchaseAgent: 采购员
    view.message.route.purchaseOrg: 采购组织
    view.message.route.storeRoom: 库房
  organization:
    model.unit.nameLevelPaths: 组织层级
    model.unit.parentUnit: 上级组织
    model.unit.parentUnitId: 上级组织
    model.unit.supervisorFlag: 主管组织
    view.message.assign: 分配部门
    view.message.create: 组织信息新建
    view.message.edit: 组织信息修改
    view.message.tips: '当前正在为「{name}」集团，分配组织'
    view.message.title: 组织架构维护
    view.message.warn: 未添加任何组织
    view.option.assign: 分配部门
    view.title.lazyTree: 树形结构
    view.title.lienData: 分页结构
  period:
    model.period.endDate: 期间至
    model.period.periodName: 期间
    model.period.periodQuarter: 季度
    model.period.periodSetCode: 会计期编码
    model.period.periodSetName: 会计期名称
    model.period.periodTotalCount: 期间总数
    model.period.periodYear: 年
    model.period.startDate: 期间从
    model.period.tenantName: 企业集团名称
    model.period.tenantNum: 企业集团代码
    view.message.disable: 会计期未启用
    view.message.edit: 会计期处于编辑状态
    view.message.maintain: 期间维护
    view.message.range: 期间范围
    view.message.save: 当前页有未保存的数据
    view.message.tab.define: 期间定义
    view.message.tab.search: 期间查询
    view.message.update: 未进行任何数据修改
    view.option.create: 创建规则
    view.option.quote: 引用云级数据
    view.option.refDetail: 引用明细
  permission:
    model.permission.SQL: SQL
    model.permission.customRuleFlag: 自定义规则标识
    model.permission.description: 描述
    model.permission.onlySupportUpper: 仅支持大写
    model.permission.ruleCode: 规则编码
    model.permission.ruleName: 规则名称
    model.permission.ruleType: 规则类型
    model.permission.serviceName: 服务名
    model.permission.sqlId: SQLID
    model.permission.tableName: 屏蔽表名
    model.permission.tenant: 租户
    view.message.confirm.delete: 确定删除该屏蔽范围吗?
    view.message.ruleType.dataBaseName: 请输入数据库名
    view.message.ruleType.sqlDescription: '动态SQL为一个字段的条件查询,可嵌套SQL.'
    view.message.ruleType.sqlParam: '支持动态参数#{}（参数必须在CustomUserDetails中）.'
    view.message.ruleType.sqlParamDemo: '示例：columnA in (select AcolumnB from tableA where AcolumnC = #{varA}'
    view.option.add: 添加屏蔽规则
    view.option.create: 创建屏蔽规则
    view.option.createRange: 创建范围
    view.option.createRangeTitle: 添加屏蔽范围
    view.option.update: 修改屏蔽规则
    view.option.updateRangeTitle: 修改屏蔽范围
    view.router.range: 权限范围
    view.router.rule: 权限规则
    view.router.title: 数据权限
  portalTemplate:
    model.portalTemplate.templateAvatar: 模板缩略图
    model.portalTemplate.templateCode: 模板代码
    model.portalTemplate.templateName: 模板名称
    model.portalTemplate.templatePath: 模板路径
    view.message.title: 模板维护
  position:
    model.position.managementPositionName: 上级岗位
    model.position.supervisorFlag: 主管岗位
    view.message.edit: 岗位信息修改
    view.message.tips: '当前正在为「{name}」部门，分配岗位'
    view.message.title: 部门分配岗位
    view.message.warn: 未添加任何岗位
    view.option.assign: 分配员工
  profile:
    model.profile.description: 配置描述
    model.profile.level: 维度
    model.profile.name: 配置编码
    model.profile.profileValue: 配置值
    model.profile.tenant: 租户
    model.profileValue.levelCode: 层级
    model.profileValue.levelValue: 层级值
    model.profileValue.levelValue.GLOBAL: 全局
    model.profileValue.profileValue: 配置值
    view.form.create: 新增配置值
    view.message.description: 配置维护管理
    view.message.error.getProfile: 获取配置值失败
    view.message.error.remove: 删除失败
    view.message.error.save: 保存失败
    view.message.form.title: 配置维护管理
    view.message.success.getProfile: 获取配置值成功
    view.message.success.remove: 删除成功
    view.message.success.save: 保存成功
    view.message.title: 配置维护
    view.message.valid.error: '数据校验失败: 层级,层级值,配置值 是必输的'
    view.message.valid.operte: '当维度为平台时,只能添加一条GLOBAL层级的配置值'
  prompt:
    model.message.confirm.remove: 确认删除此条记录？
    model.prompt.description: 描述
    model.prompt.lang: 语言
    model.prompt.promptCode: 代码
    model.prompt.promptKey: 模板代码
    view.message.confirm.remove: 确认删除此条记录？
    view.message.create: 新建多语言
    view.message.delete: 请勿删除平台数据
    view.message.edit: 编辑多语言
    view.message.title: 平台多语言
  purchaseAgent:
    model.purchaseAgent.account: 账户
    model.purchaseAgent.contactInfo: 联系方式
    model.purchaseAgent.describe: 用户描述
    model.purchaseAgent.externalSystemCode: 来源系统
    model.purchaseAgent.purchaseAgentCode: 采购员编码
    model.purchaseAgent.purchaseAgentName: 采购员名称
    model.purchaseAgent.sourceCode: 数据来源
    model.purchaseAgent.userId: 指定用户
    view.title.purchaseAgent: 采购员
  purchaseOrg:
    model.org.externalSystemCode: 来源系统
    model.org.organizationCode: 采购组织编码
    model.org.organizationName: 采购组织名称
    model.org.sourceCode: 数据来源
    view.message.title: 采购组织
  rate:
    modal.rate.currencyNumber: 货币数量
    modal.rate.endDate: 结束时间
    modal.rate.exchangeNumber: 兑换数量
    modal.rate.fromCurrencyCode: 币种代码
    modal.rate.fromCurrencyName: 币种名称
    modal.rate.rateDate: 兑换日期
    modal.rate.rateTypeName: 汇率类型
    modal.rate.rateValue: 汇率
    modal.rate.startDate: 起始时间
    modal.rate.toCurrencyCode: 兑换币种代码
    modal.rate.toCurrencyName: 兑换币种名称
    model.rate.currencyNumber: 货币数量
    model.rate.endDate: 结束时间
    model.rate.exchangeNumber: 兑换数量
    model.rate.fromCurrencyCode: 币种代码
    model.rate.fromCurrencyName: 币种名称
    model.rate.rateDate: 兑换日期
    model.rate.rateTypeName: 汇率类型
    model.rate.rateValue: 汇率
    model.rate.startDate: 起始时间
    model.rate.toCurrencyCode: 兑换币种代码
    model.rate.toCurrencyName: 兑换币种名称
    validation.digital: 只能输入数字
    view.message.create: 新建汇率定义
    view.message.edit: 编辑汇率定义
    view.message.title: 汇率定义
    view.validation.data: 结束时间不能早于起始时间
    view.validation.notSame: 不能选择相同的币种代码
    view.validation.repeatData: '所选日期区间存在重复数据：{date}'
  rateType:
    model.rateType.rateMethodCode: 方式
    model.rateType.tenantName: 企业集团名称
    model.rateType.tenantNum: 企业集团编码
    model.rateType.typeCode: 类型编码
    model.rateType.typeName: 类型名称
    view.button.quoteDetail: 引用明细
    view.description.rateType: 汇率类型定义
    view.title.quoteDetail: 类型引用明细
    view.title.rateType: 汇率类型定义
  region:
    button.add: 新建下级地区
    button.create: 新建根节点
    model.country.condition: 区域代码/区域名称
    model.region.condition: 区域代码/区域名称
    model.region.countryCode: 国家代码
    model.region.countryName: 国家名称
    model.region.enabledFlag: 状态
    model.region.quickIndex: 快速索引
    model.region.regionCode: 区域代码
    model.region.regionName: 区域名称
    view.message.title: 地区定义
    view.message.title.modal.create: 新建地区
    view.message.title.modal.cteate: 新建地区
    view.message.title.modal.edit: 编辑地区
  reportDataSource:
    model.reportDataSource.baseParams: 基本参数
    model.reportDataSource.dbPoolParams: 连接池参数
    model.reportDataSource.dbPoolType: 连接池类型
    model.reportDataSource.dsPurposeCode: 数据源用途
    model.reportDataSource.formParams: 表单配置
  ruleEngine:
    modal.ruleEngine.paramsValue: 参数值
    model.dataSource.dbType: 数据库类型
    model.ruleEngine.category: 脚本分类
    model.ruleEngine.description: 数据源名称
    model.ruleEngine.paramsName: 参数名称
    model.ruleEngine.paramsValue: 参数值
    model.ruleEngine.scriptCode: 脚本编码
    model.ruleEngine.scriptContent: 脚本内容
    model.ruleEngine.scriptDescription: 描述
    model.ruleEngine.scriptTypeCode: 类型
    model.ruleEngine.serverName: 服务名称
    model.ruleEngine.tenantId: 租户
    model.ruleEngine.testResult: 测试结果
    view.button.check: 校验
    view.button.test: 测试
    view.message.title: 规则引擎
    view.message.title.detail: 规则引擎明细
  serverCluster:
    model.message.code: 集群编码
    model.serverCluster.clusterCode: 集群编码
    model.serverCluster.clusterDescription: 集群描述
    model.serverCluster.clusterName: 集群名称
    model.serverCluster.protocolCode: 服务器协议
    model.serverCluster.serverCode: 服务器代码
    model.serverCluster.serverDescription: 服务器说明
    model.serverCluster.serverName: 服务器名称
    view.message.create: 新建集群
    view.message.edit: 编辑集群
    view.message.selectedAtLeast: 请至少选择一个服务
    view.message.title: 集群维护
  serverDefine:
    model.serverDefine.checkServerCluster: 查看集群
    model.serverDefine.clusterCode: 集群编码
    model.serverDefine.clusterId: 集群编码
    model.serverDefine.clusterName: 集群名称
    model.serverDefine.protocolCode: 服务器协议
    model.serverDefine.serverCode: 服务器代码
    model.serverDefine.serverDescription: 服务器说明
    model.serverDefine.serverName: 服务器名称
    view.message.modal.create: 新建
    view.message.modal.edit: 编辑
    view.message.modal.password: 更新密码
    view.message.modal.serverCluster: 服务器集群
    view.message.title.list: 服务器定义
  sqlExecute:
    model.sqlExecute.serverName: 服务名
    model.sqlExecute.sqlImportRes: SQL导出结果.xlsx
    model.sqlExecute.sqlPlaceholder: 请输入SQL语句
    model.sqlExecute.tableName: 表名称
    view.message.tab.information: 信息
    view.message.tab.result: '结果{orderSeq}'
    view.message.time: '> 时间：'
    view.message.title: SQL执行界面
    view.option.executeAll: 运行
    view.option.executeSelected: 运行已选择的
    view.option.export: 导出结果
    view.tab.information: 信息
  ssoConfig:
    model.ssoConfig.confirmPassword: 确认密码
    model.ssoConfig.differentPassword: 密码与之前不一致
    model.ssoConfig.ip: IP
    model.ssoConfig.loginEncPwd: 登录密码
    model.ssoConfig.loginUser: 登录用户名
    model.ssoConfig.newPassword: 新密码
    model.ssoConfig.port: 端口
    model.ssoConfig.protocol: 服务器协议
    model.ssoConfig.serverCode: 服务器代码
    model.ssoConfig.serverName: 服务器名称
  staff:
    view.message.tips: '当前正在为「{name}」岗位，分配员工'
  staticText:
    model.staticText.code: 编码
    model.staticText.description: 描述
    model.staticText.endDate: 有效期至
    model.staticText.language: 语言
    model.staticText.startDate: 有效期从
    model.staticText.title: 标题
    view.button.remove: 移除
    view.message.alert.contentRequired: 请输入静态文本内容
    view.message.confirm.batchDelete: 确定删除选中的静态文本吗?
    view.message.confirm.content.selected: '已选中{num}条'
    view.message.confirm.delete: 确定删除该文本吗?
    view.message.success.save: 保存成功！
    view.message.title: 静态文本管理
    view.message.title.create: 创建
    view.message.title.edit: 编辑
  storeRoom:
    model.storeRoom.externalSystemCode: 来源系统
    model.storeRoom.invOrganizationName: 库存组织
    model.storeRoom.inventoryCode: 库房编码
    model.storeRoom.inventoryName: 库房名称
    model.storeRoom.ouId: 业务实体
    model.storeRoom.ouName: 业务实体
    model.storeRoom.sourceCode: 数据来源
    model.storeRoom.uoId: 业务实体
    title: 库房
    view.message.title: 库房
  supplier:
    view.router.title: 数据权限
  taxRate:
    model.taxRate.description: 描述
    model.taxRate.taxCode: 税种代码
    model.taxRate.taxRate: 税率
    model.taxRate.tenantName: 企业集团名称
    model.taxRate.tenantNum: 企业集团编码
    view.button.quoteDetail: 引用明细
    view.description.taxRate: 税率定义
    view.title.quoteDetail: 税率引用明细
    view.title.taxRate: 税率定义
  tenantSelect:
    model.tenantSelect.defaultTenant: 默认租户
    model.tenantSelect.tenantName: 租户名称
    model.tenantSelect.tenantNum: 租户编码
    view.button.seeAll: 查看所有租户
    view.message.me: 当前
    view.message.modal.all: 全部
    view.message.modal.history: 最近
    view.message.modal.me: 我
    view.message.title: 选择租户
  tenants:
    model.tenant.limitUserQty: 限制用户数
  toolbox:
    view.title.toolbox: 工具箱
  ui:
    component.dynamicForm: 表单
    component.dynamicForm.rowKey: 主键字段
    component.dynamicModal: 弹出框
    component.dynamicTable: 表格
    component.dynamicTabs: 标签页
    component.dynamicToolbar: 按钮组
    dynamicTable.data: 数据区域
    field.columnField.alignCenter: 居中
    field.columnField.alignLeft: 居左
    field.columnField.alignRight: 居右
    field.columnField.fieldName: 字段名
    field.fieldName: 编码
    field.linkButton: LinkButton
    message.field.operateDes: 拖入更多组件|点击切换左侧组件为容器
    message.field.removeTitle: 是否确认删除
    model.common.description: 名称
    model.common.queryUrl: 加载数据URL
    model.common.submitUrl: 提交数据URL
    model.field.linkButton.openPageTypeModal: 弹出尺寸
    model.field.linkButton.openType: 打开方式
    model.fieldAttr.autoSize: 宽度自适应
    model.fieldType.TabPane: 标签
    model.fieldType.button: 按钮
    model.fieldType.checkbox: checkbox
    model.fieldType.columnField: 列字段
    model.fieldType.datePicker: 日期
    model.fieldType.input: 文本
    model.fieldType.inputNumber: 数值
    model.fieldType.linkButton: 行按钮
    model.fieldType.lov: Lov
    model.fieldType.switch: 开关
    model.fieldType.textArea: 多行文本
    model.fieldType.valueList: 下拉列表
    model.page.attribute: 页面属性
    model.page.configure: 页面配置
    model.page.description: 页面描述
    model.page.edit: 编辑页面方法
    model.page.pageCode: 页面编码
    model.style.marginBottom: 下间距
    model.template.code: 编码
    model.template.description: 名称
    view.button.pageDesign: 页面设计
    view.list.modal.create.title: 新建页面
    view.list.modal.edit.title: 编辑页面
    view.list.title: 页面汇总
  uom:
    model.uom.refUomCode: 引用单位编码
    model.uom.refUomName: 引用单位名称
    model.uom.uomCode: 计量单位编码
    model.uom.uomName: 计量单位名称
    model.uom.uomTypeCode: 单位类型名称
    model.uom.uomTypeName: 单位类型名称
    view.message.continue: 保存的数据查询后将丢失，是否继续?
    view.message.title: 计量单位定义
    view.message.warn: 未进行数据新增或编辑
  uomType:
    model.uomType.baseUomCode: 基本单位代码
    model.uomType.baseUomName: 基本单位名称
    model.uomType.uomTypeCode: 单位类型代码
    model.uomType.uomTypeName: 单位类型名称
    view.message.placeHolder.lovPlaceHolder: 请选择单位代码
    view.message.title: 计量单位类型定义
    view.message.title.modal.create: 新建单位类型
    view.message.title.modal.edit: 编辑单位类型
  userInfo:
    view.login.log: 登录日志
  valueList:
    lovSetting.title.lovSetting: 值集视图
    lovSetting.title.lovSettingField: 值集视图字段
    model.header.customSql: 查询 SQL
    model.header.customUrl: 查询 URL
    model.header.description: 描述
    model.header.lovCode: 值集编码
    model.header.lovName: 值集名称
    model.header.lovTypeCode: 值集类型
    model.header.meaningTableAlias: 含义字段所在表别名
    model.header.mustPageFlag: 是否分页
    model.header.parentLovCode: 父级值集
    model.header.routeName: 目标路由名
    model.header.tenantId: 所属租户
    model.header.tenantName: 所属租户
    model.header.translationSql: 翻译 SQL
    model.header.valueTableAlias: 值字段所在表别名
    model.line.description: 描述
    model.line.endDateActive: 有效期止
    model.line.meaning: 含义
    model.line.orderSeq: 排序号
    model.line.parentValue: 父级值集值
    model.line.startDateActive: 有效期起
    model.line.tag: 标记
    model.line.value: 值
    view.button.add: 新增值
    view.button.delete: 删除值
    view.description.valueList: 值集维护
    view.title.copyValue: 值集复制
    view.title.create: 新增值集
    view.title.createForm: 创建值
    view.title.editForm: 编辑值
    view.title.head: 值集
    view.title.valueDetail: 值集数据定义
    view.title.valueList: 值集定义
    view.title.valueListIDP: 独立值集
    view.validate.date: 有效期止小于有效期始
  workplace:
    view.message.loadCardError: 加载卡片失败
    view.title.myWorkplace: 我的工作台
hpfn:
  config:
    model.config.menuLayout: 菜单布局
    model.config.menuLayoutTheme: 菜单布局主题
hptl:
  common:
    button.revoke: 撤销
    model.portal.content: 标题
    model.portal.description: 描述
    model.portal.linkUrl: 链接
    model.portal.orderSeq: 序号
    model.portalTemplate.content: 标题
    model.portalTemplate.description: 描述
    model.portalTemplate.linkUrl: 跳转链接
    model.portalTemplate.orderSeq: 序号
    view.message.allTemplate: '所有模板:'
    view.message.customDomain: 个性化域名
    view.message.customTemplate: 所选模板
    view.message.logo.dark: '1. 深色Logo图片:'
    view.message.logo.light: '2. 浅色Logo图片:'
    view.message.noTemplate: 暂未维护模板
    view.message.title.allTemplate: '所有模板:'
    view.message.title.banner: 首页轮播图：配置模板首页轮播图，图片格式为jpeg/png
    view.message.title.customDomain: 个性化域名
    view.message.title.customTemplate: 所选模板
    view.message.title.logo: Logo：配置模板Logo，请设置深色和浅色两张Logo图片，图片格式为jpeg/png。
    view.message.title.templateCode: '模板代码:'
    view.message.title.templateName: '模板名称:'
    view.message.updateLoadFileTypeMustBeImg: '上传文件类型必须是: jpeg/png'
    view.message.uploadFileTypeMustBeImg: '上传文件类型必须是: jpeg/png'
  notice:
    model.notice.containsDeletedDataFlag: 显示已删除
    model.notice.lang: 语言
    model.notice.noticeCategoryCode: 公告类别
    model.notice.noticeContent: 公告内容
    model.notice.publishedByUser: 发布人
    model.notice.publishedDate: 发布时间
    model.notice.receiverType: 发布类别
    model.notice.receiverTypeCode: 发布对象类别
    model.notice.receiverTypeCode.All: 全部公告
    model.notice.receiverTypeCode.Deleted: 回收站
    model.notice.receiverTypeCode.Draft: 草稿箱
    model.notice.receiverTypeMeaning: 公告类型
    model.notice.statusCode: 公告状态
    model.notice.title: 公告标题
    view.button.revoke: 撤销删除
    view.message.alert.contentRequired: 请输入静态文本内容
    view.message.alert.noticeContentRequired: 请输入公告内容
    view.message.detail.title: 请输入公告标题
    view.message.title.detail: 公告明细
    view.message.title.list: 公告管理
    view.validation.titleNotContainEmoji: 标题不能含有表情符号
  portalAssign:
    model.portalAssign.companyName: 公司名称
    model.portalAssign.companyNum: 公司编码
    model.portalAssign.content: 标题
    model.portalAssign.description: 描述
    model.portalAssign.groupName: 集团名称
    model.portalAssign.groupNum: 集团编码
    model.portalAssign.linkUrl: 链接
    model.portalAssign.orderSeq: 序号
    model.portalAssign.templateCode: 模板编码
    model.portalAssign.templateName: 模板名称
    model.portalAssign.templatePath: 模板路径
    model.portalAssign.webUrl: 二级页面域名
    model.portalAssign.webUrlLink: 二级域名地址
    view.button.assignTemplate: 分配模板
    view.message.logoDesc.dark: 1. 深色Logo图片
    view.message.logoDesc.light: 2. 浅色Logo图片
    view.message.modal.create: 新建门户分配
    view.message.modal.edit: 编辑门户分配
    view.message.title.allTemplate: '所有模板:'
    view.message.title.banner: 首页轮播图：配置模板首页轮播图，图片格式为jpeg/png
    view.message.title.customDomain: 个性化域名
    view.message.title.customTemplate: 所选模板
    view.message.title.detail: 门户模板定义
    view.message.title.list: 门户分配
    view.message.title.logo: Logo：配置模板Logo，请设置深色和浅色两张Logo图片，图片格式为jpeg/png。
    view.message.title.modal.create: 新建门户分配
    view.message.title.modal.edit: 编辑门户分配
    view.message.title.templateCode: '模板编码:'
    view.message.title.templateName: '模板名称:'
    view.message.uploadFileSizeLimit: '上传文件大小不能超过: {size} MB'
    view.message.uploadFileTypeMustBeImg: '上传文件类型必须是: jpeg/png'
  portalTemplate:
    modal.portalTemplate.templateAvatar: 模板缩略图
    modal.portalTemplate.templateCode: 模板编码
    modal.portalTemplate.templateName: 模板名称
    modal.portalTemplate.templatePath: 模板路径
    modal.portalTemplate.uploadSupport: '上传格式：{type}'
    model.portalTemplate.templateAvatar: 模板缩略图
    model.portalTemplate.templateCode: 模板代码
    model.portalTemplate.templateLevel: 层级
    model.portalTemplate.templateName: 模板名称
    model.portalTemplate.templatePath: 模板路径
    view.message..edit: 编辑模板
    view.message.create: 新建模板
    view.message.edit: 编辑模板
    view.message.title: 模板维护
  portalTemplateConfig:
    modal.portalTemplate.templateCode: 模板编码
    modal.portalTemplate.templateName: 模板名称
    model.portalTemplate.content: 标题
    model.portalTemplate.description: 描述
    model.portalTemplate.linkUrl: 跳转链接
    model.portalTemplate.orderSeq: 序号
    view.message.groupName: 集团名称
    view.message.logoDesc.dark: 1. 深色Logo图片
    view.message.logoDesc.light: 2. 浅色Logo图片
    view.message.title.allTemplate: '所有模板:'
    view.message.title.banner: 首页轮播图：配置模板首页轮播图，图片格式为jpeg/png
    view.message.title.customDomain: 个性化域名
    view.message.title.customTemplate: 所选模板
    view.message.title.logo: Logo：配置模板Logo，请设置深色和浅色两张Logo图片，图片格式为jpeg/png。
    view.message.title.noTemplate: 暂未维护模板
    view.message.uploadFileSizeLimit: '上传文件大小不能超过: {size} MB'
    view.message.uploadFileTypeMustBeImg: '上传文件类型必须是: jpeg/png'
  templatesConfig:
    view.message.title: 模板配置
hrpt:
  concPermission:
    modal.concPermission.assignPermission: 分配权限
    model.concPermission.endDate: 有效期至
    model.concPermission.roleId: 角色
    model.concPermission.startDate: 有效期从
    view.message.permission.add: 新增权限
    view.message.permission.edit: 编辑权限
  reportDataSet:
    button.table: 查看报表
    message.reportDataSet.sqlText.help: 修改或删除SQL中的取数字段，需要同步修改引用数据集的报表
    modal.reportDataSet.sqlType: sql类型
    model.reportDataSet.content: 来源值
    model.reportDataSet.dataSource: 来源类型
    model.reportDataSet.dataType: 数据类型
    model.reportDataSet.datasetCode: 数据集代码
    model.reportDataSet.datasetName: 数据集名称
    model.reportDataSet.datasourceCode: 数据源
    model.reportDataSet.decimals: 精度
    model.reportDataSet.defaultText: 默认值显示
    model.reportDataSet.defaultValue: 默认值
    model.reportDataSet.formElement: 表单控件
    model.reportDataSet.height: 数据高度
    model.reportDataSet.isRequired: 是否必输
    model.reportDataSet.name: 列名
    model.reportDataSet.ordinal: 序号
    model.reportDataSet.paramsName: 参数名
    model.reportDataSet.sqlText: SQL语句
    model.reportDataSet.sqlType: sql类型
    model.reportDataSet.text: 标题
    model.reportDataSet.width: 数据长度
    model.reportDataSet.xmlSample: XML示例
    view.button.exportFile: 导出文件
    view.button.getXmlSample: 获取XML
    view.button.metaColumns: 初始化元数据
    view.button.metaColumns.confirm: 是否确认初始化元数据？
    view.button.queryParams: 初始化参数
    view.button.queryParams.confirm: 是否确认初始化元参数？
    view.button.sqlValidate: SQL校验
    view.button.xmlSample: XML示例
    view.message.filterDataMeaning: '来源值为{filterDataMeaning}'
    view.message.metadataDrawer.add: 添加元数据
    view.message.metadataDrawer.edit: 编辑元数据
    view.message.noContent: 无内容，非必输
    view.message.paramsDrawer.add: 添加参数
    view.message.paramsDrawer.edit: 编辑参数
    view.message.title: 数据集
    view.message.title.add: 数据集 - 添加
    view.message.title.edit: 数据集 - 编辑
    view.message.title.table: 关联的报表
    view.reportDataSet.validateOrdinal: 序号已存在，请输入其他序号
    view.tab.metaColumns: 元数据信息
    view.tab.queryParams: 参数信息
    view.title.dataSetHeader: 数据集头
    view.title.dataSetLine: 数据集行
  reportDataSource:
    model.reportDataSource.baseParams: 基本参数
    model.reportDataSource.dbPoolParams: 连接池参数
    model.reportDataSource.dbPoolType: 连接池类型
    model.reportDataSource.driverClass: 驱动类
    model.reportDataSource.dsPurposeCode: 数据源用途
    model.reportDataSource.formParams: 表单配置
    model.reportDataSource.params: 参数
  reportDefinition:
    modal.reportDefinition.assign: 分配权限
    modal.reportDefinition.assignPermission: 分配权限
    modal.reportDefinition.datasetId: 数据集
    modal.reportDefinition.defaultFlag: 默认
    modal.reportDefinition.desc: 权限说明
    modal.reportDefinition.reportName: 报表名称
    modal.reportDefinition.reportTypeCode: 报表类型
    modal.reportDefinition.templateName: 模板名称
    modal.reportDefinition.templateTypeCode: 模板类型
    model.reportDefinition.colLayout: 统计列位置
    model.reportDefinition.configure: 配置
    model.reportDefinition.dataType: 数据类型
    model.reportDefinition.datasetId: 数据集
    model.reportDefinition.decimals: 精度
    model.reportDefinition.defaultFlag: 默认
    model.reportDefinition.endDate: 有效期至
    model.reportDefinition.expression: 表达式
    model.reportDefinition.format: 格式掩码
    model.reportDefinition.hidden: 隐藏
    model.reportDefinition.layout: 布局列位置
    model.reportDefinition.limitRows: 异步阈值
    model.reportDefinition.name: 列名
    model.reportDefinition.orderSeq: 排序号
    model.reportDefinition.ordinal: 序号
    model.reportDefinition.pageFlag: 分页标识
    model.reportDefinition.percent: 百分比
    model.reportDefinition.reportCode: 报表代码
    model.reportDefinition.reportId: 报表名称
    model.reportDefinition.reportName: 报表名称
    model.reportDefinition.reportType: 报表类型
    model.reportDefinition.reportTypeCode: 报表类型
    model.reportDefinition.roleId: 角色
    model.reportDefinition.sortType: 排序类型
    model.reportDefinition.startDate: 有效期从
    model.reportDefinition.statColumnLayout: 统计列位置
    model.reportDefinition.tempCode: 模板代码
    model.reportDefinition.tempName: 模板名称
    model.reportDefinition.tempType: 模板类型
    model.reportDefinition.templateCode: 模板代码
    model.reportDefinition.templateTypeCode: 模板类型
    model.reportDefinition.text: 标题
    model.reportDefinition.type: 列类型
    model.reportDefinition.width: 宽度
    model.reportPermission.endDate: 有效期至
    model.reportPermission.permissionDesc: 权限说明
    model.reportPermission.reportCode: 报表代码
    model.reportPermission.reportId: 报表名称
    model.reportPermission.reportTypeCode: 报表类型
    model.reportPermission.roleId: 角色
    model.reportPermission.startDate: 有效期从
    view.button.initColumn: 初始化列
    view.message.drawer.add: 添加列
    view.message.drawer.edit: 编辑列
    view.message.metaColumnsDrawer.add: 添加列
    view.message.metaColumnsDrawer.edit: 编辑列
    view.message.permission.add: 新增权限
    view.message.permission.edit: 编辑权限
    view.message.reportColumn: 报表列
    view.message.reportTable: 报表
    view.message.templateTitle: 添加模板
    view.message.title: 报表定义
    view.message.title.add: 报表定义 - 添加
    view.message.title.edit: 报表定义 - 编辑
    view.reportDefinition.validateOrd: 序号已存在，请输入其他序号
    view.reportDefinition.validateOrdinal: 序号已存在，请输入其他序号
    view.tab.initColumn: 列信息
    view.tab.template: 模板分配
  reportQuery:
    model.reportQuery.isRowSpan: 合并左边相同维度行
    model.reportQuery.orderSeq: 序号
    model.reportQuery.remark: 备注
    model.reportQuery.reportCode: 报表代码
    model.reportQuery.reportName: 报表名称
    model.reportQuery.reportTypeCode: 报表类型
    model.reportQuery.template: 模板
    option.buildReport: 生成报表
    option.createRequest: 定时报表
    option.exportExcel: 导出Excel
    option.exportHTML: 导出HTML
    option.exportPPT: 导出PPT
    option.exportPdf: 导出Pdf
    option.exportWord: 导出Word
    view.message.buildResult: 生成结果
    view.message.reportParams: 报表参数
    view.message.title: 报表查询
    view.message.title.detail: '{name} - 详情'
  reportRequest:
    model.reportRequest.detail: 详情
    model.reportRequest.endDate: 结束时间
    model.reportRequest.export: 导出结果
    model.reportRequest.reportCode: 报表代码
    model.reportRequest.reportName: 报表名称
    model.reportRequest.requestMessage: 请求消息
    model.reportRequest.requestParam: 请求参数
    model.reportRequest.requestStatus: 运行状态
    model.reportRequest.requester: 请求人名称
    model.reportRequest.startDate: 开始时间
    view.message.title: 报表请求
  templateManage:
    model.templateManage.fileName: 模板文件名
    model.templateManage.fileUpload: 文件上传
    model.templateManage.templateContent: html内容
    model.templateManage.templateFileName: 模板文件名
    view.message.templateHeader: 模板头信息
    view.message.templateLineDrawer.add: 添加模板明细
    view.message.templateLineDrawer.edit: 编辑模板明细
    view.message.title: 模板管理
    view.message.title.add: 模板管理 - 添加
    view.message.title.edit: 模板管理 - 编辑
hsdr:
  concPermission:
    modal.concPermission.assignPermission: 分配权限
    model.concPermission.concPragramId: 请求名称
    model.concPermission.endDate: 有效期至
    model.concPermission.limitQuantity: 限制次数
    model.concPermission.permissionDesc: 权限说明
    model.concPermission.permissionId: 权限策略
    model.concPermission.roleId: 角色
    model.concPermission.startDate: 有效期从
    view.message.drawer.add: 新增权限
    view.message.drawer.edit: 编辑权限
    view.message.permission.add: 新增权限
    view.message.permission.edit: 编辑权限
    view.message.title: 请求权限定义
    view.message.title.add: 请求权限定义 - 新增
    view.message.title.edit: 请求权限定义 - 编辑
    view.message.title.permission: 权限
    view.option.addParam: 新增权限
    view.tab.param: 权限
  concRequest:
    model.concRequest.concCode: 请求编码
    model.concRequest.concName: 请求名称
    model.concRequest.cycleFla: 周期性
    model.concRequest.cycleFlag: 周期性
    model.concRequest.endDate: 周期结束时间
    model.concRequest.endedDate: 结束时间/下次运行时间
    model.concRequest.flagN: 否
    model.concRequest.flagY: 是
    model.concRequest.intervalHour: 固定间隔-时
    model.concRequest.intervalMinute: 固定间隔-分
    model.concRequest.intervalNumber: 间隔大小
    model.concRequest.intervalSecond: 固定间隔-秒
    model.concRequest.intervalType: 间隔类型
    model.concRequest.jobId: 任务ID
    model.concRequest.jobStatus: 状态
    model.concRequest.parentId: 父任务ID
    model.concRequest.requestParam: 请求参数
    model.concRequest.startDate: 周期开始时间
    model.concRequest.username: 提交人
    validation.digital: 只能输入数字
    view.message.confirm.pause: 是否暂停该记录下的JOB?
    view.message.confirm.remove: 是否删除该记录下的JOB?
    view.message.confirm.resume: 是否恢复该记录下的JOB?
    view.message.confirm.trigger: 是否执行该记录下的JOB?
    view.message.description: 请求参数
    view.message.title: 并发请求
    view.option.concurrent: 请求信息
    view.option.create: 提交新请求
    view.option.delete: JOB删除
    view.option.log: 日志
    view.option.logMsg: 日志信息
    view.option.pause: JOB暂停
    view.option.resume: JOB恢复
    view.option.trigger: 立即执行
  concurrent:
    model.concurrent.alarmEmail: 报警邮件
    model.concurrent.assignPermission: 分配权限
    model.concurrent.businessModel: 业务模型
    model.concurrent.concCode: 请求编码
    model.concurrent.concDescription: 请求描述
    model.concurrent.concName: 请求名称
    model.concurrent.contextEnable: 是否启用
    model.concurrent.cycleFlag: 周期性
    model.concurrent.enabledFlag: 是否启用
    model.concurrent.endDate: 有效期至
    model.concurrent.executableCode: 可执行编码
    model.concurrent.executableName: 可执行名称
    model.concurrent.notnullFlag: 是否必须
    model.concurrent.orderSeq: 排序号
    model.concurrent.paramCode: 参数名称
    model.concurrent.paramEditTypeCode: 编辑类型
    model.concurrent.paramFormatCode: 参数格式
    model.concurrent.paramName: 参数描述
    model.concurrent.roleId: 角色
    model.concurrent.showFlag: 是否展示
    model.concurrent.startDate: 有效期从
    model.concurrent.valueFiledFrom: 字段值从
    model.concurrent.valueFiledTo: 字段值至
    view.message.drawer.add: 新增参数
    view.message.drawer.edit: 编辑参数
    view.message.requestDefine: 请求定义
    view.message.title: 请求定义
    view.message.title.add: 请求定义 - 新增
    view.message.title.edit: 请求定义 - 编辑
    view.option.addParam: 新增参数
    view.tab.param: 参数
    view.validation.alarmEmail: 格式有误
  executable:
    model.executable.GULE: GULE
    model.executable.actuator: 执行器配置列表
    model.executable.exeHandler: JobHandler
    model.executable.exeType: 可执行类型
    model.executable.exeTypeCode: 可执行类型
    model.executable.executableCode: 可执行编码
    model.executable.executableDesc: 可执行描述
    model.executable.executableName: 可执行名称
    model.executable.executorStrategy: 执行器策略
    model.executable.failStrategy: 失败处理策略
    model.executable.groupId: 执行器
    model.executable.jobHandler: JobHandler
    model.executable.retryNumber: 重试次数
    view.message.title: 可执行定义
    view.message.title.list: 可执行定义
  jobGroup:
    button.executor: 配置
    model.address: 执行器地址
    model.jobGroup.addressList: OnLine 机器地址
    model.jobGroup.addressType: 注册方式
    model.jobGroup.appName: AppName
    model.jobGroup.executorCode: 执行器编码
    model.jobGroup.executorName: 执行器名称
    model.jobGroup.orderSeq: 排序
    model.jobGroup.status: 状态
    model.jobGroup.title: 名称
    model.maxConcurrent: 最大并发量
    model.weight: 权重
    view.message.addressList: 机器地址
    view.message.addressList.help.msg: 多个机器地址用逗号隔开
    view.message.addressType: 注册方式
    view.message.appNameRule: 只能输入大写字母、数字、中划线、下划线、点
    view.message.auto: 自动注册
    view.message.byHand: 手动录入
    view.message.create: 新增执行器
    view.message.edit: 编辑执行器
    view.message.executor: 配置
    view.message.executorCode: 执行器编码
    view.message.executorName: 执行器名称
    view.message.group: 执行器管理
    view.message.groupName: AppName
    view.message.orderSeq: 排序
    view.message.seqRule: 取值范围为-100~100
    view.message.title: 名称
    view.message.titleRule: 名称长度限制为4~12
  jobInfo:
    model.jobInfo.actuator: 执行器配置列表
    model.jobInfo.alarmEmail: 报警邮件
    model.jobInfo.author: 负责人
    model.jobInfo.childJobId: 子任务ID
    model.jobInfo.cycleFlag: 周期性
    model.jobInfo.endDate: 有效时间至
    model.jobInfo.executorBlockStrategy: 阻塞处理策略
    model.jobInfo.executorFailStrategy: 失败处理策略
    model.jobInfo.executorHandler: JobHandler
    model.jobInfo.executorParam: 任务参数
    model.jobInfo.executorRouteStrategy: 路由策略
    model.jobInfo.executorStrategy: 执行器策略
    model.jobInfo.glueRemark: 源码备注
    model.jobInfo.glueSource: 源码
    model.jobInfo.glueType: 任务类型
    model.jobInfo.glueTypeMeaning: 运行模式
    model.jobInfo.groupId: 执行器
    model.jobInfo.id: 任务ID
    model.jobInfo.initFlag: 自动初始化
    model.jobInfo.jobCode: 任务编码
    model.jobInfo.jobCron: Cron
    model.jobInfo.jobDesc: 任务描述
    model.jobInfo.jobHandler: JobHandler
    model.jobInfo.jobStatus: 状态
    model.jobInfo.jobStatusMeaning: 状态
    model.jobInfo.operationMode: 运行模式：
    model.jobInfo.parentId: 父任务ID
    model.jobInfo.retryNumber: 重试次数
    model.jobInfo.serial: 串行任务
    model.jobInfo.startDate: 有效时间从
    model.jobInfo.tenantName: 租户
    model.jobInfo.version: 版本回溯
    option.stop: 终止
    validation.digital: 只能输入数字
    view.button.check: 校验执行器
    view.button.log: 日志
    view.message.confirm.copy: 是否复制该任务
    view.message.confirm.pause: 是否暂停该任务
    view.message.confirm.resume: 是否恢复此条记录
    view.message.confirm.stop: 是否终止该任务
    view.message.confirm.trigger: 是否执行该任务
    view.message.create: 新建调度任务
    view.message.edit: 编辑调度任务
    view.message.title.list: 调度任务
    view.message.version: 版本回溯
    view.option.log: 日志
    view.validate.additionalInformation: 请输入正确的json字符串
    view.validation.glueRemark: 源码备注长度在30个字符以内
    view.validation.guleRemark: 源码备注长度在30个字符以内
  jobLog:
    model.jobLog.address: 执行地址
    model.jobLog.clientResult: 客户端执行结果
    model.jobLog.completeTime: 结束时间
    model.jobLog.concCode: 请求编码
    model.jobLog.concName: 请求名称
    model.jobLog.description: 任务描述
    model.jobLog.endTime: 执行结束时间
    model.jobLog.errorDetail: 错误详情
    model.jobLog.executorAddress: 执行器地址
    model.jobLog.executorName: 执行器名称
    model.jobLog.executorParam: 任务参数
    model.jobLog.glueTypeMeaning: 运行模式
    model.jobLog.handleCode: 执行结果
    model.jobLog.handleMsg: 执行备注
    model.jobLog.handleTime: 执行时间
    model.jobLog.jobCode: 任务编码
    model.jobLog.jobId: 任务ID
    model.jobLog.jobResult: 调度结果
    model.jobLog.logDetail: 日志详情
    model.jobLog.logId: 日志ID
    model.jobLog.logUrl: 日志文件
    model.jobLog.message: 错误信息
    model.jobLog.showInfo: 任务已执行完成！
    model.jobLog.startTime: 执行开始时间
    model.jobLog.taskProgress: 任务进度
    model.jobLog.tenantName: 租户
    model.jobLog.triggerCode: 调度结果
    model.jobLog.triggerTime: 调度时间
    view.button.clearLogs: 日志清理
    view.message.clearType: 类型
    view.message.detail: 调度详情
    view.message.groupId: 执行器
    view.message.handleMs: 执行日志
    view.message.handleMsg: 执行日志
    view.message.jobId: 任务
    view.message.log: 调度日志
    view.message.logStatus: 任务状态
    view.message.orgTitle: 请求日志
    view.message.pullLogTips: '终止请求Rolling日志,请求失败次数超上限,可刷新页面重新加载日志'
    view.message.title: 调度日志
    view.message.triggerMsg: 调度日志
    view.message.triggerTimeEnd: 调度时间至
    view.message.triggerTimeStart: 调度时间从
    view.option.clearLogs: 日志清理
    view.option.killJob: 终止任务
  notice:
    view.message.confirm.resume: 是否恢复该任务
hsgp:
  apiManage:
    model.apiManage.api: API
    model.apiManage.apiLevel: 层级
    model.apiManage.code: 编码
    model.apiManage.compareServiceVersionId: 对比服务版本
    model.apiManage.loginAccess: 登录可访问
    model.apiManage.method: 方法
    model.apiManage.name: 参数名称
    model.apiManage.publicAccess: 公开的接口
    model.apiManage.serviceCode: 服务
    model.apiManage.status: 变更状态
    model.apiManage.tag: 标签
    model.apiManage.type: 参数类型
    model.apiManage.upgradeApiMethod: 方法
    model.apiManage.upgradeApiPath: 升级API
    view.button.refresh: 刷新API
    view.message.editor.apiInfo: API 信息
    view.message.editor.apiLevel: API 升级
    view.message.editor.edit: API 详情
    view.message.editor.parameter: 请求参数
    view.message.editor.passiveRelyApi: 被依赖的 API
    view.message.editor.relyApi: 依赖的 API
    view.message.refresh.description: 刷新将删除并重新拉取该版本的API
    view.title: API 管理
  appSource:
    model.appSource.repoPassword: 仓库密码
    model.appSource.repoUsername: 仓库用户名
    model.appSource.sourceName: 应用源
    view.message.title: 应用来源
    view.message.title.editor.create: 新建应用来源
    view.message.title.editor.edit: 编辑应用来源
  common:
    model.common.appSourceCode: 来源编码
    model.common.appSourceName: 来源名称
    model.common.clientId: 客户端ID
    model.common.clientSecret: 客户端密钥
    model.common.configVersion: 配置版本
    model.common.description: 描述
    model.common.grantType: 授权类型
    model.common.organizationId: 组织ID
    model.common.password: 密码
    model.common.releaseDate: 发布时间
    model.common.serviceCode: 服务编码
    model.common.serviceName: 服务名称
    model.common.serviceVersionId: 依赖版本
    model.common.sourceName: 应用来源
    model.common.username: 用户名
    model.common.versionNumber: 版本号
    view.message.confirm.refresh: 确定要刷新?
    view.message.editor.accessInfo: 访问地址
    view.message.editor.authInfo: 授权信息
    view.message.editor.basicInfo: 基本信息
    view.message.editor.bindInfo: 绑定信息
    view.message.editor.envInfo: 环境信息
    view.message.editor.systemGrant: 系统授权
    view.message.eidtorappConfig: 应用配置
    view.title.env: 环境
    view.title.product: 产品
    view.title.service: 服务
    view.title.version: 版本
  deployPlatform:
    model.deployPlatform.platformCode: 平台编码
    model.deployPlatform.platformName: 平台名称
    model.deployPlatform.sourceName: 连接平台
    view.message.title: 部署平台
    view.message.title.editor.create: 新建部署平台
    view.message.title.editor.edit: 编辑部署平台
  env:
    model.env.activeFlag: 环境状态
    model.env.connectFlag: 连接状态
    model.env.connected: 已连接
    model.env.description: 描述
    model.env.devopsEnvName: DevOps环境
    model.env.disConnected: 未连接
    model.env.envCode: 环境编码
    model.env.envName: 环境名称
    model.env.operating: 运行中
    model.env.orderSeq: 序号
    model.env.paramsName: 参数名称
    model.env.paramsValue: 参数值
    model.env.stopped: 已停用
    view.message.CLIENT_ID: 客户端ID
    view.message.CLIENT_SECRET: 客户端密钥
    view.message.CONTEXT_PATH: 网关地址
    view.message.GRANT_TYPE: 授权类型
    view.message.OAUTH_PASSWORD: 认证密码
    view.message.OAUTH_USERNAME: 认证用户名
    view.message.TENANT_QUERY_API: 租户查询地址
    view.message.URL_QUERY_API: URL查询地址
    view.message.USER_QUERY_API: 用户查询地址
    view.message.alreadyExit: 操作失败！当前参数已存在！
    view.message.commonRequestParams: 通用请求参数
    view.message.commonURIParams: 通用URI参数
    view.message.createEnv: 新建环境
    view.message.createRequestParams: 新建通用请求参数
    view.message.createURIParams: 新建通用URI参数
    view.message.devopsEnvId: 绑定环境
    view.message.envManage: 应用环境管理
    view.message.inputCLIENT_ID: 请输入客户端ID
    view.message.inputEnvCode: 请输入环境编码
    view.message.inputEnvName: 请输入环境名称
    view.message.inputGRANT_TYPE: 请输入授权类型
    view.message.inputOrderSeq: 请输入序号
    view.message.inputParamsName: 请输入参数名称
    view.message.inputParamsValue: 请输入参数值
    view.message.requestEnv: 请输入上下文环境
    view.message.requestNumber: 格式应为数字类型！
    view.message.updateEnv: 编辑环境
    view.message.updateRequestParams: 编辑通用请求参数
    view.message.updateURIParams: 编辑通用URI参数
  hystrix:
    model.hystrix.ParamsEnabledFlag: 启用状态
    model.hystrix.confKey: 类型
    model.hystrix.confTypeCode: 代码
    model.hystrix.enabledFlag: 启用状态
    model.hystrix.noRefreshSuccess: 未刷新
    model.hystrix.paramsRemark: 参数说明
    model.hystrix.propertyName: 参数名
    model.hystrix.propertyRemark: 参数描述
    model.hystrix.propertyValue: 参数值
    model.hystrix.refreshFailed: 刷新失败
    model.hystrix.refreshMessage: 刷新消息
    model.hystrix.refreshStatus: 刷新状态
    model.hystrix.refreshSuccess: 刷新成功
    model.hystrix.refreshTime: 刷新时间
    model.hystrix.remark: 描述
    model.hystrix.serviceConfLabel: 服务配置标签
    model.hystrix.serviceConfProfile: 服务配置Profile
    model.hystrix.serviceName: 服务
    view.message.title.hystrix: 熔断设置
    view.message.title.modal.create: 新建熔断类型
    view.message.title.noChange: 未修改数据
  nodeGrayGroup:
    model.nodeGrayGroup.appInstanceCode: 实例名称
    model.nodeGrayGroup.appName: 服务
    model.nodeGrayGroup.appVersionName: 应用版本
    model.nodeGrayGroup.commonGroupFlag: 通用
    model.nodeGrayGroup.finishedDate: 结束时间
    model.nodeGrayGroup.grayName: 灰度发布名称
    model.nodeGrayGroup.groupStatus: 状态
    model.nodeGrayGroup.nodeGroupName: 应用节点组名称
    model.nodeGrayGroup.podCount: 容器状态
    model.nodeGrayGroup.releasedDate: 发布时间
    model.nodeGrayGroup.status: 应用状态
    view.button.complete: 结束灰度
    view.button.delete: 删除实例
    view.button.deleteRelation: 删除关联关系
    view.button.finishedGray: 灰度结束
    view.button.grayRange: 灰度范围
    view.button.released: 已发布
    view.button.restart: 重启实例
    view.button.stop: 停止实例
    view.confirm.remove: 删除实例将不可恢复，其配置网络同时失效，确定要删除该实例吗？
    view.confirm.toComplete: 是否结束此灰度？
    view.message.createNodeGray: 新建灰度发布
    view.message.createNodeGroup: 新增节点组
    view.message.grayRange: 灰度范围管理
    view.message.inputGrayName: 请输入灰度发布名称
    view.message.title: 灰度发布管理
  nodeGroup:
    model.carbonCopyTask.startTime: 创建时间
    model.nodeGroup.appInstanceCode: 实例名称
    model.nodeGroup.appName: 服务
    model.nodeGroup.appVersionName: 应用版本
    model.nodeGroup.common: 通用
    model.nodeGroup.commonGroupFlag: 通用
    model.nodeGroup.customized: 客制化
    model.nodeGroup.grayFlag: 灰度
    model.nodeGroup.instanceCode: 实例名称
    model.nodeGroup.nodeGroupName: 节点组名称
    model.nodeGroup.nodeGroupsName: 节点组名称：
    model.nodeGroup.nodeRuleId: 规则ID
    model.nodeGroup.podCount: 容器状态
    model.nodeGroup.product: 产品：
    model.nodeGroup.productEdition: 产品版本：
    model.nodeGroup.productVersion: 产品版本
    model.nodeGroup.productorEnv: 产品/环境：
    model.nodeGroup.ruleName: 规则名称
    model.nodeGroup.serveVersions: 服务/版本：
    model.nodeGroup.serviceCode: 服务编码
    model.nodeGroup.serviceVersionNumber: 服务版本
    model.nodeGroup.status: 应用状态
    view.button.GrayScale: 灰度完成
    view.button.delete: 删除实例
    view.button.publish: 确认发布
    view.button.restart: 重启实例
    view.button.stop: 停止实例
    view.button.update: 修改配置信息
    view.button.upgrade: 升级实例
    view.confirm.table.remove: 删除实例将不可恢复，其配置网络同时失效，确定要删除该实例吗？
    view.message.confirm.table.remove: 删除实例将不可恢复，其配置网络同时失效，确定要删除该实例吗？
    view.message.searchApp: 搜索应用
    view.message.title.add: 请选择节点组规则
    view.message.title.app: 应用信息
    view.message.title.appAndVersion: 选择应用及版本
    view.message.title.config: 编辑配置
    view.message.title.create: 服务应用
    view.message.title.createRule: 新建规则
    view.message.title.gray: 请选择灰度规则
    view.message.title.grayScaleRule: 灰度规则
    view.message.title.info: 配置信息
    view.message.title.list: 节点组维护
    view.message.title.noUpgrade: 暂无可升级版本
    view.message.title.nodeGroup: 节点组管理
    view.message.title.nodeRule: 节点组规则
    view.message.title.preview: 发布预览
    view.message.title.product: 产品
    view.message.title.productVersion: 产品版本
    view.message.title.repeat: 所选规则已存在
    view.message.title.serverVersion: 服务/版本
    view.message.title.service: 请选择服务/版本
    view.message.title.tooltip: 选择新版本，并对实例配置信息修改后升级实例。
    view.message.title.version: 请选择产品版本
    view.option.bindNode: 绑定实例
    view.option.noBindNode: 未绑定实例
    view.option.openAppList: 打开应用列表
    view.option.openNodeList: 打开实例列表
    view.option.searchApp: 搜索应用
    view.option.searchNode: 搜索实例
    view.option.selectApp: 选择应用
    view.option.selectNode: 选择实例
    view.option.selectVersion: 选择版本
    view.option.selectedApp: 选择的应用
    view.option.selectedVersion: 选择的版本
  nodeRule:
    model.nodeRule.HttpMethod: HttpMethod
    model.nodeRule.createTenement: 新建租户
    model.nodeRule.enabledFlag: 启用
    model.nodeRule.loginName: 账户
    model.nodeRule.nodeRuleId: 规则ID
    model.nodeRule.priority: 优先级
    model.nodeRule.productEnv: 产品/环境：
    model.nodeRule.realName: 用户名
    model.nodeRule.ruleCode: 规则编码
    model.nodeRule.ruleName: 规则名称
    model.nodeRule.serviceName: 服务名
    model.nodeRule.tenantId: 租户ID
    model.nodeRule.tenantName: 租户名称
    model.nodeRule.tenantNum: 租户编码
    model.nodeRule.url: URL(可选)
    model.nodeRule.urlMeaning: URL
    model.nodeRule.user: 用户(可选)
    model.nodeRule.userCondition: 账户/用户名
    model.nodeRule.userId: 用户ID
    view.message.confirm.remove: 是否删除此条记录？
    view.message.title: 选择租户
    view.message.title.add: 请先新增租户信息
    view.message.title.create: 节点组规则新建
    view.message.title.editor: 节点组规则编辑
    view.message.title.list: 节点组规则
    view.message.title.repeat: 所选租户已存在
  nodeRuleExt:
    view.message.title.list: 节点组规则Ext
  product:
    model.product.description: 描述
    model.product.releaseDate: 发布时间
    model.product.versionNumber: 版本号
    model.product.versionRequire: 请输入版本号
    view.message.title.version.create: 新建版本
    view.message.title.version.edit: 编辑版本
    view.message.versionError: 版本号格式不正确
  productCollect:
    model.productCollect.description: 产品描述
    model.productCollect.productCode: 产品编码
    model.productCollect.productName: 产品名称
    view.message.title: 产品汇总
    view.message.title.editor.create: 新建产品
    view.message.title.editor.edit: 编辑产品
    view.message.title.version: 版本管理
  productEnv:
    model.productEnv.activeFlag: 环境状态
    model.productEnv.connectFlag: 连接状态
    model.productEnv.createEnv: 新建环境
    model.productEnv.deployPlatformName: 部署平台
    model.productEnv.devopsEnvCode: 绑定环境
    model.productEnv.editEnv: 编辑环境
    model.productEnv.envCode: 环境编码
    model.productEnv.envName: 环境名称
    model.productEnv.gatewayPath: 网关地址
    model.productEnv.orderSeq: 序号
    model.productEnv.tenantQueryPath: 租户查询地址
    model.productEnv.urlQueryPath: URL查询地址
    model.productEnv.userQueryPath: 用户查询地址
    view.message.editor.action: 运行中
    view.message.editor.link: 已连接
    view.message.editor.stop: 已停用
    view.message.editor.unLink: 未连接
    view.message.title: 环境管理
  productService:
    button.topology: 拓扑图
    view.message.doubleClick: 双击查看详情
    view.message.noData: 暂无相关数据
    view.message.serviceDetail: '-服务详情'
    view.message.title: 服务组合
    view.message.title.editor.create: 新建服务
    view.message.topology: '{name}-拓扑图'
  serviceCollect:
    model.serviceCollect.appCode: 应用编码
    model.serviceCollect.appName: 应用名称
    model.serviceCollect.appSourceCode: 关联应用
    model.serviceCollect.appVersionId: 应用版本
    model.serviceCollect.mateVersion: 标记版本
    model.serviceCollect.releaseDate: 发布时间
    model.serviceCollect.repoBranch: 分支
    model.serviceCollect.repoTag: 标签
    model.serviceCollect.repoUrl: 仓库地址
    model.serviceCollect.repositoryUrl: 镜像地址
    model.serviceCollect.serviceLogo: 服务图片
    model.serviceCollect.updateLog: 更新日志
    model.serviceCollect.version: 代码版本
    model.serviceCollect.versionNumber: 版本号
    model.ssoConfig.uploadSupport: 上传格式：*.png;*.jpeg
    validation.mateVersion: 标记版本不正确
    validation.versionNumber: 版本号格式不正确
    view.message.title: 服务汇总
    view.message.title.editor.create: 新建服务
    view.message.title.editor.edit: 编辑服务
    view.message.title.version.create: 新建版本
    view.message.title.version.edit: 编辑版本
    view.message.title.version.title: 版本管理
  serviceConfig:
    view.button.default: 设为默认
    view.button.refresh: 刷新配置
    view.editor.configInfo: 配置信息
    view.message.default.description: 在没有可用配置时将使用该默认配置
    view.message.refresh.description: 将动态刷新服务配置!
    view.message.title: 服务配置
  serviceManage:
    model.serviceCollect.serviceLogo: 服务图片
    view.message.title.editor.create: 新建服务
    view.message.title.editor.edit: 编辑服务
  serviceRely:
    model.serviceRely.relySource: 来源
    model.serviceRely.versionNumber: 依赖版本
    view.message.title: 依赖管理
    view.message.title.editor.create: 新建依赖
  serviceRoute:
    model.serviceRoute.customSensitiveHeaders: 自定义敏感头
    model.serviceRoute.gatewayHelper: 自定义GatewayHelper
    model.serviceRoute.helperService: 敏感头部列表
    model.serviceRoute.name: 路由标识
    model.serviceRoute.path: 服务路径
    model.serviceRoute.retryable: 支持路由重试
    model.serviceRoute.stripPrefix: 去掉前缀
    model.serviceRoute.url: 物理路径
    view.button.refresh: 刷新路由
    view.message.editor.create: 新建服务路由
    view.message.editor.edit: 编辑服务路由
    view.message.refresh.description: 将动态刷新服务路由
    view.message.title: 服务路由
  sourceLov:
    view.message.selectOne: 选择一列数据
  zuulRateLimit:
    model.zuulRateLimit.consumeRate: 令牌消耗速率
    model.zuulRateLimit.enabledFlag: 是否启用
    model.zuulRateLimit.maxLimit: 请求数限制
    model.zuulRateLimit.noRefresh: 未刷新
    model.zuulRateLimit.origin: 源请求地址维度
    model.zuulRateLimit.quota: 请求时间限制
    model.zuulRateLimit.rate: 令牌产生速率
    model.zuulRateLimit.rateLimitKey: 代码
    model.zuulRateLimit.rateLimitType: 限流方式
    model.zuulRateLimit.refreshFailed: 刷新失败
    model.zuulRateLimit.refreshInterval: 刷新窗口（秒）
    model.zuulRateLimit.refreshMessage: 刷新消息
    model.zuulRateLimit.refreshStatus: 刷新状态
    model.zuulRateLimit.refreshSuccess: 刷新成功
    model.zuulRateLimit.refreshTime: 刷新时间
    model.zuulRateLimit.remark: 说明
    model.zuulRateLimit.routeKey: 路由
    model.zuulRateLimit.serviceConfLabel: 服务配置标签
    model.zuulRateLimit.serviceConfProfile: 服务配置Profile
    model.zuulRateLimit.serviceName: 网关服务
    model.zuulRateLimit.tenant: 租户维度
    model.zuulRateLimit.uomTypeCode: 代码
    model.zuulRateLimit.url: URL维度
    model.zuulRateLimit.user: 用户维度
    view.button.refresh: 刷新配置
    view.message.detail: 限流方式定义
    view.message.detailAdd: 创建限流方式
    view.message.detailEdit: 编辑限流方式
    view.message.title: 限流配置
    view.message.title.content: 确定删除吗？
    view.message.title.delete: 提示框
    view.message.title.detail: 限流方式定义
    view.message.title.detailAdd: 创建限流方式
    view.message.title.detailEdit: 编辑限流方式
    view.message.title.listForm: 新增限流配置
    view.title.detailHeader: 限流方式
    view.title.detailLine: 限流路由
hssp:
  screen:
    button.create: 新增
hwfl:
  approveAuth:
    model.approve.category: 流程分类
    model.approve.code: 编码
    model.approve.description: 描述
    model.approve.expression: 执行表达式
    model.approve.scope: 数据范围
    model.rule.code: 规则编号
    model.rule.description: 规则描述
    model.rule.leftOperandText: 左操作数
    model.rule.leftType: 左操作数类型
    model.rule.operator: 操作符
    model.rule.rightOperantText: 右操作数
    model.rule.rightType: 右操作数类型
    view.message.drawer.title: 规则维护
    view.message.tab.rule: 规则
    view.message.title: 审批权限管理
    view.message.title.add: 审批权限 - 新建
    view.message.title.edit: 审批权限 - 编辑
    view.option.add.rule: 添加规则
    view.validation.warning: 编码已存在
  approveRule:
    model.approveRule.code: 编码
    model.approveRule.contextEnable: 传递上下文
    model.approveRule.defaultValue: 默认值
    model.approveRule.description: 描述
    model.approveRule.editAble: 是否可编辑
    model.approveRule.invokeRemoteService: 调用远程服务
    model.approveRule.isUriVariable: 是否为URL参数
    model.approveRule.parameterName: 参数名称
    model.approveRule.parameterOrigin: 页面地址
    model.approveRule.parameterType: 参数类型
    model.approveRule.returnType: 返回类型
    model.approveRule.scope: 数据范围
    model.approveRule.url: 接口映射
    view.button.add: 添加参数
    view.message.approveRule: 审批规则
    view.message.approveRuleParam: 审批规则参数
    view.message.drawer.add: 添加参数
    view.message.drawer.edit: 编辑参数
    view.message.title: 审批规则管理
    view.message.title.add: 审批规则 - 新建
    view.message.title.edit: 审批规则 - 编辑
    view.tab.param: 参数
    view.validation.code: 编码已存在，请输入其他编码
  approveWay:
    model.approve.category: 流程分类
    model.approve.code: 编码
    model.approve.description: 描述
    model.approve.expression: 执行表达式
    model.approve.scope: 数据范围
    model.rule.code: 规则编号
    model.rule.description: 规则描述
    model.rule.leftOperandText: 左操作数
    model.rule.leftType: 左操作数类型
    model.rule.operator: 操作符
    model.rule.rightOperantText: 右操作数
    model.rule.rightType: 右操作数类型
    view.message.drawer.title: 规则维护
    view.message.tab.rule: 规则
    view.message.title: 审批方式管理
    view.message.title.add: 审批方式 - 新建
    view.message.title.edit: 审批方式 - 编辑
    view.option.add.rule: 添加规则
    view.validation.warning: 编码已存在
  carbonCopyTask:
    model.carbonCopyTask.action: 审批动作
    model.carbonCopyTask.approveRecord: 审批记录
    model.carbonCopyTask.assigneeName: 审批人
    model.carbonCopyTask.comment: 审批意见
    model.carbonCopyTask.currentApprover: 当前处理人
    model.carbonCopyTask.description: 流程描述
    model.carbonCopyTask.endTime: 结束时间
    model.carbonCopyTask.name: 审批环节
    model.carbonCopyTask.positionName: 岗位名称
    model.carbonCopyTask.priority: 优先级
    model.carbonCopyTask.processId: 流程ID
    model.carbonCopyTask.processName: 流程名称
    model.carbonCopyTask.readFlag: 状态
    model.carbonCopyTask.startName: 申请人
    model.carbonCopyTask.startTime: 创建时间
    model.carbonCopyTask.unitName: 部门名称
    view.message.approveForm: 审批表单
    view.message.approveHistory: 审批历史
    view.message.approveItem: 审批事项
    view.message.flowChart: 流程图
    view.message.priority: 状态
    view.message.processDefinitionNameLike: 流程名称
    view.message.processInstanceId: 流程ID
    view.message.processStatus: 流程状态
    view.message.startUserName: 申请人
    view.message.startedAfter: 创建时间从
    view.message.startedBefore: 创建时间至
    view.message.tab.detail: 审批明细
    view.message.tab.process: 流程图
    view.message.title: 我的抄送流程
    view.message.title.confirm: 确认
    view.message.title.confirmBack: 确认撤回吗?
    view.message.title.confirmTip: 确认撤回吗?
    view.message.title.detail: 流程明细
    view.option.detail: 详情
    view.option.recall: 撤回
  categories:
    modal.categories.code: 流程分类编码
    modal.categories.description: 流程分类描述
    model.categories.categoryCode: 流程分类编码
    model.categories.code: 流程分类编码
    model.categories.description: 流程分类描述
    model.categories.variableName: 字段名称
    view.message.create: 新建流程分类
    view.message.edit: 编辑流程分类
    view.message.title: 流程分类
  common:
    model.apply.owner: 申请人
    model.apply.time: 申请时间
    model.approval.action: 审批动作
    model.approval.form: 审批表单
    model.approval.history: 审批历史
    model.approval.item: 审批事项
    model.approval.opinion: 审批意见
    model.approval.owner: 审批人
    model.approval.record: 审批记录
    model.approval.step: 审批环节
    model.approval.time: 审批时间
    model.categories.description: 字段描述
    model.categories.operator: 是否必输
    model.categories.variableType: 字段类型
    model.common.code: 编码
    model.common.description: 描述
    model.node.id: 节点id
    model.node.name: 节点名称
    model.param.add: 添加参数
    model.param.edit: 编辑参数
    model.param.name: 参数名称
    model.param.tag: 参数
    model.param.type: 参数类型
    model.param.value: 参数值
    model.process.ID: 流程ID
    model.process.category: 流程分类
    model.process.class: 流程分类
    model.process.code: 流程编码
    model.process.define: 流程定义
    model.process.description: 流程描述
    model.process.detail: 流程明细
    model.process.file: BPMN 定义文件
    model.process.graph: 流程图
    model.process.key: 流程编码
    model.process.name: 流程名称
    model.process.status: 流程状态
    model.rule.add: 添加规则
    model.rule.code: 规则编码
    model.rule.description: 规则描述
    model.rule.expression: 表达式
    model.rule.expression.execute: 执行表达式
    model.rule.leftOperandText: 左操作数
    model.rule.leftType: 左操作数类型
    model.rule.maintain: 规则维护
    model.rule.operator: 操作符
    model.rule.rightOperantText: 右操作数
    model.rule.rightType: 右操作数类型
    model.rule.tag: 规则
    view.message.apiUrl: 接口映射
    view.message.confirm: 确认
    view.message.context: 传递上下文
    view.message.current.stage: 当前节点
    view.message.defaultValue: 默认值
    view.message.detail: 详情
    view.message.editAble: 是否可编辑
    view.message.handler: 当前处理人
    view.message.invokeRemoteService: 调用远程服务
    view.message.isUriVariable: 是否为URL参数
    view.message.parameterOrigin: 页面地址
    view.message.recall: 撤回
    view.message.remind: 催办
    view.message.returnType: 返回类型
    view.message.revoke: 撤销
    view.option.suspend: 挂起
    view.validation.code.exist: 编码已存在，请输入其他编码
  condition:
    model.condition.category: 流程分类
    model.condition.code: 编码
    model.condition.description: 描述
    model.condition.expression: 执行表达式
    model.condition.scope: 数据范围
    model.rule.code: 规则编号
    model.rule.description: 规则描述
    model.rule.leftOperandText: 左操作数
    model.rule.leftType: 左操作数类型
    model.rule.operator: 操作符
    model.rule.rightOperantText: 右操作数
    model.rule.rightType: 右操作数类型
    view.message.drawer.title: 规则维护
    view.message.tab.rule: 规则
    view.message.title: 跳转条件管理
    view.message.title.add: 跳转条件 - 新建
    view.message.title.edit: 跳转条件 - 编辑
    view.option.add.rule: 添加规则
    view.validation.rule.warning: 规则编号已存在
    view.validation.warning: 编码已存在
  database:
    model.database.publicFlag: 公共库标识
  delegate:
    view.message.delegate: 转交人
    view.message.delegateEndDate: 转交截止日期
    view.message.delegateStartDate: 转交开始日期
    view.message.endIsBefore: 转交截止日期不能早于当前时间
    view.message.isBefore: 转交截止日期不能早于转交开始日期
    view.message.startIsBefore: 转交开始日期不能早于当前时间
    view.message.title: 自动转交配置
  exception:
    model.exception.duedate: 产生时间
    model.exception.exceptionDetail: 报错详情
    model.exception.messStr: 异常信息
    model.exception.messageHead: 报错原因
    model.exception.option.callback: 返回
    model.exception.procDefName: 流程名称
    model.exception.procId: 流程ID
    model.exception.titleDetail: 组织"运营组织"的报错日志详情
    model.exceptionDetail: 报错详情
    option.callback: 返回
    view.message.after: 创建时间从
    view.message.before: 创建时间至
    view.message.description: 报错日志记录流程执行过程中的报错记录
    view.message.detail: 详情
    view.message.duedate: 产生时间
    view.message.exceptionDetail: 报错详情
    view.message.messStr: 异常信息
    view.message.procDefName: 流程名称
    view.message.procId: 流程ID
    view.message.title: 报错日志
    view.message.titleDetail: 组织"运营组织"的报错日志
    view.option.detail: 详情
  expressionService:
    model.expression.category: 流程分类
    model.expression.code: 编码
    model.expression.contextEnable: 传递上下文
    model.expression.defaultValue: 默认值
    model.expression.description: 描述
    model.expression.editAble: 是否可编辑
    model.expression.invokeRemoteService: 调用远程服务
    model.expression.isUriVariable: 是否为URL参数
    model.expression.parameterName: 参数名称
    model.expression.parameterOrigin: 页面地址
    model.expression.parameterType: 参数类型
    model.expression.returnType: 返回类型
    model.expression.url: 接口映射
    view.button.add: 添加参数
    view.message.drawer.add: 添加参数
    view.message.drawer.edit: 编辑参数
    view.message.title: 表达式服务管理
    view.message.title.add: 表达式服务 - 新建
    view.message.title.edit: 表达式服务 - 编辑
    view.tab.param: 参数
    view.validation.code: 编码已存在，请输入其他编码
  formManage:
    modal.formManage.category: 流程分类
    modal.formManage.code: 编码
    modal.formManage.description: 描述
    modal.formManage.invokeFlag: 是否回调
    modal.formManage.url: 表单url
    model.formManage.code: 表单编码
    model.formManage.invokeFlag: 是否回调
    model.formManage.url: 表单url
    view.message.create: 新建表单管理
    view.message.edit: 编辑表单管理
    view.message.title: 表单管理
    view.validation.codeExist: 编码已存在，请输入其他编码
    view.validation.codeNotValid: 编码不能为纯数字
  interfaceMap:
    model.interfaceMap.code: 接口编码
    model.interfaceMap.description: 接口说明
    model.interfaceMap.scope: 数据范围
    model.interfaceMap.serviceId: 服务Id
    model.interfaceMap.url: 接口地址
    view.message.create: 新建接口映射
    view.message.edit: 编辑接口映射
    view.message.title: 接口映射管理
    view.validation.code: 编码已存在，请输入其他编码
  involvedTask:
    model.involvedTask.action: 审批动作
    model.involvedTask.approveReason: 审批意见
    model.involvedTask.approveStep: 审批环节
    model.involvedTask.assigneeName: 审批人
    model.involvedTask.currentApprover: 当前处理人
    model.involvedTask.description: 流程描述
    model.involvedTask.endTime: 结束时间
    model.involvedTask.name: 申请人
    model.involvedTask.positionName: 岗位名称
    model.involvedTask.priority: 优先级
    model.involvedTask.processInstanceId: 流程ID
    model.involvedTask.processName: 流程名称
    model.involvedTask.processStatus: 流程状态
    model.involvedTask.startTime: 创建时间
    model.involvedTask.startUserName: 申请人
    model.involvedTask.taskName: 当前节点
    model.involvedTask.unitName: 部门名称
    view.message.approveForm: 审批表单
    view.message.approveItem: 审批事项
    view.message.description: 审批历史
    view.message.flowChart: 流程图
    view.message.involved: 我参与的流程
    view.message.processDefinitionNameLike: 流程名称
    view.message.processInstanceId: 流程ID
    view.message.processStatus: 流程状态
    view.message.startUserName: 申请人
    view.message.startedAfter: 创建时间从
    view.message.startedBefore: 创建时间至
    view.message.startedBy: 我发起的流程
    view.message.tab.detail: 审批明细
    view.message.tab.process: 流程图
    view.message.title: 我参与的流程
    view.message.title.confirm: 确认
    view.message.title.confirmBack: 确认撤回吗?
    view.message.title.confirmTip: 确认撤回吗?
    view.message.title.detail: 流程明细
    view.option.detail: 详情
    view.option.recall: 撤回
  listenerManage:
    model.listenerManage.code: 监听器编码
    model.listenerManage.event: 监听事件
    model.listenerManage.name: 监听器名称
    model.listenerManage.onTransaction: 事务状态
    model.listenerManage.serviceCode: 服务任务
    model.listenerManage.transactionFlag: 依赖事务
    model.listenerManage.type: 监听器类型
    view.message.create: 新建监听器
    view.message.edit: 编辑监听器
    view.message.title: 监听器管理
  messageService:
    model.messageDetail.contextEnable: 传递上下文
    model.messageDetail.defaultValue: 默认值
    model.messageDetail.editAble: 是否可编辑
    model.messageDetail.invokeRemoteService: 调用远程服务
    model.messageDetail.isUriVariable: 是否为URL参数
    model.messageDetail.parameterName: 参数名称
    model.messageDetail.parameterOrigin: 页面地址
    model.messageDetail.parameterType: 参数类型
    model.messageDetail.returnType: 返回类型
    model.messageDetail.url: 接口映射
    model.messageService.code: 编码
    model.messageService.description: 描述
    model.messageService.invokeRemoteService: 调用远程服务
    model.messageService.scope: 数据范围
    view.button.add: 添加参数
    view.message.drawer.add: 添加参数
    view.message.drawer.edit: 编辑参数
    view.message.title: 消息服务管理
    view.message.title.add: 消息服务 - 新建
    view.message.title.edit: 消息服务 - 编辑
    view.tab.param: 参数
    view.validation.code: 编码已存在，请输入其他编码
  monitor:
    model.monitor.approveEndTime: 审批时间
    model.monitor.currentApprover: 当前处理人
    model.monitor.endTime: 结束时间
    model.monitor.exceptionDetail: 挂起详情
    model.monitor.exceptionMsgHead: 挂起原因
    model.monitor.jumpNode: 跳转节点
    model.monitor.processDefinitionNameLike: 流程名称
    model.monitor.processDescription: 流程描述
    model.monitor.processInstanceId: 流程ID
    model.monitor.processStatus: 流程状态
    model.monitor.startTime: 创建时间
    model.monitor.startUserName: 申请人
    model.monitor.taskName: 当前节点
    view.message.currentApprover: 当前处理人
    view.message.description: 管理员对当前组织下所有流程的监控查看，可以对流程进行挂起，转交，结束，跳转到指定节点等操作
    view.message.endTime: 结束时间
    view.message.exceptionMsgHead: 挂起原因
    view.message.finishedAfter: 结束时间从
    view.message.finishedBefore: 结束时间至
    view.message.processDefinitionNameLike: 流程名称
    view.message.processDescription: 流程描述
    view.message.processInstanceId: 流程ID
    view.message.processStatus: 流程状态
    view.message.startTime: 创建时间
    view.message.startUserName: 申请人
    view.message.startedAfter: 创建时间从
    view.message.startedBefore: 创建时间至
    view.message.startedBy: 申请人
    view.message.taskName: 当前节点
    view.message.title: 流程监控
    view.message.title.confirmRetry: 确认重试吗?
    view.message.titleDetail: 组织“运营组织”中的流程监控
    view.option.delegate: 转交
    view.option.jumpNode: 跳转节点
    view.option.resume: 恢复流程
    view.option.retry: 审批重试
    view.option.stop: 终止流程
    view.option.suspendedDetail: 挂起详情
  processDefine:
    model.deploy.category: 分类
    model.deploy.flag: 标识
    model.deploy.name: 名称
    model.deploy.time: 发布时间
    model.deploy.version: 版本
    model.process.category: 分类
    model.process.description: 描述
    model.process.flag: 标识
    model.process.id: ID
    model.process.key: 流程编码
    model.process.name: 流程名称
    model.process.updateTime: 修改时间
    view.button.selectFile: 选择文件
    view.message.datail: 流程部署详情
    view.message.deploy: 流程发布查看
    view.message.deployInfo: 部署信息
    view.message.preview: 预览图
    view.message.processInfo: 流程信息
    view.message.title: 流程定义
    view.option.add: 添加流程
    view.option.detail: 详情
    view.title.importModal: 导入
    view.validation.exist: 编码已存在
  processStart:
    model.ocessStart.processDefinitionKey: 流程定义
    model.processStart.businessKey: 业务主键
    model.processStart.employeeNum: 模拟用户
    model.processStart.name: 参数名
    model.processStart.value: 参数值
    view.button.start: 启动
    view.message.create: 新建流程启动
    view.message.title: 流程启动测试
    view.title.params: 参数
    view.title.process: 流程
  processVariable:
    model.processVariable.category: 流程分类
    model.processVariable.code: 编码
    model.processVariable.description: 描述
    model.processVariable.parameterType: 变量类型
    model.processVariable.scope: 数据范围
    view.message.create: 新建流程变量
    view.message.edit: 编辑流程变量
    view.message.title: 流程变量管理
    view.validation.code: 编码已存在，请输入其他编码
  sendConfig:
    view.title.testSend: 测试发送
  serviceTask:
    modal.task.category: 流程分类
    model.task.code: 编码
    model.task.contextEnable: 传递上下文
    model.task.defaultValue: 默认值
    model.task.description: 描述
    model.task.editAble: 是否可编辑
    model.task.invokeRemoteService: 调用远程服务
    model.task.isUriVariable: 是否为URL参数
    model.task.parameterName: 参数名称
    model.task.parameterOrigin: 页面地址
    model.task.parameterType: 参数类型
    model.task.returnType: 返回类型
    model.task.scope: 数据范围
    model.task.url: 接口映射
    view.button.add: 添加参数
    view.message.drawer.add: 添加参数
    view.message.drawer.edit: 编辑参数
    view.message.title: 服务任务管理
    view.message.title.add: 服务任务 - 新建
    view.message.title.edit: 服务任务 - 编辑
    view.tab.param: 参数
    view.validation.code: 编码已存在，请输入其他编码
  startByTask:
    model.startByTask.endTime: 结束时间
    model.startByTask.startTime: 创建时间
    view.message.title: 我发起的流程
    view.message.title.confirmBack: 确认撤回吗?
    view.message.title.confirmDelete: 确认撤销吗?
    view.message.title.confirmRemind: 确认催办吗?
  task:
    model.task.action: 审批动作
    model.task.approveName: 审批人
    model.task.assigneeName: 申请人
    model.task.category: 流程分类
    model.task.comment: 审批意见
    model.task.createTime: 申请时间
    model.task.creationTime: 创建时间
    model.task.description: 流程描述
    model.task.employee.employeeNum: 员工编码
    model.task.employee.name: 员工姓名
    model.task.employee.positionName: 岗位名称
    model.task.employee.unitName: 部门名称
    model.task.endTime: 审批时间
    model.task.name: 审批环节
    model.task.positionName: 岗位名称
    model.task.priority: 优先级
    model.task.processInstanceId: 流程ID
    model.task.processName: 流程名称
    model.task.startName: 申请人
    model.task.startUserName: 当前处理人
    model.task.unitName: 部门名称
    view.message.addCc: 添加抄送人
    view.message.approveForm: 审批表单
    view.message.approveItem: 审批事项
    view.message.approverUsers: 指定审批人
    view.message.assignee: 申请人
    view.message.carbonCopyUsers: 抄送人
    view.message.comment: 请求编码
    view.message.createdAfter: 创建时间至
    view.message.createdBefore: 创建时间从
    view.message.description: 审批历史
    view.message.employee.employeeNum: 员工编码
    view.message.employee.name: 员工姓名
    view.message.flowChart: 流程图
    view.message.priority: 优先级
    view.message.processDefinitionId: 流程ID
    view.message.processDefinitionNameLike: 流程名称
    view.message.tab.detail: 待办明细
    view.message.tab.process: 流程图
    view.message.title: 我的待办列表
    view.message.title.confirm: 确认
    view.message.title.confirmTip: '确认{actionName}吗?'
    view.message.title.detail: 待办明细
    view.option.addApprover: 指定审批人
    view.option.addCc: 添加抄送
    view.option.addUser: 加签
    view.option.agree: 同意
    view.option.approveAndAddSign: 同意并加签
    view.option.deal: 办理
    view.option.delegate: 转交
    view.option.recall: 撤回
    view.option.refuse: 拒绝
    view.title.detail.approval: 审批人
  taskMonitor:
    modal.taskMonitor.onTransaction: 事务状态
    modal.taskMonitor.serverCode: 服务任务
    modal.taskMonitor.transcationFlag: 依赖事务
    model.taskMonitor.category: 流程分类
    model.taskMonitor.code: 任务监听器编码
    model.taskMonitor.description: 参数名称
    model.taskMonitor.event: 监听事件
    model.taskMonitor.name: 任务监听器名称
    model.taskMonitor.onTransaction: 事务状态
    model.taskMonitor.parameterType: 参数类型
    model.taskMonitor.serviceCode: 服务任务
    model.taskMonitor.transactionFlag: 依赖事务
    model.taskMonitor.value: 参数值
    view.message.create: 新建任务监听
    view.message.edit: 编辑任务监听
    view.message.title: 任务监听器管理
    view.validation.code: 编码已存在，请输入其他编码
hwfp:
  carbonCopyTask:
    model.carbonCopyTask.endTime: 结束时间
    model.carbonCopyTask.readFlag: 状态
    model.carbonCopyTask.startTime: 创建时间
    view.message.priority: 状态
    view.message.title: 我的抄送流程
    view.message.title.confirmBack: 确认撤回吗?
  categories:
    model.categories.categoryCode: 流程分类编码
    model.categories.code: 规则编号
    model.categories.description: 流程分类描述
    model.categories.variableName: 字段名称
    view.message.title: 流程分类
  common:
    button.params.add: 添加参数
    model.apply.owner: 申请人
    model.apply.time: 申请时间
    model.approval.action: 审批动作
    model.approval.activityStartTime: 审批时间
    model.approval.file: 附件
    model.approval.form: 审批表单
    model.approval.history: 审批历史
    model.approval.item: 审批事项
    model.approval.opinion: 审批意见
    model.approval.owner: 审批人
    model.approval.processEndTime: 流程结束时间
    model.approval.processName: 流程名称
    model.approval.processStartTime: 流程开始时间
    model.approval.record: 审批记录
    model.approval.step: 审批环节
    model.approval.time: 审批时间
    model.categories.description: 字段描述
    model.categories.operator: 是否必输
    model.categories.variableType: 字段类型
    model.common.categoryCode: 流程分类编码
    model.common.categoryDescription: 流程分类描述
    model.common.code: 编码
    model.common.description: 描述
    model.common.documentCode: 流程单据编码
    model.common.documentDescription: 流程单据描述
    model.common.enabledFlag: 是否启用
    model.common.formCode: 表单编码
    model.common.formDescription: 表单描述
    model.common.formUrl: 表单URL
    model.common.requiredFlag: 是否必输
    model.common.variableDescription: 字段描述
    model.common.variableName: 字段名称
    model.common.variableType: 字段类型
    model.documents.class: 流程单据
    model.documents.documentCode: 流程单据编码
    model.documents.documentDescription: 流程单据描述
    model.param: 参数
    model.param.name: 参数名称
    model.param.requiredFlag: 必输
    model.param.value: 参数值
    model.process.ID: 流程ID
    model.process.class: 流程分类
    model.process.code: 流程编码
    model.process.define: 流程定义
    model.process.description: 流程描述
    model.process.detail: 流程明细
    model.process.file: BPMN定义文件
    model.process.graph: 流程图
    model.process.name: 流程名称
    model.process.select: 选择文件
    model.process.status: 流程状态
    model.rule.maintain: 变量维护
    view.button.addCategory: 新增流程分类
    view.button.addDocument: 新增流程单据
    view.button.addForm: 新增流程表单
    view.button.addVariable: 添加流程变量
    view.button.deploy: 部署
    view.button.deployed: 已部署
    view.message.confirm: 确认
    view.message.current.stage: 当前节点
    view.message.deployRecord.noContent: 暂无记录
    view.message.detail: 详情
    view.message.handler: 当前处理人
    view.message.recall: 撤回
    view.message.remind: 催办
    view.message.revoke: 撤销
    view.message.title.category: 流程分类
    view.message.title.deployRecord: 发布记录
    view.message.title.document: 流程单据
    view.message.title.form: 流程表单
    view.message.title.formMaintain: 表单维护
    view.message.title.variable: 流程变量
    view.message.title.variableMaintain: 变量维护
    view.message.version: 版本
    view.option.suspend: 挂起
    view.validation.code.exist: 编码已存在，请输入其他编码
  delegate:
    view.message.delegate: 转交人
    view.message.delegateEndDate: 转交截止日期
    view.message.delegateStartDate: 转交开始日期
    view.message.endIsBefore: 转交截止日期不能早于当前时间
    view.message.isBefore: 转交截止日期不能早于转交开始日期
    view.message.startIsBefore: 转交开始日期不能早于当前时间
    view.message.title: 自动转交配置
  formManage:
    model.formManage.code: 表单编码
    model.formManage.invokeFlag: 是否回调
    model.formManage.url: 表单url
    view.message.create: 新建表单管理
    view.message.edit: 编辑表单管理
    view.message.title: 表单管理
    view.validation.codeNotValid: 编码不能为纯数字
  interfaceDefinition:
    model.interface.description: 接口说明
    model.interface.interfaceCode: 接口编码
    model.interface.permissionCode: 接口权限编码
    model.interface.serviceName: 服务名称
    model.interfaceDefinition.defaultValue: 默认值
    model.interfaceDefinition.enabledFlag: 启用
    model.interfaceDefinition.interfaceCode: 接口编码
    model.interfaceDefinition.interfaceParameterTypeMeaning: 参数类型
    model.interfaceDefinition.parameterName: 参数名称
    model.interfaceDefinition.parameterSource: 参数来源
    model.interfaceDefinition.parameterTypeMeaning: 参数类型
    model.interfaceDefinition.parameterValue: 参数值
    model.interfaceDefinition.paramterValue: 参数值
    model.interfaceDefinition.permissionCode: 接口权限编码
    model.interfaceDefinition.serviceName: 服务名称
    model.param.defaultValue: 默认值
    model.param.description: 参数描述
    model.param.parameterName: 参数名称
    model.param.parameterSource: 参数来源
    model.param.parameterType: 参数类型
    model.param.parameterValue: 参数值
    view.message.title: 接口定义
    view.test: 接口测试
    view.title.editParams: 编辑参数
  interfaceMap:
    model.interfaceMap.description: 接口说明
    model.interfaceMap.interfaceCode: 接口编码
    model.interfaceMap.serviceName: 服务名称
  involvedTask:
    model.involvedTask.endTime: 结束时间
    model.involvedTask.startTime: 创建时间
    view.message.title: 我参与的流程
    view.message.title.confirmBack: 确认撤回吗?
  monitor:
    model.approval.time: 审批时间
    model.monitor.duedate: 日期
    model.monitor.endTime: 结束时间
    model.monitor.exceptionDetail: 挂起详情
    model.monitor.exceptionMsgHead: 挂起原因
    model.monitor.jumpNode: 跳转节点
    model.monitor.messageHead: 消息头
    model.monitor.model.nodeId: 节点id
    model.monitor.model.nodeName: 节点名称
    model.monitor.procDefName: 流程名称
    model.monitor.startTime: 创建时间
    view.message.finishedAfter: 结束时间从
    view.message.finishedBefore: 结束时间至
    view.message.processDefinitionNameLike: 流程名称
    view.message.title: 流程监控
    view.message.title.log: 异常信息
    view.option.jumpNode: 异常信息
    view.option.resume: 恢复流程
    view.option.retry: 指定审批人
    view.option.stop: 终止流程
    view.option.suspendedDetail: 挂起详情
  processDefine:
    model.deploy.category: 分类
    model.deploy.flag: 标识
    model.deploy.name: 名称
    model.deploy.time: 发布时间
    model.deploy.version: 版本
    view.message.deployInfo: 部署信息
    view.message.preview: 预览图
    view.message.processInfo: 流程信息
    view.option.create: 新建流程
    view.option.import: 导入
    view.title.copyValue: 流程复制
  processStart:
    model.processStart.businessKey: 业务主键
    model.processStart.employeeNum: 模拟用户
    view.button.start: 启动
    view.message.create: 新建流程启动
    view.message.edit: 编辑流程启动
    view.message.setParam: 请设置参数值
    view.message.title: 流程启动测试
    view.title.params: 参数
    view.title.process: 流程
  serviceDefinition:
    model.expression.: 表达式
    model.interface.expression: 执行表达式
    model.interface.interfaceId: 接口定义
    model.interface.serviceId: 接口定义
    model.interface.simpleExpression: 表达式
    model.interfaceId.: 接口定义
    model.param.defaultValue: 默认值
    model.param.description: 参数描述
    model.param.leftParameterSource: 左参数来源
    model.param.leftParameterValue: 左参数值
    model.param.operator: 操作符
    model.param.orderNumber: 序号
    model.param.parameterName: 参数名称
    model.param.parameterType: 参数类型
    model.param.parameterValue: 参数值
    model.param.rightParameterSource: 右参数来源
    model.param.rightParameterValue: 右参数值
    model.service.categoryDescription: 流程分类
    model.service.categoryId: 流程分类
    model.service.description: 服务描述
    model.service.documentDescription: 流程单据
    model.service.documentId: 流程单据
    model.service.interfaceParameterType: 参数类型
    model.service.leftParameterSource: 左参数来源
    model.service.parameterSource: 参数来源
    model.service.rightParameterSource: 右参数来源
    model.service.serviceCode: 服务编码
    model.service.serviceMode: 服务方式
    model.service.serviceModeMeaning: 服务方式
    model.service.serviceType: 服务类别
    model.service.serviceTypeMeaning: 服务类别
    model.serviceDefinition.categoryDescription: 流程分类
    model.serviceDefinition.defaultValue: 参数默认值
    model.serviceDefinition.documentDescription: 流程单据
    model.serviceDefinition.documentId: 流程单据
    model.serviceDefinition.enabledFlag: 启用
    model.serviceDefinition.expression: 表达式
    model.serviceDefinition.interfaceParameterTypeMeaning: 参数类型
    model.serviceDefinition.parameterName: 参数名称
    model.serviceDefinition.parameterSourceMeaning: 参数来源
    model.serviceDefinition.parameterValue: 参数值
    model.serviceDefinition.serviceCode: 服务编码
    model.serviceDefinition.serviceId: 接口定义
    model.serviceDefinition.serviceMode: 服务方式
    model.serviceDefinition.serviceModeMeaning: 服务方式
    model.serviceDefinition.serviceType: 服务类别
    model.serviceDefinition.serviceTypeMeaning: 服务类别
    view.message.setValueAndSource: 请设置参数值和参数来源
    view.title.create: 新建接口定义
    view.title.edit: 编辑接口定义
    view.title.editParams: 编辑参数
    view.title.interfaceDefinition: 接口定义
    view.title.parameter: 参数
    view.title.serviceDefinition: 服务定义
  startByTask:
    model.startByTask.endTime: 结束时间
    model.startByTask.startTime: 创建时间
    view.message.title: 我发起的流程
    view.message.title.confirmBack: 确认撤回吗?
    view.message.title.confirmRemind: 确认催办吗?
  task:
    model.task.actName: 节点名称
    model.task.approver: 审批人
    model.task.comment: 驳回意见
    model.task.creationTime: 创建时间
    view.message.approverUsers: 指定审批人
    view.message.carbonCopyUsers: 抄送人
    view.message.comment: 审批意见
    view.message.reject: 指定驳回节点
    view.message.selectAct: 请选择节点
    view.message.title: 我的待办列表
    view.message.title.confirmTip: '确认{actionName}吗?'
    view.message.title.detail: 待办明细
    view.option.ApproveAndAddSign: 同意并加签
    view.option.addApprover: 指定审批人
    view.option.addCc: 添加抄送
    view.option.addOrderFlow: 指定顺序流
    view.option.addUser: 加签
    view.option.approved: 审批通过
    view.option.deal: 办理
    view.option.delegate: 转交
    view.option.orderFlowName: 顺序流名称
    view.option.rejected: 审批拒绝
  tassk:
    model.task.comment: 驳回意见
# hzeo is hzero
#hzeo:
#  common:
#    userUI.view.filterBar.display: 显示
#    userUI.view.filterBar.field: 字段
#    userUI.view.filterBar.lock: lock
#    userUI.view.filterBar.orderSeq: 排序
hzero:
  common:
    userUI.view.filterBar.display: 显示
    userUI.view.filterBar.field: 字段
    userUI.view.filterBar.lock: lock
    userUI.view.filterBar.orderSeq: 排序
    action: 操作
    active: 激活
    basicLayout.accountNoBind: 系统检测到您的账号尚未绑定
    basicLayout.emptyText: 您已读完所有消息
    basicLayout.gotoUserMessage: 进入消息中心
    basicLayout.greetMessage: 尊敬的用户您好
    basicLayout.menuSelect: 菜单搜索
    basicLayout.passwordExpireMsg: 您的密码即将到期，为保证消息的正常接收及您的账户安全，和后续的正常使用，请前往
    basicLayout.passwordReset: 系统密码为初始密码
    basicLayout.safeMessage1: 为保证消息的正常接收及您的账户安全，请前往
    basicLayout.safeMessage2: 进行修改。
    basicLayout.userInfo: 个人中心
    basicLayout.viewMore: 查看更多
    btn.action: 操作
    btn.add: 新增
    btn.delete: 删除
    btn.release: 发布
    btn.save: 保存
    button.action: 操作
    button.add: 新增
    button.addCard: 添加卡片
    button.addChildren: 新增下级
    button.addServer: 添加服务器
    button.autoReload: 自动刷新
    button.back: 返回
    button.cancel: 取消
    button.cancelAutoReload: 取消自动刷新
    button.checkResult: 查看结果
    button.clean: 清除
    button.clear: 清除
    button.close: 关闭
    button.closeAll: 关闭全部
    button.closeOther: 关闭其他
    button.collapseAll: 全部收起
    button.collected: 收起查询
    button.continue: 继续
    button.copy: 复制
    button.create: 新建
    button.delete: 删除
    button.deleteLine: 删除行
    button.deploy: 部署记录
    button.detail: 详情
    button.disable: 禁用
    button.download: 下载
    button.downloadServiceInf: 下载服务信息
    button.edit: 编辑
    button.editResult: 编辑结果
    button.enable: 启用
    button.expand: 展开
    button.expandAll: 全部展开
    button.export: 导出
    button.identity: 识别
    button.import: 导入
    button.next: 下一步
    button.ok: 确定
    button.option: 更多
    button.oriConfig: 还原原始配置
    button.pause: 暂停
    button.pay: 支付
    button.preview: 预览
    button.previous: 上一步
    button.refresh: 刷新
    button.refund: 退款
    button.refundReason: 拒绝原因
    button.refuse: 拒绝
    button.release: 发布
    button.reload: 刷新
    button.remove: 移除
    button.republish: 重新发布
    button.reset: 重置
    button.result: 结果
    button.resume: 恢复
    button.review: 预览
    button.revoke.delete: 撤销删除
    button.save: 保存
    button.search: 查询
    button.select: 选择
    button.send: 发送
    button.setting: 设置
    button.settingLayout: 设置布局
    button.submit: 提交
    button.sure: 确定
    button.sureAndRelease: 确认并发布
    button.test: 测试
    button.trigger: 执行
    button.up: 收起
    button.update: 修改
    button.updatePassword: 更新密码
    button.upload: 上传
    button.view: 查看
    button.viewMore: 更多查询
    cards.message.messageCenter: 消息中心
    cards.message.platformAnnounce: 平台公告
    cellphone: 手机号
    component.search: 搜索历史
    components.charts.bad: 差
    components.charts.excellent: 优
    components.charts.good: 良
    components.charts.middle: 中
    components.charts.target: '目标值: {target}%'
    components.dataAudit.changeHistory: 数据变更历史
    components.dataAudit.field: 字段
    components.dataAudit.newValue: 现值
    components.dataAudit.oldValue: 原值
    components.dataAudit.operationType: 操作类型
    components.dataAudit.version: 版本
    components.dataAudit.viewHistory: 查看数据历史
    components.dataHierarchies.dataHierarchyName: 数据层级名称
    components.dataHierarchies.dataHierarchyVal: 数据层级值
    components.dynamicTable.notification.Selected: 没有选中要删除的数据
    components.dynamicTable.notification.illegal: '非法的调用, 请联系管理员'
    components.dynamicTable.notification.url: 表格没有提供删除URL
    components.dynamicTable.notification.urlOrMore: 表格没有提供 删除URL 或 批量删除URL
    components.dynamicTable.notification.urls: 表格没有提供批量删除URL
    components.excelExport.export: 导出
    components.excelExport.selectColumns: 选择要导出的列
    components.excelExport.setCondition: 设置导出条件
    components.export: 导出Excel
    components.export.async: 异步
    components.export.columns: 选择要导出的列
    components.export.condition: 设置导出条件
    components.export.maxSheet: 最大sheet页
    components.export.singleSheet: 单sheet最大数量
    components.export.type: 导出类型
    components.list.item: 项
    components.list.select: 已选择
    components.login.captcha: 获取验证码
    components.login.count: '{count} s'
    components.lov.notification.undefined: 值集视图未定义!
    components.noticeIcon.null: 暂无数据
    components.operationAudit.history: 操作历史
    components.operationAudit.operatedBy: 操作人
    components.operationAudit.operatedRemark: 操作内容
    components.operationAudit.operatedTime: 操作时间
    components.operationAudit.operationBy: 操作人
    components.operationAudit.operationCode: 操作代码
    components.operationAudit.operationName: 操作名称
    components.operationAudit.viewHistory: 查看操作历史
    components.searchPage.title: 默认标题
    components.standardTable.atAll: 总计
    components.standardTable.item: 项
    components.standardTable.select: 已选择
    currency.none: 无
    currency.ten.thousand: 万元
    current: 当前
    custom: 自定义
    date.active: 有效日期
    date.active.from: 有效期从
    date.active.to: 有效日期至
    date.creation: 创建时间
    date.creation.from: 创建日期从
    date.creation.to: 创建日期至
    date.register: 注册时间
    date.register.from: 注册时间从
    date.register.to: 注册时间至
    date.release: 发布日期
    date.release.from: 发布日期从
    date.release.to: 发布日期至
    date.releaseTime: 发布时间
    date.unit.day: 天
    date.unit.hours: 小时
    date.unit.minutes: 分钟
    email: 邮箱
    explain: 说明
    gender: 性别
    gender.female: 女
    gender.male: 男
    globalException.button.backWorkplace: 返回首页
    globalExcetion.button.backWorkplace: 返回首页
    interfaceCode: 接口编码
    interfaceName: 接口名称
    interfaceUrl: 接口地址
    jobGroup.auto: 自动注册
    jobGroup.byHand: 手动录入
    link.about: 了解详情
    message.addSign: 加签
    message.agree: 同意
    message.autoDelegate: 自动转交
    message.carbonCopy: 抄送
    message.confirm.apply: 是否应用该规则？
    message.confirm.cancel: 是否取消导出？
    message.confirm.ckEditor: 请输入富文本内容
    message.confirm.delete: 是否删除此条记录？
    message.confirm.generate: 是否生成订单？
    message.confirm.giveUpTip: 你有修改未保存，是否确认离开？
    message.confirm.pay: 是否确定支付？
    message.confirm.refund: 是否确认退款？
    message.confirm.remove: 确定删除选中数据？
    message.confirm.selected.atLeast: 请至少选择一行数据
    message.confirm.stopProcess: 是否终止此条记录
    message.confirm.suspend: 是否挂起此条记录
    message.confirm.title: 提示
    message.dataExists: 数据已存在
    message.delegate: 转交
    message.errorLocation: 错误页面
    message.errorMessage: 错误信息
    message.globalError: 很抱歉！出现预料之外的错误
    message.jump: 跳转
    message.loginOut: 退出登录
    message.priority.day: 天
    message.priority.hours: 小时
    message.priority.minutes: 分钟
    message.priority.overTime: '已超时:'
    message.priority.remainTime: '剩余时间:'
    message.recall: 撤回
    message.reject: 拒绝
    message.validation.atLeast: 请至少选择一条数据
    model.common.tenantId: 租户
    model.param: 参数
    model.tenantName: 租户
    notActive: 未激活
    notification.403: 抱歉，你无权访问该页面
    notification.404: 抱歉，你访问的页面不存在
    notification.500: 抱歉，服务器出错了
    notification.download.error: 下载异常
    notification.error: 操作失败
    notification.error.webSocket: webSocket连接失败!
    notification.export.async: 异步导出任务已提交
    notification.export.error: 导出异常
    notification.invalid: 校验不通过
    notification.network.typeError: 网络请求异常
    notification.success: 操作成功
    notification.success.create: 创建成功
    notification.success.delete: 删除成功
    notification.success.save: 保存成功
    notification.typeError: 网络请求异常
    notification.typeError.description: 请稍后重试
    notification.warn: 操作异常1
    pagination.total: '显示 {range1} - {range2} 共 {total} 条'
    phone: 手机
    predefined: 预定义
    priority: 优先级
    priority.height: 高
    priority.high: 高
    priority.low: 低
    priority.medium: 中
    process.readFlagN: 未读
    process.readFlagY: 已读
    processStatus.finished: 已结束
    processStatus.running: 运行中
    processStatus.suspended: 挂起中
    publishUrl: 发布地址
    releaseType: 发布类型
    remark: 备注
    requestError: 请求错误
    richTextEditor.fileDescription: 文件说明
    richTextEditor.fileLink: 文件链接
    richTextEditor.insertFile: 插入文件
    richTextEditor.insertImage: 插入文件
    richTextEditor.localUpload: 本地上传
    richTextEditor.selectFile: 选择图片
    richTextEditor.selectUpload: 选择文件上传
    richTextEditor.startUpload: 开始上传
    richTextEditor.uploading: 正在上传
    scope.all: 全部
    scope.global: 全局
    scope.org: 当前组织
    serverCode200: 服务器成功返回请求的数据。
    serverCode201: 新建或修改数据成功。
    serverCode202: 一个请求已经进入后台排队（异步任务）。
    serverCode204: 删除数据成功。
    serverCode400: 发出的请求有错误，服务器没有进行新建或修改数据的操作。
    serverCode401: 用户没有权限（令牌、用户名、密码错误）。
    serverCode403: 用户得到授权，但是访问是被禁止的。
    serverCode404: 发出的请求针对的是不存在的记录，服务器没有进行操作。
    serverCode406: 请求的格式不可得。
    serverCode410: 请求的资源被永久删除，且不会再得到的。
    serverCode422: 当创建一个对象时，发生一个验证错误。
    serverCode500: 服务器发生错误，请检查服务器。
    serverCode502: 网关错误。
    serverCode503: 服务不可用，服务器暂时过载或维护。
    serverCode504: 网关超时。
    source: 来源
    startUpload: 开始上传
    status: 状态
    status.ApproveAndAddSign: 同意并加签
    status.abnormal: 故障
    status.addSign: 加签
    status.agree: 同意
    status.async: 异步
    status.autoDelegate: 自动转交
    status.cancel: 取消
    status.canceled: 已取消
    status.carbonCopy: 抄送
    status.clientHostUrl: 客户端地址
    status.create: 新建
    status.delegate: 转交
    status.delete: 删除
    status.detail: 查看详情
    status.disable: 禁用
    status.edit: 编辑
    status.enable: 启用
    status.enableFlag: 启用
    status.finished: 已结束
    status.ip: IP
    status.jump: 驳回
    status.loginEncPwd: 登录密码
    status.loginUser: 登录用户名
    status.no: 否
    status.noFlag: 故障
    status.normal: 正常
    status.port: 端口
    status.processing: 正在进行
    status.read: 已读
    status.recall: 撤回
    status.reject: 拒绝
    status.requiredFlag: 是否必输
    status.reset: 重置
    status.revoke: 撤销
    status.running: 运行中
    status.search: 查询
    status.ssoLoginUrl: 单点登录地址
    status.ssoServerUrl: 单点登录服务器地址
    status.startFlag: 正常
    status.stopFlag: 未在监控
    status.suspended: 挂起中
    status.sync: 同步
    status.unmonitor: 未在监控
    status.unread: 未读
    status.yes: 是
    table.column.option: 操作
    table.column.remark: 备注
    tagSelect.all: 全部
    time.creation.from: 创建日期从
    time.creation.to: 创建日期至
    title.authorityCodeImport: 授权码导入
    title.batchImport: 批量导入
    title.content: 必须先选择上传类型
    title.disposeInvite: 合作邀约处理
    title.exception501: 服务不可用
    title.formula: 公式
    title.globalException: 全局错误历史记录
    title.historyDetail: 历史详情
    title.importErp: 导入ERP
    title.incrSyncConfigDetail: 增量同步配置详情
    title.individuation.allowThousandth: 是否启用千分位
    title.individuation.col: 字段列
    title.individuation.formInputAllowThousandth: 是否启用千分位
    title.individuation.formInputDbc2sbc: 是否转换全角到半角
    title.individuation.formInputDisabled: 是否不可编辑
    title.individuation.formInputPropsAllowThousandth: 是否启用千分位
    title.individuation.formInputPropsDbc2sbc: 是否转换全角到半角
    title.individuation.formInputPropsDisabled: 是否不可编辑
    title.individuation.formInputPropsMax: 最大值
    title.individuation.formInputPropsMin: 最小值
    title.individuation.formInputPropsPrecision: 数值精度
    title.individuation.formInputPropsSize: 控件大小
    title.individuation.formInputPropsTrim: 是否删除前后空格
    title.individuation.formInputPropsTrimAll: 是否删除所有空格
    title.individuation.formInputPropsTypeCase: 组件的大小写输入限制
    title.individuation.formInputSize: 控件大小
    title.individuation.formInputTrim: 是否删除前后空格
    title.individuation.formInputTrimAll: 是否删除所有空格
    title.individuation.formInputTypeCase: 组件的大小写输入限制
    title.individuation.required: 是否必输
    title.individuation.row: 字段行
    title.inquiryConfigDetail: 查询配置详情
    title.permissionImport: 权限导入
    title.roleImport: 角色导入
    title.searchConfigDetail: 搜索配置详情
    title.selectFile: 选择文件
    title.subAccountImport: 账户导入
    title.templateImport: 模板导入
    title.uiPagePreview: 页面预览
    title.uploadImage: 上传图片
    title.userInfo: 个人中心
    title.userMessage: 站内消息
    title.wordEdit: 文档编辑
    title.workspace: 工作台
    upload.error.size: '上传文件大小不能超过：{fileSize}'
    upload.error.size.custom: '上传文件大小不能超过: {fileSize}'
    upload.error.type: '上传文件类型必须是：{fileType}'
    upload.error.type.null: 上传文件类型缺失，请检查类型
    upload.modal.title: 附件
    upload.status.error: 上传失败
    upload.support: '上传格式：{type}'
    upload.template: 附件模板
    upload.text: 上传附件
    upload.txt: 上传
    upload.view: 查看附件
    uploading: 正在上传
    validation.atLeast: 请至少选择一条数据
    validation.atLeastOneRecord: 请至少选择一条数据
    validation.code: 大小写及数字，必须以字母、数字开头，可包含“-”、“_”、“.”、“/”
    validation.codeLower: 全小写及数字，必须以字母、数字开头，可包含“-”、“_”、“.”、“/”
    validation.codeUpper: 全大写及数字，必须以字母、数字开头，可包含“-”、“_”、“.”、“/”
    validation.date.after: '{startDate}不能晚于{endDate}'
    validation.date.before: '{startDate}不能早于{endDate}'
    validation.email: 邮箱格式不正确
    validation.httpUrl: 请输入以“http/https”开头的正确网址
    validation.ip: ip地址不正确
    validation.max: '长度不能超过{max}个字符'
    validation.notChange: 未更改
    validation.notNull: '{name}不能为空'
    validation.password: '至少包含数字/字母/字符2种组合,长度至少为6个字符'
    validation.phone: 手机格式不正确
    validation.phoneRequired: 请输入手机号
    validation.requireInput: '请输入{name}'
    validation.requireSelect: '请选择{name}'
    validation.trim: 前后不能为空
    view.message.method: 方法
    view.message.title.list: 数据层级配置
    view.tenantSelect.defaultTenant: 默认租户
    view.tenantSelect.modal.all: 全部
    view.tenantSelect.modal.history: 最近
    view.tenantSelect.seeAll: 查看所有租户
    view.tenantSelect.title: 选择租户
    view.todolist.mytodolist: 我的待办事项
    view.todolist.workflow: 工作流
    view.workflow.allDetail: 查看所有
  hzeroUI:
    Calendar.lang.backToToday: 返回今天
    Calendar.lang.clear: 清除
    Calendar.lang.dateFormat: YYYY年M月D日
    Calendar.lang.dateSelect: 选择日期
    Calendar.lang.dateTimeFormat: YYYY年M月D日 HH时mm分ss秒
    Calendar.lang.dayFormat: D日
    Calendar.lang.decadeSelect: 选择年代
    Calendar.lang.month: 月
    Calendar.lang.monthSelect: 选择月份
    Calendar.lang.nextCentury: 下一世纪
    Calendar.lang.nextDecade: 下一年代
    Calendar.lang.nextMonth: 下个月 (翻页下键)
    Calendar.lang.nextYear: 下一年 (Control键加右方向键)
    Calendar.lang.now: 此刻
    Calendar.lang.ok: 确定
    Calendar.lang.placeholder: 请选择日期
    Calendar.lang.previousCentury: 上一世纪
    Calendar.lang.previousDecade: 上一年代
    Calendar.lang.previousMonth: 上个月 (翻页上键)
    Calendar.lang.previousYear: 上一年 (Control键加左方向键)
    Calendar.lang.rangePlaceholder.0: 开始日期
    Calendar.lang.rangePlaceholder.1: 结束日期
    Calendar.lang.timeSelect: 选择时间
    Calendar.lang.today: 今天
    Calendar.lang.weekSelect: 选择周
    Calendar.lang.year: 年
    Calendar.lang.yearFormat: YYYY年
    Calendar.lang.yearSelect: 选择年份
    Calendar.timePickerLocale.placeholder: 请选择时间
    DatePicker.lang.backToToday: 返回今天
    DatePicker.lang.clear: 清除
    DatePicker.lang.dateFormat: YYYY年M月D日
    DatePicker.lang.dateSelect: 选择日期
    DatePicker.lang.dateTimeFormat: YYYY年M月D日 HH时mm分ss秒
    DatePicker.lang.dayFormat: D日
    DatePicker.lang.decadeSelect: 选择年代
    DatePicker.lang.month: 月
    DatePicker.lang.monthSelect: 选择月份
    DatePicker.lang.nextCentury: 下一世纪
    DatePicker.lang.nextDecade: 下一年代
    DatePicker.lang.nextMonth: 下个月 (翻页下键)
    DatePicker.lang.nextYear: 下一年 (Control键加右方向键)
    DatePicker.lang.now: 此刻
    DatePicker.lang.ok: 确 定
    DatePicker.lang.placeholder: 请选择日期
    DatePicker.lang.previousCentury: 上一世纪
    DatePicker.lang.previousDecade: 上一年代
    DatePicker.lang.previousMonth: 上个月 (翻页上键)
    DatePicker.lang.previousYear: 上一年 (Control键加左方向键)
    DatePicker.lang.rangePlaceholder.0: 开始日期
    DatePicker.lang.rangePlaceholder.1: 结束日期
    DatePicker.lang.timeSelect: 选择时间
    DatePicker.lang.today: 今天
    DatePicker.lang.weekSelect: 选择周
    DatePicker.lang.year: 年
    DatePicker.lang.yearFormat: YYYY年
    DatePicker.lang.yearSelect: 选择年份
    DatePicker.timePickerLocale.placeholder: 请选择时间
    Modal.cancelText: 取消
    Modal.justOkText: 知道了
    Modal.okText: 确定
    Pagination.first_page: 首页
    Pagination.items_per_page: 条/页
    Pagination.jump_to: 跳至
    Pagination.jump_to_confirm: 确定
    Pagination.label_items_per_page: 每页行数
    Pagination.last_page: 末页
    Pagination.next_3: 向后 3 页
    Pagination.next_5: 向后 5 页
    Pagination.next_page: 下一页
    Pagination.page: 页
    Pagination.prev_3: 向前 3 页
    Pagination.prev_5: 向前 5 页
    Pagination.prev_page: 上一页
    Popconfirm.cancelText: 取消
    Popconfirm.okText: 确定
    Select.notFoundContent: 无匹配结果
    Table.emptyText: 暂无数据
    Table.filterConfirm: 确定
    Table.filterReset: 重置
    Table.filterTitle: 筛选
    Table.selectAll: 全选当页
    Table.selectInvert: 反选当页
    TimePicker.placeholder: 请选择时间
    Transfer.itemUnit: 项
    Transfer.itemsUnit: 项
    Transfer.notFoundContent: 无匹配结果
    Transfer.searchPlaceholder: 请输入搜索内容
    Upload.previewFile: 预览文件
    Upload.removeFile: 删除文件
    Upload.uploadError: 上传错误
    Upload.uploading: 文件上传中
  region:
    button.add: 新建下级地区
    button.create: 新建根节点
  workplace:
    view.message.loadCardError: 加载卡片失败
    view.title.cardsSetting: 卡片设置
    view.title.myWorkplace: 我的工作台
